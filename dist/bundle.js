!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=11)}([function(e,t){e.exports=React},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){var r={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),i=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),a=null,l=0,u=[],c=n(14);function s(e,t){for(var n=0;n<e.length;n++){var o=e[n],i=r[o.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(y(o.parts[a],t))}else{var l=[];for(a=0;a<o.parts.length;a++)l.push(y(o.parts[a],t));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function d(e,t){var n=i(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=i(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function p(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function h(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),m(t,e.attrs),d(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function y(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var u=l++;n=a||(a=h(t)),r=b.bind(null,n,u,!1),o=b.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),d(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=c(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){p(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){p(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return s(n,t),function(e){for(var o=[],i=0;i<n.length;i++){var a=n[i];(l=r[a.id]).refs--,o.push(l)}e&&s(f(e,t),t);for(i=0;i<o.length;i++){var l;if(0===(l=o[i]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete r[l.id]}}}};var v=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function b(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=v(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t){e.exports=ReactDOM},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.open=function(e,t){var n=s[e];if(!n)return void alert("该应用已损坏!");(0,r.default)({width:t.width,height:t.height,content:React.createElement(n,null)})};var r=c(n(23)),o=(c(n(6)),c(n(30))),i=c(n(33)),a=c(n(7)),l=c(n(8)),u=c(n(9));function c(e){return e&&e.__esModule?e:{default:e}}var s={finder:o.default,chrome:i.default,"game-of-life":a.default,editor:l.default,"js-view":u.default}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t){var n=this,r=t.dom,o=t.onDrag,i=t.onDragEnd;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.dragStart=function(e){n.lx=e.pageX,n.ly=e.pageY,window.addEventListener("mousemove",n.drag),window.addEventListener("mouseup",n.dragEnd)},this.dragEnd=function(e){window.removeEventListener("mousemove",n.drag),window.removeEventListener("mouseup",n.dragEnd),n.cb(e,n.onDragEnd)},this.drag=function(e){n.cb(e,n.onDrag)},this.onDrag=o,this.onDragEnd=i,r.addEventListener("mousedown",this.dragStart)}return r(e,[{key:"cb",value:function(e,t){if(t){var n=e.pageX-this.lx,r=e.pageY-this.ly;this.lx=e.pageX,this.ly=e.pageY,t(n,r)}}}]),e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=document.createElement("div");function n(){document.getElementById("app").style.filter="none",o.default.unmountComponentAtNode(t)&&t.parentNode&&t.parentNode.removeChild(t),e.onCancel&&e.onCancel.apply(e,arguments)}return document.body.appendChild(t),document.getElementById("app").style.filter="blur(10px)",o.default.render(r.default.createElement(i.default,{onCancel:n},e.content),t),{destroy:n}};var r=a(n(0)),o=a(n(3)),i=a(n(27));function a(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=l(o),a=l(n(36));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleStart=function(){n.world.start()},n.handleStop=function(){n.world.stop()},n.handleTick=function(){n.setState({times:n.state.times+1})},n.state={times:0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){this.world=new a.default({width:600,height:400,speed:10,data:[[1,7],[1,8],[2,7],[2,8],[8,6],[8,7],[8,8],[9,5],[9,6],[9,8],[9,9],[10,5],[10,6],[10,8],[10,9],[11,5],[11,6],[11,7],[11,8],[11,9],[12,4],[12,5],[12,9],[12,10],[15,6],[15,7],[16,5],[16,6],[16,7],[16,8],[16,9],[17,5],[18,7],[18,8],[18,9],[19,9],[20,7],[20,8],[21,7],[21,8],[24,2],[24,3],[24,7],[24,8],[25,2],[25,4],[25,6],[25,8],[26,3],[26,4],[26,5],[26,6],[26,7],[27,4],[27,5],[27,6],[28,5],[35,5],[35,6],[36,5],[36,6]],onTick:this.handleTick}),this.world.start(),this.refs.container.appendChild(this.world.dom)}},{key:"render",value:function(){var e=this.state.times;return i.default.createElement("div",null,i.default.createElement("div",null,i.default.createElement("button",{onClick:this.handleStart},"start"),i.default.createElement("button",{onClick:this.handleStop},"stop"),i.default.createElement("span",null,"迭代次数: ",e)),i.default.createElement("div",{ref:"container"}))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(40);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleConfirm=function(){n.props.onConfirm&&n.props.onConfirm(n.editor.getValue())},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){this.editor=ace.edit(this.refs.editor),this.editor.setTheme("ace/theme/monokai"),this.editor.session.setMode("ace/mode/javascript")}},{key:"render",value:function(){return i.default.createElement("div",{className:"editor",onClick:function(e){e.stopPropagation(),e.preventDefault()}},i.default.createElement("div",null,i.default.createElement("button",{onClick:this.handleConfirm},"确定")),i.default.createElement("div",{ref:"editor",style:{width:"100%",height:"100%"}},this.props.children))}}]),t}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=d(o);n(42);var a=n(44),l=d(n(47)),u=n(10),c=d(u),s=d(n(52)),f=d(n(53));function d(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.save=function(){var e=n.modules.map(function(e){return{id:e.id,type:e.type,name:e.name,x:e.x,y:e.y,width:e.width,height:e.height,input:e.input.map(function(e){return e.id}),func:e.func.toString()}});n.download(JSON.stringify(e,void 0,2),"demo.json")},n.toggle=function(){n.running?(n.modules.map(function(e){return e.reset()}),n.running=null,clearInterval(n.interval),n.interval=null,window[u.TICK_COUNT]=0):(n.running=!0,n.interval=setInterval(function(){n.tick()},1e3)),n.forceUpdate()},n.handleDrop=function(e,t){var r=t.target.getBoundingClientRect(),o=t.pageX-r.x,i=t.pageY-r.y;e.type===u.TYPE_VIEW?n.modules.push(new s.default({x:o,y:i})):n.modules.push(new c.default({x:o,y:i})),n.forceUpdate()},n.handleLink=function(e){n.currentInput?(e.addInput(n.currentInput),n.currentInput=null,window.removeEventListener("mousemove",n.linkAnimate),n.linkAnimate=null,n.refs.lines.removeChild(n.tmpPath),n.tmpPath=null,n.forceUpdate()):e.type!==u.TYPE_VIEW&&(n.currentInput=e,n.tmpPath=document.createElementNS("http://www.w3.org/2000/svg","path"),n.tmpPath.setAttribute("class","link-path"),n.refs.lines.appendChild(n.tmpPath),n.linkAnimate=function(t){var r=n.refs.content.getBoundingClientRect();n.tmpPath.setAttribute("d",n.pathData(e,{x:t.pageX-r.x,y:t.pageY-r.y}))},window.addEventListener("mousemove",n.linkAnimate))},n.handleDrag=function(e,t,r){e.x+=t,e.y+=r,n.forceUpdate()},n.modules=[],window[u.TICK_COUNT]=0,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"load",value:function(e){this.modules=e.map(function(e){var t=new(e.type===u.TYPE_VIEW?s.default:c.default)({id:e.id,type:e.type,x:e.x,y:e.y,width:e.width,height:e.height});return t.setFunc(e.func),{m:t,input:e.input}}).map(function(e,t,n){var r;return(r=e.m).addInput.apply(r,function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(e.input.map(function(e){return n.find(function(t){return t.m.id===e}).m}))),e.m}),this.forceUpdate()}},{key:"download",value:function(e,t){var n=document.createElement("a");n.download=t,n.style.display="none";var r=new Blob([e],{type:"text/plain"});n.href=URL.createObjectURL(r),document.body.appendChild(n),n.click(),document.body.removeChild(n)}},{key:"tick",value:function(){var e=this.modules.filter(function(e){return e.type===u.TYPE_VIEW});if(e.length){var t=e[0];window[u.TICK_COUNT]+=1,t.output()}}},{key:"pathData",value:function(e,t){if(!t.width)return"M"+e.x+" "+e.y+" L"+t.x+" "+t.y;var n=e.x+e.width/2+20,r=e.x-e.width/2-20,o=e.y-e.height/2-20,i=e.y+e.height/2+20,a=t.x-t.width/2-20,l=t.y-t.height/2-20,u=t.y+t.height/2+20,c="M"+e.x+" "+e.y+" L"+n+" "+e.y+" ";return n<a?c+="L"+n+" "+t.y+" L"+a+" "+t.y+" ":i<l?c+="L"+n+" "+l+" L"+a+" "+l+" L"+a+" "+t.y+" ":o>u?c+="L"+n+" "+u+" L"+a+" "+u+" L"+a+" "+t.y+" ":e.y>t.y?c+="L"+n+" "+Math.max(u,i)+" L"+Math.min(a,r)+" "+Math.max(u,i)+" L"+Math.min(a,r)+" "+t.y+" ":c+="L"+n+" "+Math.min(l,o)+" L"+Math.min(a,r)+" "+Math.min(l,o)+" L"+Math.min(a,r)+" "+t.y+" ",c+="L"+t.x+" "+t.y}},{key:"handleZoom",value:function(e){console.log("===",e)}},{key:"render",value:function(){var e=this,t=this.modules;return i.default.createElement("div",{className:"js-view"},i.default.createElement("div",{className:"toolbar"},i.default.createElement("button",{onClick:this.toggle,className:"btn-start"},this.running?"停止":"开始"),i.default.createElement("button",{onClick:function(){return e.load(f.default)}},"加载"),i.default.createElement("button",{onClick:this.save},"保存")),i.default.createElement("div",{className:"sidebar"},c.default.TYPES.map(function(e){return(0,a.DragSource)(e.key,e)(i.default.createElement("div",{className:"module"},e.name))})),i.default.createElement("div",{className:"content",ref:"content"},(0,a.DropTarget)(c.default.TYPES.map(function(e){return e.key}),{onDrop:this.handleDrop})(i.default.createElement("svg",null,i.default.createElement("g",{className:"lines",ref:"lines"},t.map(function(t){return i.default.createElement("g",{key:t.id},t.input.map(function(n,r){return i.default.createElement("g",{key:r},i.default.createElement("path",{className:"link-path",d:e.pathData(n,t)}))}))})),i.default.createElement("g",{className:"modules"},t.map(function(t,n){return i.default.createElement(l.default,{key:t.id,module:t,onLink:e.handleLink,onZoom:e.handleZoom,onDrag:e.handleDrag})}))))))}}]),t}();t.default=p},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.TICK_COUNT=exports.TYPE_VIEW=exports.TYPE_FUNCTION=void 0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),_class,_temp,_common=__webpack_require__(50),_func=__webpack_require__(51),FUNC=_interopRequireWildcard(_func);function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var TYPE_FUNCTION=exports.TYPE_FUNCTION="FUNCTION",TYPE_VIEW=exports.TYPE_VIEW="VIEW",TICK_COUNT=exports.TICK_COUNT=Symbol(1),M=(_temp=_class=function(){function M(e){var t=e.id,n=e.input,r=void 0===n?[]:n,o=e.func,i=e.x,a=e.y,l=e.width,u=void 0===l?50:l,c=e.height,s=void 0===c?50:c,f=e.type,d=void 0===f?TYPE_FUNCTION:f;_classCallCheck(this,M),this.id=t||(0,_common.uuid)(),this.input=r,this.x=i,this.y=a,this.width=u,this.height=s,this.func=FUNC[o]||o||function(){},this.name=M.TYPES.find(function(e){return e.key===d}).name,this.type=d,this.tickCount=0}return _createClass(M,[{key:"reset",value:function(){this.tickCount=0,this.lastData=void 0}},{key:"addInput",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];this.input=this.input.concat(t)}},{key:"rmInput",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];this.input=this.input.filter(function(e){return-1===t.indexOf(e)})}},{key:"clearInput",value:function(){this.input=[]}},{key:"setDom",value:function(e,t){e&&!this.dom&&(this.dom=e,t(this.dom,this))}},{key:"setFunc",value:function setFunc(func){func&&("function"==typeof func?this.func=func:"string"==typeof func&&eval("this.func = "+func))}},{key:"output",value:function(){return this.tickCount<window[TICK_COUNT]&&(this.tickCount+=1,this.lastData=this.func.apply(this,_toConsumableArray(this.input.map(function(e){return e.output()})))),this.lastData}}]),M}(),_class.TYPES=[{key:TYPE_FUNCTION,name:"ƒ(x)"},{key:TYPE_VIEW,name:"V(x)"}],_temp);exports.default=M},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=u(o),a=u(n(3));n(12);var l=u(n(15));function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return i.default.createElement("div",{style:{width:"100%",height:"100%"}},i.default.createElement(l.default,null))}}]),t}();a.default.render(i.default.createElement(c,null),document.getElementById("app"))},function(e,t,n){var r=n(13);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"*{box-sizing:border-box;user-select:none;outline:none!important}body,html{margin:0}#app,body,html{width:100%;height:100%}",""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=h(o);n(16);var a=h(n(20)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(4)),u=(h(n(7)),h(n(9)),h(n(54))),c=h(n(57)),s=h(n(61)),f=h(n(6)),d=h(n(64)),p=h(n(67));function h(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"handleClick",value:function(e){"launchpad"!==e.key?l.open(e.key,{width:600,height:400}):(0,f.default)({content:i.default.createElement(d.default,{data:p.default})})}},{key:"render",value:function(){return i.default.createElement(a.default,{interval:0,currentPage:0},i.default.createElement("div",{className:"desktop"},i.default.createElement(s.default,null),i.default.createElement(c.default,{path:"/Users/lanyuechen/Desktop"}),i.default.createElement("div",{className:"dock-container"},i.default.createElement(u.default,{data:p.default,onClick:this.handleClick}))))}}]),t}();t.default=m},function(e,t,n){var r=n(17);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){var r=n(18);(e.exports=n(1)(!1)).push([e.i,".desktop{position:relative;width:100%;height:100%;background:url("+r(n(19))+") 50%;background-size:cover}.desktop .dock-container{position:absolute;bottom:0;left:0;width:100%;display:flex;justify-content:center}",""])},function(e,t){e.exports=function(e){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},function(e,t,n){e.exports=n.p+"images/bg.jpg"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o,i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),l=n(0),u=function(e){return e&&e.__esModule?e:{default:e}}(l);function c(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}n(21);var s=(o=r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return i.call(n),n.state={itemWidth:0,itemHeight:0,idx:e.currentPage,count:u.default.Children.count(e.children),transition:!0},window.addEventListener("keydown",n.handleKey),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.Component),a(t,[{key:"componentDidMount",value:function(){var e=this.props.multi,t=this.refs.wrap,n=t.clientWidth,r=t.clientHeight;this.setAuto(this.props),this.setState({itemWidth:n/e,itemHeight:r/e})}},{key:"componentWillUnmount",value:function(){clearInterval(this.interval),window.removeEventListener("keydown",this.handleKey)}},{key:"componentWillReceiveProps",value:function(e){e.interval!==this.props.interval&&this.setAuto(e),e.children!==this.props.children&&this.setState({count:u.default.Children.count(e.children)})}},{key:"render",value:function(){var e=this.props,t=e.children,n=e.width,r=e.height,o=e.horizon,i=e.next,a=e.prev,l=e.loop,s=e.multi,f=this.state,d=f.itemWidth,p=f.itemHeight,h=f.idx,m=f.count,y=f.transition;p=o?0:p,d=o?d:0;var v=u.default.Children.toArray(t);return l&&s<=m&&(m+=2*s,v=[].concat(c(v.slice(-3)),c(v),c(v.slice(0,3)))),u.default.createElement("div",{className:"carousel",style:{width:n,height:r}},u.default.createElement("div",{className:"wrap",ref:"wrap"},u.default.createElement("div",{ref:"carousel",className:"content",style:{display:o?"flex":"block",width:o?d*m:"100%",height:o?"100%":p*m,left:o?-h*d:0,top:o?0:-h*p,transitionDuration:y?".5s":"0s",transform:l&&s<=m?"translate("+-s*d+"px, "+-s*p+"px)":""}},v.map(function(e,t){return u.default.createElement("div",{key:t,className:"item",style:{width:o?d:"100%",height:o?"100%":p}},e)}))),a&&u.default.createElement("a",{className:"prev",onClick:this.prev},"<"),i&&u.default.createElement("a",{className:"next",onClick:this.next},">"))}}]),t}(),r.defaultProps={width:"100%",height:"100%",interval:5e3,multi:1,step:1,horizon:!0,next:!1,prev:!1,pagination:!1,loop:!1,currentPage:0},i=function(){var e=this;this.handleKey=function(t){t.altKey&&(39===t.keyCode&&e.next(),37===t.keyCode&&e.prev())},this.next=function(){var t=e.props,n=t.step,r=t.loop,o=t.interval,i=e.state,a=i.idx,l=i.count;a+=n,!r&&a>=l&&(a=0),e.setState({transition:!0,idx:a}),e.setAuto(e.props),r&&a>=l&&setTimeout(function(){e.reset()},o+1)},this.prev=function(){var t=e.props.step,n=e.state,r=n.idx,o=n.count;e.setState({transition:!0,idx:r-t<0?o-(o%t==0?1:o%t):r-t}),e.setAuto(e.props)},this.setAuto=function(t){var n=t.interval;n>0?(clearInterval(e.interval),e.interval=setInterval(function(){e.next()},n>20?n:20)):clearInterval(e.interval)},this.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;e.setState({idx:t,transition:!1})}},o);t.default=s},function(e,t,n){var r=n(22);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".carousel .wrap{position:relative;width:100%;height:100%;overflow:hidden}.carousel .wrap .content{position:absolute;transition:left,top,width .5s ease-in 0s;width:100%;height:100%}.carousel .wrap .content .item{width:100%;height:100%}.carousel .next,.carousel .prev{cursor:pointer}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=document.createElement("div");function n(){o.default.unmountComponentAtNode(t)&&t.parentNode&&t.parentNode.removeChild(t),e.onCancel&&e.onCancel.apply(e,arguments)}document.body.appendChild(t);var a=e.width||window.innerWidth/2,l=e.height||window.innerHeight/2,u=void 0===e.x?(window.innerWidth-a)/2:e.x,c=void 0===e.y?(window.innerHeight-l)/2:e.y;return o.default.render(r.default.createElement(i.default,{name:"Finder",onCancel:n,x:u,y:c,width:a,height:l},e.content),t),{destroy:n}};var r=a(n(0)),o=a(n(3)),i=a(n(24));function a(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o,i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),l=n(0),u=s(l);n(25);var c=s(n(5));function s(e){return e&&e.__esModule?e:{default:e}}var f=(o=r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleCancel=function(){n.props.onCancel&&n.props.onCancel()},n.handleMin=function(){console.log("最小化")},n.handleMax=function(){n.originSize?(n.resize(n.originSize),n.originSize=null):(n.originSize=n.rect,n.resize({x:0,y:0,width:window.innerWidth,height:window.innerHeight}))},n.handleResize=function(e,t){var r=e.pageX,o=e.pageY,i=function(e){var i=e.pageX-r,a=e.pageY-o;r=e.pageX,o=e.pageY;var l={};switch(t){case"left-top":l.x=n.rect.x+i,l.y=n.rect.y+a,l.width=n.rect.width-i,l.height=n.rect.height-a;break;case"top":l.y=n.rect.y+a,l.height=n.rect.height-a;break;case"right-top":l.y=n.rect.y+a,l.height=n.rect.height-a,l.width=n.rect.width+i;break;case"right":l.width=n.rect.width+i;break;case"right-bottom":l.height=n.rect.height+a,l.width=n.rect.width+i;break;case"bottom":l.height=n.rect.height+a;break;case"left-bottom":l.x=n.rect.x+i,l.width=n.rect.width-i,l.height=n.rect.height+a;break;case"left":l.x=n.rect.x+i,l.width=n.rect.width-i}n.resize(l)};window.addEventListener("mousemove",i),window.addEventListener("mouseup",function e(){window.removeEventListener("mousemove",i),window.removeEventListener("mouseup",e)})},n.rect={x:e.x,y:e.y,width:e.width,height:e.height},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.Component),a(t,[{key:"componentDidMount",value:function(){var e=this;new c.default({dom:this.refs["drag-handler"],onDrag:function(t,n){e.resize({x:e.rect.x+t,y:e.rect.y+n})}})}},{key:"resize",value:function(e){this.rect=i({},this.rect,e),this.refs.container.style.cssText="\n      left: "+this.rect.x+"px;\n      top: "+this.rect.y+"px;\n      width: "+this.rect.width+"px;\n      height: "+this.rect.height+"px;\n    "}},{key:"render",value:function(){var e=this,t=this.props,n=t.name,r=t.children,o=this.rect,i=o.x,a=o.y,l=o.width,c=o.height;return u.default.createElement("div",{className:"dialog"},u.default.createElement("div",{className:"dialog-container",ref:"container",style:{left:i,top:a,width:l,height:c}},u.default.createElement("div",{className:"dialog-header",ref:"drag-handler"},u.default.createElement("div",{className:"btns"},u.default.createElement("a",{onClick:this.handleCancel},u.default.createElement("svg",{x:"0px",y:"0px",width:"10px",height:"10px",viewBox:"0 -2 20 20"},u.default.createElement("polygon",{fill:"#4d0000",points:"15.9,5.2 14.8,4.1 10,8.9 5.2,4.1 4.1,5.2 8.9,10 4.1,14.8 5.2,15.9 10,11.1 14.8,15.9 15.9,14.8 11.1,10 "}))),u.default.createElement("a",{onClick:this.handleMin},u.default.createElement("svg",{x:"0px",y:"0px",width:"10px",height:"10px",viewBox:"0 -2 20 20"},u.default.createElement("rect",{fill:"#995700",x:"2.4",y:"9",width:"15.1",height:"2"}))),u.default.createElement("a",{onClick:this.handleMax},u.default.createElement("svg",{x:"0px",y:"0px",width:"10px",height:"10px",viewBox:"0 0 20 20"},u.default.createElement("path",{fill:"#006400",d:"M5.3,16H13L4,7v7.7C4.6,14.7,5.3,15.4,5.3,16z"}),u.default.createElement("path",{fill:"#006400",d:"M14.7,4H7l9,9V5.3C15.4,5.3,14.7,4.6,14.7,4z"})))),u.default.createElement("div",{className:"title"},n)),u.default.createElement("div",{className:"dialog-body"},r),u.default.createElement("div",{className:"zoom-area zoom-left-top",onMouseDown:function(t){return e.handleResize(t,"left-top")}}),u.default.createElement("div",{className:"zoom-area zoom-top",onMouseDown:function(t){return e.handleResize(t,"top")}}),u.default.createElement("div",{className:"zoom-area zoom-right-top",onMouseDown:function(t){return e.handleResize(t,"right-top")}}),u.default.createElement("div",{className:"zoom-area zoom-right",onMouseDown:function(t){return e.handleResize(t,"right")}}),u.default.createElement("div",{className:"zoom-area zoom-right-bottom",onMouseDown:function(t){return e.handleResize(t,"right-bottom")}}),u.default.createElement("div",{className:"zoom-area zoom-bottom",onMouseDown:function(t){return e.handleResize(t,"bottom")}}),u.default.createElement("div",{className:"zoom-area zoom-left-bottom",onMouseDown:function(t){return e.handleResize(t,"left-bottom")}}),u.default.createElement("div",{className:"zoom-area zoom-left",onMouseDown:function(t){return e.handleResize(t,"left")}})))}}]),t}(),r.defaultProps={x:0,y:0,width:600,height:400},o);t.default=f},function(e,t,n){var r=n(26);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".dialog{position:fixed;width:100%;height:100%;left:0;top:0;pointer-events:none;user-select:none}.dialog .dialog-container{pointer-events:all;position:absolute;background:#ececec;border-radius:4px;box-shadow:0 0 1px rgba(0,0,0,.31),0 0 5px rgba(0,0,0,.18),0 8px 50px rgba(0,0,0,.3)}.dialog .dialog-container .dialog-header{position:relative;z-index:1;width:100%;display:flex;align-items:center;min-height:22px;background-image:-webkit-linear-gradient(top,#ededed,#ededed 1px,#e7e7e7 2px,#d1d1d1);border-bottom:1px solid #afafaf;border-top:1px solid #f6f6f6;border-radius:5px 5px 0 0;padding:0 3px}.dialog .dialog-container .dialog-header .btns{display:flex;width:61px}.dialog .dialog-container .dialog-header .btns a{width:12px;height:12px;border:1px solid #ffa12a;border-radius:50%;margin:1px 4px 0 5px;line-height:0;background:#ffbd2e}.dialog .dialog-container .dialog-header .btns a svg{width:10px;height:10px;opacity:0}.dialog .dialog-container .dialog-header .btns a:first-child{background:#ff5f57;border-color:#ff463f}.dialog .dialog-container .dialog-header .btns a:last-child{background:#28c940;border-color:#12ac28}.dialog .dialog-container .dialog-header .btns:hover a svg{opacity:1}.dialog .dialog-container .dialog-header .title{font-size:12px;color:#4d4d4d;flex-grow:1;flex-shrink:1;text-align:center;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;padding-right:60px}.dialog .dialog-container .dialog-body{border-radius:0 0 4px 4px;height:100%;width:100%;padding-top:22px;position:absolute;top:0;overflow:hidden}.dialog .dialog-container .zoom-area{position:absolute;z-index:1}.dialog .dialog-container .zoom-area.zoom-left-bottom,.dialog .dialog-container .zoom-area.zoom-left-top,.dialog .dialog-container .zoom-area.zoom-right-bottom,.dialog .dialog-container .zoom-area.zoom-right-top{width:5px;height:5px;z-index:2}.dialog .dialog-container .zoom-area.zoom-bottom,.dialog .dialog-container .zoom-area.zoom-top{width:100%;height:5px}.dialog .dialog-container .zoom-area.zoom-left,.dialog .dialog-container .zoom-area.zoom-right{width:5px;height:100%}.dialog .dialog-container .zoom-area.zoom-left-top{cursor:nwse-resize;left:0;top:0}.dialog .dialog-container .zoom-area.zoom-right-top{cursor:nesw-resize;right:0;top:0}.dialog .dialog-container .zoom-area.zoom-left-bottom{cursor:nesw-resize;left:0;bottom:0}.dialog .dialog-container .zoom-area.zoom-right-bottom{cursor:nwse-resize;right:0;bottom:0}.dialog .dialog-container .zoom-area.zoom-top{cursor:ns-resize;left:0;top:0}.dialog .dialog-container .zoom-area.zoom-bottom{cursor:ns-resize;left:0;bottom:0}.dialog .dialog-container .zoom-area.zoom-left{cursor:ew-resize;left:0;top:0}.dialog .dialog-container .zoom-area.zoom-right{cursor:ew-resize;right:0;top:0}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(28);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleCancel=function(){n.props.onCancel&&n.props.onCancel()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.children;return i.default.createElement("div",{className:"modal",onClick:this.handleCancel},i.default.createElement("div",{className:"modal-container"},e))}}]),t}();t.default=a},function(e,t,n){var r=n(29);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".modal{position:fixed;left:0;top:0;background:rgba(0,0,0,.5)}.modal,.modal .modal-container{width:100%;height:100%}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(31);var a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(4));var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"handleOpenApp",value:function(e){a.open(e.key,{width:600,height:400})}},{key:"render",value:function(){var e=this;return i.default.createElement("div",{className:"finder"},i.default.createElement("div",{className:"sidebar"},i.default.createElement("ul",{className:"menu"},i.default.createElement("li",null,i.default.createElement("span",null,"个人收藏"),i.default.createElement("ul",{className:"sub-menu"},i.default.createElement("li",{className:"active"},i.default.createElement("i",{className:"iconfont icon-app-store"}),"  应用程序"),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-document"}),"  文档"),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-desktop"}),"  桌面"),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-download"}),"  下载"),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-recent"}),"  最近使用"))))),i.default.createElement("div",{className:"finder-body"},i.default.createElement("ul",null,[{name:"生命游戏",type:"game",key:"game-of-life"},{name:"可视化编程工具",type:"tool",key:"js-view"},{name:"JS编辑器",type:"tool",key:"editor"},{name:"Chrome",type:"tool",key:"chrome"}].map(function(t,n){return i.default.createElement("li",null,i.default.createElement("a",{onDoubleClick:function(){return e.handleOpenApp(t)}},i.default.createElement("i",{className:"iconfont icon-"+t.type})," ",t.name))}))))}}]),t}();t.default=l},function(e,t,n){var r=n(32);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".finder{width:100%;height:100%;user-select:none}.finder .sidebar{width:150px;height:100%;float:left;background:#d6d6d6;padding:5px 0}.finder .sidebar .menu,.finder .sidebar .sub-menu{margin:0;padding:0;list-style:none}.finder .sidebar .menu{font-size:12px}.finder .sidebar .menu>li>span{padding-left:5px}.finder .sidebar .sub-menu li{font-size:14px;color:#181818;height:24px;line-height:24px;padding-left:15px}.finder .sidebar .sub-menu li i{color:#666}.finder .sidebar .sub-menu li.active{background:#848d91}.finder .finder-body{overflow:hidden;height:100%}.finder .finder-body ul{margin:0;padding:0;list-style:none;font-size:12px;width:200px;height:100%;border-right:1px solid #d9d9d9}.finder .finder-body ul li{height:18px;line-height:18px}.finder .finder-body ul li a{display:block;padding-left:5px;cursor:pointer}.finder .finder-body ul li a i{font-size:14px;color:#666}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(34);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleKey=function(e){13===e.keyCode&&(e.target.value.match(/https?:\/\//)||(e.target.value="http://"+e.target.value),n.setState({addr:e.target.value}))},n.handleRefresh=function(){n.forceUpdate()},n.state={addr:"https://codepen.io/lanyuechen"},window.addEventListener("keypress",n.handleKey),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.state.addr;return i.default.createElement("div",{className:"browser"},i.default.createElement("div",{className:"tab-bar"},"tab栏"),i.default.createElement("div",{className:"address-bar"},i.default.createElement("ul",null,i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-left"})),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-right"})),i.default.createElement("li",{onClick:this.handleRefresh},i.default.createElement("i",{className:"iconfont icon-refresh"})),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-home"})),i.default.createElement("li",{className:"address"},i.default.createElement("input",{type:"text",defaultValue:e})))),i.default.createElement("div",{className:"body"},i.default.createElement("iframe",{src:e,frameborder:"0"})))}}]),t}();t.default=a},function(e,t,n){var r=n(35);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".browser{width:100%;height:100%;position:relative}.browser .tab-bar{height:25px}.browser .address-bar{border-bottom:1px solid #ddd;height:25px}.browser .address-bar ul{margin:0;padding:0;list-style:none;display:flex;height:22px}.browser .address-bar ul li{padding:0 5px;border-radius:50%;cursor:pointer;line-height:22px}.browser .address-bar ul li:hover{background:#e0e0e0}.browser .address-bar ul li i{font-size:12px}.browser .address-bar ul li.address{flex:1;border-radius:0}.browser .address-bar ul li.address:hover{background:none}.browser .address-bar ul li.address input{width:100%;height:100%;border:none}.browser .body{position:absolute;top:51px;bottom:0;left:0;right:0}.browser .body iframe{width:100%;height:100%}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=a(n(37)),i=a(n(38));function a(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.width=t.width,this.height=t.height,this.grid=t.grid||10,this.speed=t.speed||1,this.onTick=t.onTick,this.transform={x:0,y:0,k:1},this.god=new i.default,this.god.addLives(t.data),this.init(),this.tick()}return r(e,[{key:"start",value:function(){var e=this;this.interval=setInterval(function(){e.tick()},1e3/this.speed)}},{key:"stop",value:function(){clearInterval(this.interval),this.interval=null}},{key:"init",value:function(){var e=this;this.dom=document.createElement("div"),this.dom.style.cssText="\n      width: "+this.width+"px;\n      height: "+this.height+"px;\n    ",this.zr=o.default.init(this.dom),this.container=new o.default.Group,this.bg=new o.default.Group,this.cells=new o.default.Group,this.container.add(this.bg),this.container.add(this.cells),this.zr.add(this.container),this.drawBg(),d3.select(this.dom).call(d3.zoom().scaleExtent([.1,10]).on("zoom",function(){e.zoomed()}))}},{key:"zoomed",value:function(){this.transform=d3.event.transform,this.container.position=[this.transform.x,this.transform.y],this.container.scale=[this.transform.k,this.transform.k],this.container.dirty(),this.drawBg()}},{key:"drawBg",value:function(){this.bg.removeAll();for(var e=this.grid*this.transform.k,t=Math.floor(8/e)+1,n=0;n<this.width/e;n+=t)for(var r=0;r<this.height/e;r+=t){var i=Math.floor(this.transform.x/e);this.bg.add(new o.default.Line({shape:{x1:(n-i)*this.grid,y1:-this.transform.y/this.transform.k,x2:(n-i)*this.grid,y2:(this.height-this.transform.y)/this.transform.k},style:{stroke:"#ccc"}}));var a=Math.floor(this.transform.y/e);this.bg.add(new o.default.Line({shape:{x1:-this.transform.x/this.transform.k,y1:(r-a)*this.grid,x2:(this.width-this.transform.x)/this.transform.k,y2:(r-a)*this.grid},style:{stroke:"#ccc"}}))}}},{key:"tick",value:function(){this.onTick&&this.onTick(),this.god.tick(),this.drawCells()}},{key:"drawCells",value:function(){var e=this;this.cells.removeAll(),this.god.cells.map(function(t){e.drawCell(t)})}},{key:"drawCell",value:function(e){var t=this.grid*this.transform.k;e.x*t+this.transform.x>this.width||e.x*t+this.transform.x<0||e.y*t+this.transform.y>this.height||e.y*t+this.transform.y<0||this.cells.add(new o.default.Rect({shape:{x:e.x*this.grid,y:e.y*this.grid,width:this.grid,height:this.grid},style:{fill:"#000"}}))}}]),e}();t.default=l},function(e,t){e.exports=zrender},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o,i=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),l=function(e){return e&&e.__esModule?e:{default:e}}(n(39));var u=(o=r=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.cells=[]}return a(e,[{key:"tick",value:function(){var t=this,n={};this.cells.filter(function(e){return e.stage===l.default.ALIVE}).map(function(e){for(var t=-1;t<=1;t++)for(var r=-1;r<=1;r++){var o=e.x+t+","+(e.y+r);n[o]||(n[o]=0===t&&0===r?e:null)}}),Object.keys(n).map(function(r){var o=r.split(",").map(function(e){return parseInt(e)}),a=i(o,2),u=a[0],c=a[1],s=t.toBeOrNotToBe(u,c);n[r]||s!==e.LIVE||t.cells.push(new l.default(u,c)),n[r]&&s===e.DIE&&n[r].die()}),this.cells=this.cells.filter(function(e){if(e.stage!==l.default.AFTER_ALIVE)return e.alive(),!0})}},{key:"addLives",value:function(e){var t=this;Array.isArray(e)&&e.map(function(e){t.cells.push(new l.default(e[0],e[1]))})}},{key:"toBeOrNotToBe",value:function(t,n){var r=this.cells.filter(function(e){return e.stage!==l.default.PRE_ALIVE&&Math.abs(e.x-t)<=1&&Math.abs(e.y-n)<=1&&(e.x!==t||e.y!==n)}).length;return 3===r?e.LIVE:2===r?e.KEEP:e.DIE}}]),e}(),r.LIVE=1,r.DIE=-1,r.KEEP=0,o);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var a=(o=r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.x=t,this.y=n,this.stage=e.PRE_ALIVE}return i(e,[{key:"alive",value:function(){this.stage=e.ALIVE}},{key:"die",value:function(){this.stage=e.AFTER_ALIVE}}]),e}(),r.PRE_ALIVE=0,r.ALIVE=1,r.AFTER_ALIVE=2,o);t.default=a},function(e,t,n){var r=n(41);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".editor{width:100%;height:100%}",""])},function(e,t,n){var r=n(43);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".js-view{width:100%;height:100%;position:relative}.js-view .toolbar{position:absolute;top:0;right:0;z-index:1}.js-view .toolbar button{cursor:pointer;margin:10px 10px 0 0}.js-view .sidebar{width:70px;height:100%;background:hsla(0,0%,100%,.8);position:absolute;left:0;top:0;z-index:1}.js-view .sidebar .module{width:50px;height:50px;line-height:50px;text-align:center;border:1px solid #999;margin:10px auto;cursor:pointer;background:#fff;color:#666}.js-view .sidebar .module:hover{box-shadow:1px 1px 5px rgba(0,0,0,.5)}.js-view .content{background:#000;height:100%;width:100%;overflow:hidden}.js-view .content svg{width:100%;height:100%;position:relative}.js-view .content svg .link-path{fill:none;stroke-width:2px;stroke:#8ac007;stroke-dasharray:5;stroke-dashoffset:10;animation:offset .5s linear infinite}@keyframes offset{to{stroke-dashoffset:0}}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DragSource=t.DropTarget=void 0;var r=i(n(45)),o=i(n(46));function i(e){return e&&e.__esModule?e:{default:e}}t.DropTarget=r.default,t.DragSource=o.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(n){return r({},n,{props:r({},n.props,{onDragEnter:function(e){e.preventDefault()},onDragOver:function(e){e.preventDefault()},onDrop:function(n){n.preventDefault();var r=function(e){return JSON.parse(e.dataTransfer.getData("text"))}(n);-1!==e.indexOf(r.type)&&t.onDrop&&t.onDrop(r,n)}})})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(e,t){return function(n){return r({},n,{props:r({},n.props,{draggable:!0,onDragStart:function(n){n.dataTransfer.setData("text",JSON.stringify({type:e,data:t}))}})})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=c(o);n(48);var a=c(n(5)),l=c(n(6)),u=c(n(8));function c(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleDrag=function(e,t){new a.default({dom:e,onDrag:function(e,r){n.props.onDrag&&n.props.onDrag(t,e,r)}})},n.handleEdit=function(){var e=n.props.module;n.modal=(0,l.default)({content:i.default.createElement("div",{style:{width:"80%",height:"80%",margin:"10%"}},i.default.createElement(u.default,{onConfirm:n.handleConfirm},e.func&&e.func.toString()))})},n.handleConfirm=function(e){n.props.module.setFunc(e),n.modal.destroy(),n.modal=null},n.handleContextMenu=function(e){e.stopPropagation(),e.preventDefault()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.module,r=t.onLink,o=t.onZoom;return i.default.createElement("g",{className:"brick",transform:"translate("+(n.x-n.width/2)+", "+(n.y-n.height/2)+")"},i.default.createElement("g",{className:"io-area",onClick:function(){return r&&r(n)}},i.default.createElement("rect",{x:0,y:-5,width:n.width,height:5}),i.default.createElement("rect",{x:n.width,y:0,width:5,height:n.height}),i.default.createElement("rect",{x:0,y:n.height,width:n.width,height:5}),i.default.createElement("rect",{x:-5,y:0,width:5,height:n.height})),i.default.createElement("g",{className:"zoom-area",onClick:function(){return o&&o(n)}},i.default.createElement("rect",{x:-5,y:-5,width:5,height:5}),i.default.createElement("rect",{x:n.width,y:-5,width:5,height:5}),i.default.createElement("rect",{x:n.width,y:n.height,width:5,height:5}),i.default.createElement("rect",{x:-5,y:n.height,width:5,height:5})),i.default.createElement("g",{ref:function(t){return n.setDom(t,e.handleDrag)},onContextMenu:this.handleContextMenu},i.default.createElement("rect",{width:n.width,height:n.height}),i.default.createElement("text",{x:n.width/2,y:n.height/2,onDoubleClick:this.handleEdit},n.name)))}}]),t}();t.default=s},function(e,t,n){var r=n(49);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".brick .io-area{cursor:crosshair}.brick .zoom-area rect:first-child{cursor:nw-resize}.brick .zoom-area rect:nth-child(2){cursor:ne-resize}.brick .zoom-area rect:nth-child(3){cursor:se-resize}.brick .zoom-area rect:nth-child(4){cursor:sw-resize}.brick rect{fill:#fff;stroke:#999;stroke-width:1px}.brick text{fill:#666;text-anchor:middle;dominant-baseline:middle}.brick text:hover{fill:#000}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.load=function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script");return n.type="text/javascript",n.src=e,t.appendChild(n),new Promise(function(e){n.onload=n.onreadystatechange=function(){this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||(n.onload=n.onreadystatechange=null,t.removeChild(n),e())}})},t.uuid=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:24,n=[],r=0;r<36;r++)n[r]="0123456789abcdef".substr(Math.floor(16*Math.random()),1);return n[14]="4",n[19]="0123456789abcdef".substr(3&n[19]|8,1),n[8]=n[13]=n[18]=n[23]=e,n.join("").substr(0,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sum=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(function(e,t){return e+t},0)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(10),a=function(e){return e&&e.__esModule?e:{default:e}}(i);var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,r({},e,{type:i.TYPE_VIEW})))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default),o(t,[{key:"output",value:function(){this.input.map(function(e){console.log("["+e.id+"] >>>",e.output())})}}]),t}();t.default=l},function(e){e.exports=[{id:"fb5aeb26b1b14237a0303202",type:"FUNCTION",name:"ƒ(x)",x:292,y:111,width:50,height:50,input:[],func:"function (a) {\n    return (a || 0) + 1;\n}"},{id:"123a068b93db4edd88539852",type:"FUNCTION",name:"ƒ(x)",x:292,y:200,width:50,height:50,input:[],func:"function () {\n    return 2;\n}"},{id:"4f0b3ba3df7340229b7a85a6",type:"FUNCTION",name:"ƒ(x)",x:460,y:157,width:50,height:50,input:["fb5aeb26b1b14237a0303202","123a068b93db4edd88539852"],func:"function (a, b) {\n    return a + b;\n}"},{id:"0c99f88b24f242b6a3f606af",type:"VIEW",name:"V(x)",x:591,y:157,width:50,height:50,input:["4f0b3ba3df7340229b7a85a6"],func:"function () {}"}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(55);var a=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"handleClick",value:function(e){this.props.onClick&&this.props.onClick(e)}},{key:"render",value:function(){var e=this,t=this.props.data;return i.default.createElement("div",{className:"dock"},i.default.createElement("ul",null,t.map(function(t){return i.default.createElement("li",{key:t.key},i.default.createElement("span",null,t.name),i.default.createElement("a",{onClick:function(){return e.handleClick(t)}},i.default.createElement("img",{src:"public/img/dock/"+t.key+".png"})))})))}}]),t}();t.default=a},function(e,t,n){var r=n(56);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".dock ul{list-style:none;margin:0;background:rgba(0,0,0,.5);border-radius:10px 10px 0 0;height:74px;padding:10px}.dock ul li{padding:0 5px;display:inline-block;position:relative}.dock ul li a{cursor:pointer}.dock ul li a img{width:50px;-webkit-box-reflect:below 2px -webkit-gradient(linear,left top,left bottom,from(transparent),color-stop(.7,transparent),to(hsla(0,0%,100%,.5)));transition:all .3s;transform-origin:50% 90%}.dock ul li span{pointer-events:none;display:none;position:absolute;bottom:100px;width:100%;background:rgba(0,0,0,.8);color:#fff;padding:4px 0;border-radius:5px;text-align:center;white-space:nowrap;font-size:12px}.dock ul li:hover span{display:block}.dock ul li:hover img{transform:scale(1.8);margin:0 20px}.dock ul li:hover+li a img{transform:scale(1.2);margin:0 15px}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),a=s(i);n(58);var l=s(n(60)),u=s(n(5)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(4));function s(e){return e&&e.__esModule?e:{default:e}}var f=100,d=5,p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.fsData=t.find(l.default,e.path),n.fsData=r({},n.fsData,{children:n.fsData.children.map(function(e,t){return r({},e,{x:Math.floor(t/d)*f,y:t%d*f+22})})}),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),o(t,null,[{key:"find",value:function(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"/";if(n===(r=(r+"/"+e.path).replace(/\/{2,}/,"/")))return e;if(e.children){var o=!0,i=!1,a=void 0;try{for(var l,u=e.children[Symbol.iterator]();!(o=(l=u.next()).done);o=!0){var c=l.value,s=t.find(c,n,r);if(s)return s}}catch(e){i=!0,a=e}finally{try{!o&&u.return&&u.return()}finally{if(i)throw a}}}}}]),o(t,[{key:"componentDidMount",value:function(){this.fsData.children.map(function(e){new u.default({dom:e.dom,onDrag:function(t,n){e.x=e.x+t,e.y=e.y+n,e.dom.style.cssText="\n            left: "+e.x+"px;\n            top: "+e.y+"px;\n          "}})})}},{key:"handleOpenApp",value:function(e){c.open(e.key,{width:600,height:400})}},{key:"render",value:function(){var e=this,t=this.fsData.children;return a.default.createElement("div",{className:"fs"},t.map(function(n,r){return a.default.createElement("div",{className:"fs-item",tabIndex:r,key:r,ref:function(e){return t[r].dom=e},style:{left:n.x,top:n.y}},a.default.createElement("a",{onDoubleClick:function(){return e.handleOpenApp(n)}},a.default.createElement("img",{src:n.icon||"public/img/icon/default.png"}),a.default.createElement("label",null,n.children?n.path:n.name)))}))}}]),t}();t.default=p},function(e,t,n){var r=n(59);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".fs{width:100%;height:100%;pointer-events:none;left:0;top:0}.fs,.fs .fs-item{position:absolute}.fs .fs-item{pointer-events:all;padding:15px}.fs .fs-item a{display:block}.fs .fs-item a img{width:60px;display:block;pointer-events:none}.fs .fs-item a label{color:#fff;display:block;margin-top:5px;width:100%;text-align:center;font-size:12px;text-shadow:1px 1px 2px rgba(0,0,0,.5)}",""])},function(e){e.exports={path:"/",children:[{path:"Users",children:[{path:"lanyuechen",children:[{path:"Desktop",children:[{name:"Chrome",key:"chrome",icon:"public/img/icon/chrome.png"},{name:"生命游戏",key:"game-of-life",icon:"public/img/icon/game-of-life.jpeg"},{name:"jsVIEW",key:"js-view",icon:"public/img/icon/js-view.png"}]}]}]}]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(62);var a=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return i.default.createElement("div",{className:"sys-menu-bar"},i.default.createElement("ul",null,i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-apple"})),i.default.createElement("li",{tabIndex:1},"Finder"),i.default.createElement("li",{tabIndex:2},"文件"),i.default.createElement("li",{tabIndex:3},"编辑"),i.default.createElement("li",{tabIndex:4},"显示"),i.default.createElement("li",{tabIndex:5},"前往"),i.default.createElement("li",{tabIndex:6},"窗口"),i.default.createElement("li",{tabIndex:7},"帮助")))}}]),t}();t.default=a},function(e,t,n){var r=n(63);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".sys-menu-bar{position:fixed;top:0;left:0;width:100%;height:22px;background:hsla(0,0%,100%,.8);border-bottom:1px solid rgba(0,0,0,.3);box-shadow:0 2px 10px rgba(0,0,0,.1)}.sys-menu-bar ul{margin:0 10px;padding:0;list-style:none;font-size:14px}.sys-menu-bar ul li{float:left;padding:0 10px;color:#25333b}.sys-menu-bar ul li:focus{background:#3385ef;color:#fff}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(65);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleSearch=function(e){n.setState({search:e.target.value})},n.handleClick=function(e,t){console.log("=====handleClick=====",t)},n.state={search:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props.data,n=this.state.search;return i.default.createElement("div",{className:"launchpad"},i.default.createElement("div",{className:"search",onClick:function(e){e.stopPropagation(),e.preventDefault()}},i.default.createElement("div",{className:"search-container"},i.default.createElement("i",{className:"iconfont icon-search"}),i.default.createElement("input",{onChange:this.handleSearch,type:"text",placeholder:"搜索"}))),i.default.createElement("ul",null,t.filter(function(e){return!n||e.name.match(new RegExp(n,"i"))}).map(function(t){return i.default.createElement("li",{key:t.key},i.default.createElement("a",{onClick:function(n){return e.handleClick(n,t)}},i.default.createElement("img",{src:"public/img/dock/"+t.key+".png"})),i.default.createElement("span",null,t.name))})))}}]),t}();t.default=a},function(e,t,n){var r=n(66);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".launchpad{padding:25px 100px 100px;height:100%}.launchpad .search{text-align:center}.launchpad .search .search-container{display:inline;position:relative}.launchpad .search .search-container i{position:absolute;top:6px;left:8px;font-size:12px;color:hsla(0,0%,100%,.8)}.launchpad .search .search-container input{background:hsla(0,0%,100%,.1);border:1px solid hsla(0,0%,100%,.3);color:hsla(0,0%,100%,.8);border-radius:2px;width:250px;height:25px;line-height:25px;text-indent:25px}.launchpad .search .search-container input::-webkit-input-placeholder{color:hsla(0,0%,100%,.8)}.launchpad .search .search-container input:focus{border-color:hsla(0,0%,100%,.5)}.launchpad ul{list-style:none;margin:0;padding:0}.launchpad ul li{position:relative;float:left;margin:20px}.launchpad ul li a{cursor:pointer}.launchpad ul li a img{width:64px}.launchpad ul li span{display:block;color:#fff;font-size:12px;text-align:center}",""])},function(e){e.exports=[{key:"finder",name:"Finder"},{key:"chrome",name:"Chrome"},{key:"launchpad",name:"Launchpad"},{key:"preference",name:"Preference"},{key:"itunes",name:"Itunes"},{key:"siri",name:"Siri"},{key:"app-store",name:"App Store"}]}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,