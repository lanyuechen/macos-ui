!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=11)}([function(e,t){e.exports=React},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){var r={},o=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),i=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),a=null,l=0,u=[],c=n(14);function s(e,t){for(var n=0;n<e.length;n++){var o=e[n],i=r[o.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(y(o.parts[a],t))}else{var l=[];for(a=0;a<o.parts.length;a++)l.push(y(o.parts[a],t));r[o.id]={id:o.id,refs:1,parts:l}}}}function f(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function d(e,t){var n=i(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=u[u.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=i(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function p(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function h(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),m(t,e.attrs),d(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function y(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var u=l++;n=a||(a=h(t)),r=b.bind(null,n,u,!1),o=b.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),d(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=c(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){p(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){p(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=o()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return s(n,t),function(e){for(var o=[],i=0;i<n.length;i++){var a=n[i];(l=r[a.id]).refs--,o.push(l)}e&&s(f(e,t),t);for(i=0;i<o.length;i++){var l;if(0===(l=o[i]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete r[l.id]}}}};var v=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function b(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=v(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t){e.exports=ReactDOM},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t){var n=this,r=t.dom,o=t.onDrag,i=t.onDragEnd;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.dragStart=function(e){n.lx=e.pageX,n.ly=e.pageY,window.addEventListener("mousemove",n.drag),window.addEventListener("mouseup",n.dragEnd)},this.dragEnd=function(e){window.removeEventListener("mousemove",n.drag),window.removeEventListener("mouseup",n.dragEnd),n.cb(e,n.onDragEnd)},this.drag=function(e){n.cb(e,n.onDrag)},this.onDrag=o,this.onDragEnd=i,r.addEventListener("mousedown",this.dragStart)}return r(e,[{key:"cb",value:function(e,t){if(t){var n=e.pageX-this.lx,r=e.pageY-this.ly;this.lx=e.pageX,this.ly=e.pageY,t(n,r)}}}]),e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=document.createElement("div");function n(){document.getElementById("app").style.filter="none",o.default.unmountComponentAtNode(t)&&t.parentNode&&t.parentNode.removeChild(t),e.onCancel&&e.onCancel.apply(e,arguments)}return document.body.appendChild(t),document.getElementById("app").style.filter="blur(10px)",o.default.render(r.default.createElement(i.default,{onCancel:n},e.content),t),{destroy:n}};var r=a(n(0)),o=a(n(3)),i=a(n(44));function a(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.open=function(e,t){var n=s[e];if(!n)return void alert("该应用已损坏!");(0,r.default)({name:e,width:t.width,height:t.height,content:React.createElement(n,null)})};var r=c(n(50)),o=(c(n(5)),c(n(54))),i=c(n(57)),a=c(n(7)),l=c(n(10)),u=c(n(8));function c(e){return e&&e.__esModule?e:{default:e}}var s={finder:o.default,chrome:i.default,"game-of-life":a.default,editor:l.default,"js-view":u.default}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=l(o),a=l(n(23));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleStart=function(){n.world.start()},n.handleStop=function(){n.world.stop()},n.handleTick=function(){n.setState({times:n.state.times+1})},n.state={times:0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){this.world=new a.default({width:600,height:400,speed:10,data:[[1,7],[1,8],[2,7],[2,8],[8,6],[8,7],[8,8],[9,5],[9,6],[9,8],[9,9],[10,5],[10,6],[10,8],[10,9],[11,5],[11,6],[11,7],[11,8],[11,9],[12,4],[12,5],[12,9],[12,10],[15,6],[15,7],[16,5],[16,6],[16,7],[16,8],[16,9],[17,5],[18,7],[18,8],[18,9],[19,9],[20,7],[20,8],[21,7],[21,8],[24,2],[24,3],[24,7],[24,8],[25,2],[25,4],[25,6],[25,8],[26,3],[26,4],[26,5],[26,6],[26,7],[27,4],[27,5],[27,6],[28,5],[35,5],[35,6],[36,5],[36,6]],onTick:this.handleTick}),this.world.start(),this.refs.container.appendChild(this.world.dom)}},{key:"render",value:function(){var e=this.state.times;return i.default.createElement("div",null,i.default.createElement("div",null,i.default.createElement("button",{onClick:this.handleStart},"start"),i.default.createElement("button",{onClick:this.handleStop},"stop"),i.default.createElement("span",null,"迭代次数: ",e)),i.default.createElement("div",{ref:"container"}))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=y(o);n(27);var a=n(29),l=y(n(32)),u=y(n(35)),c=n(9),s=y(c),f=y(n(39)),d=y(n(40)),p=y(n(5)),h=y(n(10)),m=y(n(49));function y(e){return e&&e.__esModule?e:{default:e}}var v=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.save=function(){var e=n.modules.map(function(e){return{id:e.id,type:e.type,name:e.name,x:e.x,y:e.y,width:e.width,height:e.height,input:e.input.map(function(e){return e.id}),func:e.func.toString()}});n.download(JSON.stringify(e,void 0,2),"demo.json")},n.saveModel=function(){},n.toggle=function(){n.running?(n.modules.map(function(e){return e.reset()}),n.running=null,clearInterval(n.interval),n.interval=null,window[c.TICK_COUNT]=0):(n.running=!0,n.interval=setInterval(function(){n.tick()},1e3)),n.forceUpdate()},n.handleDrop=function(e,t){var r=t.target.getBoundingClientRect(),o=t.pageX-r.x,i=t.pageY-r.y;e.type===c.TYPE_VIEW?n.modules.push(new f.default({x:o,y:i})):n.modules.push(new s.default({x:o,y:i})),n.forceUpdate()},n.handleLink=function(e){n.currentInput?(e.addInput(n.currentInput),n.clearTmpLink()):e.type!==c.TYPE_VIEW&&(n.currentInput=e,n.tmpPath=document.createElementNS("http://www.w3.org/2000/svg","path"),n.tmpPath.setAttribute("class","link-path"),n.refs.lines.appendChild(n.tmpPath),n.linkAnimate=function(t){var r=n.refs.content.getBoundingClientRect();n.tmpPath.setAttribute("d",n.pathData(e,{x:t.pageX-r.x,y:t.pageY-r.y,width:0,height:0}))},n.handleKeyPress=function(e){e.stopPropagation(),e.preventDefault(),n.clearTmpLink()},window.addEventListener("mousemove",n.linkAnimate),window.addEventListener("contextmenu",n.handleKeyPress))},n.clearTmpLink=function(){n.currentInput=null,window.removeEventListener("mousemove",n.linkAnimate),window.removeEventListener("contextmenu",n.handleKeyPress),n.linkAnimate=null,n.handleKeyPress=null,n.refs.lines.removeChild(n.tmpPath),n.tmpPath=null,n.forceUpdate()},n.handleDrag=function(e,t,r){e.x+=t,e.y+=r,n.forceUpdate()},n.handleContextMenu=function(e,t){e.stopPropagation(),e.preventDefault();(0,d.default)({x:e.pageX,y:e.pageY,content:i.default.createElement(l.default,{data:[{name:"编辑",onClick:function(){return n.handleEdit(t)}},{name:"删除",onClick:function(){n.modules=n.modules.filter(function(e){if(e!==t)return e.input=e.input.filter(function(e){return e!==t}),!0}),n.forceUpdate()}}]})})},n.handleLinkContext=function(e,t,r){e.stopPropagation(),e.preventDefault();(0,d.default)({x:e.pageX,y:e.pageY,content:i.default.createElement(l.default,{data:[{name:"删除",onClick:function(){n.modules.map(function(e){e===t&&(e.input=e.input.filter(function(e){return e!==r}))}),n.forceUpdate()}}]})})},n.handleConfirm=function(e,t){e.setFunc(t),n.modal.destroy(),n.modal=null},n.handleEdit=function(e){n.modal=(0,p.default)({content:i.default.createElement("div",{style:{width:"80%",height:"80%",margin:"10%"}},i.default.createElement(h.default,{onConfirm:function(t){return n.handleConfirm(e,t)}},e.func&&e.func.toString()))})},n.modules=[],window[c.TICK_COUNT]=0,n.load(m.default),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"load",value:function(e){this.modules=e.map(function(e){var t=new(e.type===c.TYPE_VIEW?f.default:s.default)({id:e.id,type:e.type,x:e.x,y:e.y,width:e.width,height:e.height});return t.setFunc(e.func),{m:t,input:e.input}}).map(function(e,t,n){var r;return(r=e.m).addInput.apply(r,function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(e.input.map(function(e){return n.find(function(t){return t.m.id===e}).m}))),e.m}),this.forceUpdate()}},{key:"download",value:function(e,t){var n=document.createElement("a");n.download=t,n.style.display="none";var r=new Blob([e],{type:"text/plain"});n.href=URL.createObjectURL(r),document.body.appendChild(n),n.click(),document.body.removeChild(n)}},{key:"tick",value:function(){var e=this.modules.filter(function(e){return e.type===c.TYPE_VIEW});if(e.length){var t=e[0];window[c.TICK_COUNT]+=1,t.output()}}},{key:"pathData",value:function(e,t){var n=e.x+e.width/2+20,r=e.x-e.width/2-20,o=e.y-e.height/2-20,i=e.y+e.height/2+20,a=t.x-t.width/2-20,l=t.y-t.height/2-20,u=t.y+t.height/2+20,c="M"+e.x+" "+e.y+" ";return e.x+e.width/2<t.x-t.width/2?(a=n=(n+a)/2,c+="L"+n+" "+e.y+" L"+n+" "+t.y+" L"+a+" "+t.y+" "):(c+="L"+n+" "+e.y+" ",i<l?c+="L"+n+" "+l+" L"+a+" "+l+" L"+a+" "+t.y+" ":o>u?c+="L"+n+" "+u+" L"+a+" "+u+" L"+a+" "+t.y+" ":e.y>t.y?c+="L"+n+" "+Math.max(u,i)+" L"+Math.min(a,r)+" "+Math.max(u,i)+" L"+Math.min(a,r)+" "+t.y+" ":c+="L"+n+" "+Math.min(l,o)+" L"+Math.min(a,r)+" "+Math.min(l,o)+" L"+Math.min(a,r)+" "+t.y+" "),c+="L"+t.x+" "+t.y}},{key:"handleZoom",value:function(e){console.log("===",e)}},{key:"render",value:function(){var e=this,t=this.modules;return i.default.createElement("div",{className:"js-view"},i.default.createElement("div",{className:"toolbar"},i.default.createElement("button",{onClick:function(){return e.load([])}},"重置"),i.default.createElement("button",{onClick:this.toggle,className:"btn-start"},this.running?"停止":"开始"),i.default.createElement("button",{onClick:function(){return e.load(m.default)}},"加载"),i.default.createElement("button",{onClick:this.save},"保存"),i.default.createElement("button",{onClick:this.saveModel},"保存为组件")),i.default.createElement("div",{className:"sidebar"},s.default.TYPES.map(function(e){return(0,a.DragSource)(e.key,e)(i.default.createElement("div",{className:"module"},e.name))})),i.default.createElement("div",{className:"content",ref:"content"},(0,a.DropTarget)(s.default.TYPES.map(function(e){return e.key}),{onDrop:this.handleDrop})(i.default.createElement("svg",null,i.default.createElement("g",{className:"lines",ref:"lines"},t.map(function(t){return i.default.createElement("g",{key:t.id},t.input.map(function(n,r){return i.default.createElement("g",{key:r,className:"link-path",onContextMenu:function(r){return e.handleLinkContext(r,t,n)}},i.default.createElement("path",{className:"path-hidden",d:e.pathData(n,t)}),i.default.createElement("path",{className:"path-display",d:e.pathData(n,t)}))}))})),i.default.createElement("g",{className:"modules"},t.map(function(t,n){return i.default.createElement(u.default,{key:t.id,module:t,onLink:e.handleLink,onZoom:e.handleZoom,onDrag:e.handleDrag,onEdit:function(){return e.handleEdit(t)},onContextMenu:function(n){return e.handleContextMenu(n,t)}})}))))))}}]),t}();t.default=v},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.TICK_COUNT=exports.TYPE_VIEW=exports.TYPE_FUNCTION=void 0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),_class,_temp,_common=__webpack_require__(38);function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var TYPE_FUNCTION=exports.TYPE_FUNCTION="FUNCTION",TYPE_VIEW=exports.TYPE_VIEW="VIEW",TICK_COUNT=exports.TICK_COUNT=Symbol(1),M=(_temp=_class=function(){function M(e){var t=e.id,n=e.input,r=void 0===n?[]:n,o=e.func,i=e.x,a=e.y,l=e.width,u=void 0===l?50:l,c=e.height,s=void 0===c?50:c,f=e.type,d=void 0===f?TYPE_FUNCTION:f;_classCallCheck(this,M),this.id=t||(0,_common.uuid)(),this.input=r,this.x=i,this.y=a,this.width=u,this.height=s,this.func=o||function(){},this.name=M.TYPES.find(function(e){return e.key===d}).name,this.type=d,this.tickCount=0}return _createClass(M,[{key:"reset",value:function(){this.tickCount=0,this.lastData=void 0}},{key:"addInput",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];this.input=this.input.concat(t)}},{key:"rmInput",value:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];this.input=this.input.filter(function(e){return-1===t.indexOf(e)})}},{key:"clearInput",value:function(){this.input=[]}},{key:"setDom",value:function(e,t){e&&!this.dom&&(this.dom=e,t(this.dom,this))}},{key:"setFunc",value:function setFunc(func){func&&("function"==typeof func?this.func=func:"string"==typeof func&&eval("this.func = "+func))}},{key:"output",value:function(){return this.tickCount<window[TICK_COUNT]&&(this.tickCount+=1,this.lastData=this.func.apply(this,_toConsumableArray(this.input.map(function(e){return e.output()})))),this.lastData}}]),M}(),_class.TYPES=[{key:TYPE_FUNCTION,name:"ƒ(x)"},{key:TYPE_VIEW,name:"V(x)"}],_temp);exports.default=M},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(47);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleConfirm=function(){n.props.onConfirm&&n.props.onConfirm(n.editor.getValue())},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){this.editor=ace.edit(this.refs.editor),this.editor.setTheme("ace/theme/monokai"),this.editor.session.setMode("ace/mode/javascript")}},{key:"render",value:function(){return i.default.createElement("div",{className:"editor",onClick:function(e){e.stopPropagation(),e.preventDefault()}},i.default.createElement("div",null,i.default.createElement("button",{onClick:this.handleConfirm},"确定")),i.default.createElement("div",{ref:"editor",style:{width:"100%",height:"100%"}},this.props.children))}}]),t}();t.default=a},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=u(o),a=u(n(3));n(12);var l=u(n(15));function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return i.default.createElement("div",{style:{width:"100%",height:"100%"}},i.default.createElement(l.default,null))}}]),t}();a.default.render(i.default.createElement(c,null),document.getElementById("app"))},function(e,t,n){var r=n(13);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"*{box-sizing:border-box;user-select:none;outline:none!important}body,html{margin:0}#app,body,html{width:100%;height:100%}",""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=h(o);n(16);h(n(20)),h(n(7));var a=h(n(8)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(6)),u=h(n(60)),c=h(n(63)),s=h(n(67)),f=h(n(5)),d=h(n(70)),p=h(n(73));function h(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleClick=function(e){"launchpad"!==e.key?l.open(e.key,{width:600,height:400}):(0,f.default)({content:i.default.createElement(d.default,{data:p.default})})},n.state={desktops:[i.default.createElement("div",{className:"desktop"},i.default.createElement(s.default,null),i.default.createElement(c.default,{path:"/Users/lanyuechen/Desktop"}),i.default.createElement("div",{className:"dock-container"},i.default.createElement(u.default,{data:p.default,onClick:n.handleClick})))]},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){this.state.desktops;return i.default.createElement(a.default,null)}}]),t}();t.default=m},function(e,t,n){var r=n(17);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){var r=n(18);(e.exports=n(1)(!1)).push([e.i,".desktop{position:relative;width:100%;height:100%;background:url("+r(n(19))+") 50%;background-size:cover}.desktop .dock-container{position:absolute;bottom:0;left:0;width:100%;display:flex;justify-content:center}",""])},function(e,t){e.exports=function(e){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},function(e,t,n){e.exports=n.p+"images/bg.jpg"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o,i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),l=n(0),u=function(e){return e&&e.__esModule?e:{default:e}}(l);function c(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}n(21);var s=(o=r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return i.call(n),n.state={itemWidth:0,itemHeight:0,idx:e.currentPage,count:u.default.Children.count(e.children),transition:!0},window.addEventListener("keydown",n.handleKey),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.Component),a(t,[{key:"componentDidMount",value:function(){var e=this.props.multi,t=this.refs.wrap,n=t.clientWidth,r=t.clientHeight;this.setAuto(this.props),this.setState({itemWidth:n/e,itemHeight:r/e})}},{key:"componentWillUnmount",value:function(){clearInterval(this.interval),window.removeEventListener("keydown",this.handleKey)}},{key:"componentWillReceiveProps",value:function(e){e.interval!==this.props.interval&&this.setAuto(e),e.children!==this.props.children&&this.setState({count:u.default.Children.count(e.children)})}},{key:"render",value:function(){var e=this.props,t=e.children,n=e.width,r=e.height,o=e.horizon,i=e.next,a=e.prev,l=e.loop,s=e.multi,f=this.state,d=f.itemWidth,p=f.itemHeight,h=f.idx,m=f.count,y=f.transition;p=o?0:p,d=o?d:0;var v=u.default.Children.toArray(t);return l&&s<=m&&(m+=2*s,v=[].concat(c(v.slice(-3)),c(v),c(v.slice(0,3)))),u.default.createElement("div",{className:"carousel",style:{width:n,height:r}},u.default.createElement("div",{className:"wrap",ref:"wrap"},u.default.createElement("div",{ref:"carousel",className:"content",style:{display:o?"flex":"block",width:o?d*m:"100%",height:o?"100%":p*m,left:o?-h*d:0,top:o?0:-h*p,transitionDuration:y?".5s":"0s",transform:l&&s<=m?"translate("+-s*d+"px, "+-s*p+"px)":""}},v.map(function(e,t){return u.default.createElement("div",{key:t,className:"item",style:{width:o?d:"100%",height:o?"100%":p}},e)}))),a&&u.default.createElement("a",{className:"prev",onClick:this.prev},"<"),i&&u.default.createElement("a",{className:"next",onClick:this.next},">"))}}]),t}(),r.defaultProps={width:"100%",height:"100%",interval:5e3,multi:1,step:1,horizon:!0,next:!1,prev:!1,pagination:!1,loop:!1,currentPage:0},i=function(){var e=this;this.handleKey=function(t){t.altKey&&(39===t.keyCode&&e.next(),37===t.keyCode&&e.prev())},this.next=function(){var t=e.props,n=t.step,r=t.loop,o=t.interval,i=e.state,a=i.idx,l=i.count;a+=n,!r&&a>=l&&(a=0),e.setState({transition:!0,idx:a}),e.setAuto(e.props),r&&a>=l&&setTimeout(function(){e.reset()},o+1)},this.prev=function(){var t=e.props.step,n=e.state,r=n.idx,o=n.count;e.setState({transition:!0,idx:r-t<0?o-(o%t==0?1:o%t):r-t}),e.setAuto(e.props)},this.setAuto=function(t){var n=t.interval;n>0?(clearInterval(e.interval),e.interval=setInterval(function(){e.next()},n>20?n:20)):clearInterval(e.interval)},this.reset=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;e.setState({idx:t,transition:!1})}},o);t.default=s},function(e,t,n){var r=n(22);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".carousel .wrap{position:relative;width:100%;height:100%;overflow:hidden}.carousel .wrap .content{position:absolute;transition:left,top,width .5s ease-in 0s;width:100%;height:100%}.carousel .wrap .content .item{width:100%;height:100%}.carousel .next,.carousel .prev{cursor:pointer}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=a(n(24)),i=a(n(25));function a(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.width=t.width,this.height=t.height,this.grid=t.grid||10,this.speed=t.speed||1,this.onTick=t.onTick,this.transform={x:0,y:0,k:1},this.god=new i.default,this.god.addLives(t.data),this.init(),this.tick()}return r(e,[{key:"start",value:function(){var e=this;this.interval=setInterval(function(){e.tick()},1e3/this.speed)}},{key:"stop",value:function(){clearInterval(this.interval),this.interval=null}},{key:"init",value:function(){var e=this;this.dom=document.createElement("div"),this.dom.style.cssText="\n      width: "+this.width+"px;\n      height: "+this.height+"px;\n    ",this.zr=o.default.init(this.dom),this.container=new o.default.Group,this.bg=new o.default.Group,this.cells=new o.default.Group,this.container.add(this.bg),this.container.add(this.cells),this.zr.add(this.container),this.drawBg(),d3.select(this.dom).call(d3.zoom().scaleExtent([.1,10]).on("zoom",function(){e.zoomed()}))}},{key:"zoomed",value:function(){this.transform=d3.event.transform,this.container.position=[this.transform.x,this.transform.y],this.container.scale=[this.transform.k,this.transform.k],this.container.dirty(),this.drawBg()}},{key:"drawBg",value:function(){this.bg.removeAll();for(var e=this.grid*this.transform.k,t=Math.floor(8/e)+1,n=0;n<this.width/e;n+=t)for(var r=0;r<this.height/e;r+=t){var i=Math.floor(this.transform.x/e);this.bg.add(new o.default.Line({shape:{x1:(n-i)*this.grid,y1:-this.transform.y/this.transform.k,x2:(n-i)*this.grid,y2:(this.height-this.transform.y)/this.transform.k},style:{stroke:"#ccc"}}));var a=Math.floor(this.transform.y/e);this.bg.add(new o.default.Line({shape:{x1:-this.transform.x/this.transform.k,y1:(r-a)*this.grid,x2:(this.width-this.transform.x)/this.transform.k,y2:(r-a)*this.grid},style:{stroke:"#ccc"}}))}}},{key:"tick",value:function(){this.onTick&&this.onTick(),this.god.tick(),this.drawCells()}},{key:"drawCells",value:function(){var e=this;this.cells.removeAll(),this.god.cells.map(function(t){e.drawCell(t)})}},{key:"drawCell",value:function(e){var t=this.grid*this.transform.k;e.x*t+this.transform.x>this.width||e.x*t+this.transform.x<0||e.y*t+this.transform.y>this.height||e.y*t+this.transform.y<0||this.cells.add(new o.default.Rect({shape:{x:e.x*this.grid,y:e.y*this.grid,width:this.grid,height:this.grid},style:{fill:"#000"}}))}}]),e}();t.default=l},function(e,t){e.exports=zrender},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o,i=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),l=function(e){return e&&e.__esModule?e:{default:e}}(n(26));var u=(o=r=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.cells=[]}return a(e,[{key:"tick",value:function(){var t=this,n={};this.cells.filter(function(e){return e.stage===l.default.ALIVE}).map(function(e){for(var t=-1;t<=1;t++)for(var r=-1;r<=1;r++){var o=e.x+t+","+(e.y+r);n[o]||(n[o]=0===t&&0===r?e:null)}}),Object.keys(n).map(function(r){var o=r.split(",").map(function(e){return parseInt(e)}),a=i(o,2),u=a[0],c=a[1],s=t.toBeOrNotToBe(u,c);n[r]||s!==e.LIVE||t.cells.push(new l.default(u,c)),n[r]&&s===e.DIE&&n[r].die()}),this.cells=this.cells.filter(function(e){if(e.stage!==l.default.AFTER_ALIVE)return e.alive(),!0})}},{key:"addLives",value:function(e){var t=this;Array.isArray(e)&&e.map(function(e){t.cells.push(new l.default(e[0],e[1]))})}},{key:"toBeOrNotToBe",value:function(t,n){var r=this.cells.filter(function(e){return e.stage!==l.default.PRE_ALIVE&&Math.abs(e.x-t)<=1&&Math.abs(e.y-n)<=1&&(e.x!==t||e.y!==n)}).length;return 3===r?e.LIVE:2===r?e.KEEP:e.DIE}}]),e}(),r.LIVE=1,r.DIE=-1,r.KEEP=0,o);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var a=(o=r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.x=t,this.y=n,this.stage=e.PRE_ALIVE}return i(e,[{key:"alive",value:function(){this.stage=e.ALIVE}},{key:"die",value:function(){this.stage=e.AFTER_ALIVE}}]),e}(),r.PRE_ALIVE=0,r.ALIVE=1,r.AFTER_ALIVE=2,o);t.default=a},function(e,t,n){var r=n(28);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".js-view{width:100%;height:100%;position:relative}.js-view .toolbar{position:absolute;top:0;right:0;z-index:1}.js-view .toolbar button{cursor:pointer;margin:10px 10px 0 0}.js-view .sidebar{width:70px;height:100%;background:hsla(0,0%,100%,.8);position:absolute;left:0;top:0;z-index:1}.js-view .sidebar .module{width:50px;height:50px;line-height:50px;text-align:center;border:1px solid #999;margin:10px auto;cursor:pointer;background:#fff;color:#666}.js-view .sidebar .module:hover{box-shadow:1px 1px 5px rgba(0,0,0,.5)}.js-view .content{background:#000;height:100%;width:100%;overflow:hidden}.js-view .content svg{width:100%;height:100%;position:relative}.js-view .content svg .link-path{cursor:pointer}.js-view .content svg .link-path .path-hidden{fill:none;stroke-width:6px;stroke:transparent}.js-view .content svg .link-path .path-display{fill:none;stroke-width:2px;stroke:#8ac007;stroke-dasharray:5;stroke-dashoffset:10;animation:offset .5s linear infinite}.js-view .content svg .link-path:hover .path-hidden{stroke:#555}@keyframes offset{to{stroke-dashoffset:0}}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DragSource=t.DropTarget=void 0;var r=i(n(30)),o=i(n(31));function i(e){return e&&e.__esModule?e:{default:e}}t.DropTarget=r.default,t.DragSource=o.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(n){return r({},n,{props:r({},n.props,{onDragEnter:function(e){e.preventDefault()},onDragOver:function(e){e.preventDefault()},onDrop:function(n){n.preventDefault();var r=function(e){return JSON.parse(e.dataTransfer.getData("text"))}(n);-1!==e.indexOf(r.type)&&t.onDrop&&t.onDrop(r,n)}})})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(e,t){return function(n){return r({},n,{props:r({},n.props,{draggable:!0,onDragStart:function(n){n.dataTransfer.setData("text",JSON.stringify({type:e,data:t}))}})})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(33);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleClick=function(e){for(var t=arguments.length,r=Array(t>1?t-1:0),o=1;o<t;o++)r[o-1]=arguments[o];e&&e.apply(void 0,r),n.props.onBlur()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){this.refs.menu.focus()}},{key:"render",value:function(){var e=this,t=this.props,n=t.data,r=t.onBlur;return i.default.createElement("div",{className:"context-menu"},i.default.createElement("ul",{tabindex:"1",ref:"menu",onBlur:r},n.map(function(t,n){return i.default.createElement("li",{key:n,onClick:function(){for(var n=arguments.length,r=Array(n),o=0;o<n;o++)r[o]=arguments[o];return e.handleClick.apply(e,[t.onClick].concat(r))}},t.name)})))}}]),t}();t.default=a},function(e,t,n){var r=n(34);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".context-menu{background:#fff;font-size:12px;box-shadow:1px 1px 5px rgba(0,0,0,.5);min-width:100px;margin:2px}.context-menu>ul{margin:0;padding:0;list-style:none;border:1px solid #ddd}.context-menu>ul>li{cursor:pointer;padding:5px;border-bottom:1px solid #ddd}.context-menu>ul>li:last-child{border-bottom:none}.context-menu>ul>li:hover{background:#ddd}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=l(o);n(36);var a=l(n(4));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleDrag=function(e,t){new a.default({dom:e,onDrag:function(e,r){n.props.onDrag&&n.props.onDrag(t,e,r)}})},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.module,r=t.onLink,o=t.onZoom,a=t.onEdit,l=t.onContextMenu;return i.default.createElement("g",{className:"brick",transform:"translate("+(n.x-n.width/2)+", "+(n.y-n.height/2)+")"},i.default.createElement("g",{className:"io-area",onClick:function(){return r&&r(n)}},i.default.createElement("rect",{x:0,y:-5,width:n.width,height:5}),i.default.createElement("rect",{x:n.width,y:0,width:5,height:n.height}),i.default.createElement("rect",{x:0,y:n.height,width:n.width,height:5}),i.default.createElement("rect",{x:-5,y:0,width:5,height:n.height})),i.default.createElement("g",{className:"zoom-area",onClick:function(){return o&&o(n)}},i.default.createElement("rect",{x:-5,y:-5,width:5,height:5}),i.default.createElement("rect",{x:n.width,y:-5,width:5,height:5}),i.default.createElement("rect",{x:n.width,y:n.height,width:5,height:5}),i.default.createElement("rect",{x:-5,y:n.height,width:5,height:5})),i.default.createElement("g",{ref:function(t){return n.setDom(t,e.handleDrag)},onContextMenu:l},i.default.createElement("rect",{width:n.width,height:n.height}),i.default.createElement("text",{x:n.width/2,y:n.height/2,onDoubleClick:a},n.name)))}}]),t}();t.default=u},function(e,t,n){var r=n(37);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".brick .io-area{cursor:crosshair}.brick .zoom-area rect:first-child{cursor:nw-resize}.brick .zoom-area rect:nth-child(2){cursor:ne-resize}.brick .zoom-area rect:nth-child(3){cursor:se-resize}.brick .zoom-area rect:nth-child(4){cursor:sw-resize}.brick rect{fill:#fff;stroke:#999;stroke-width:1px}.brick text{fill:#666;text-anchor:middle;dominant-baseline:middle}.brick text:hover{fill:#000}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.load=function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script");return n.type="text/javascript",n.src=e,t.appendChild(n),new Promise(function(e){n.onload=n.onreadystatechange=function(){this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||(n.onload=n.onreadystatechange=null,t.removeChild(n),e())}})},t.uuid=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:24,n=[],r=0;r<36;r++)n[r]="0123456789abcdef".substr(Math.floor(16*Math.random()),1);return n[14]="4",n[19]="0123456789abcdef".substr(3&n[19]|8,1),n[8]=n[13]=n[18]=n[23]=e,n.join("").substr(0,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(9),a=function(e){return e&&e.__esModule?e:{default:e}}(i);var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,r({},e,{type:i.TYPE_VIEW})))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default),o(t,[{key:"output",value:function(){this.input.map(function(e){console.log("["+e.id+"] >>>",e.output())})}}]),t}();t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=function(e){var t=document.createElement("div");function n(){i.default.unmountComponentAtNode(t)&&t.parentNode&&t.parentNode.removeChild(t),e.onCancel&&e.onCancel.apply(e,arguments)}document.body.appendChild(t);var l=r({},e.content,{props:r({},e.content.props,{onBlur:n})});return i.default.render(o.default.createElement(a.default,{x:e.x,y:e.y},l),t),{destroy:n}};var o=l(n(0)),i=l(n(3)),a=l(n(41));function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),l=function(e){return e&&e.__esModule?e:{default:e}}(a);n(42);var u=(o=r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.rect={x:e.x,y:e.y},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),i(t,[{key:"render",value:function(){var e=this.props.children,t=this.rect,n=t.x,r=t.y;return l.default.createElement("div",{className:"popover",style:{left:n,top:r}},e)}}]),t}(),r.defaultProps={x:0,y:0},o);t.default=u},function(e,t,n){var r=n(43);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".popover{position:absolute}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(45);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleCancel=function(){n.props.onCancel&&n.props.onCancel()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.children;return i.default.createElement("div",{className:"modal",onClick:this.handleCancel},i.default.createElement("div",{className:"modal-container"},e))}}]),t}();t.default=a},function(e,t,n){var r=n(46);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".modal{position:fixed;left:0;top:0;background:rgba(0,0,0,.5)}.modal,.modal .modal-container{width:100%;height:100%}",""])},function(e,t,n){var r=n(48);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".editor{width:100%;height:100%}",""])},function(e){e.exports=[{id:"fb5aeb26b1b14237a0303202",type:"FUNCTION",name:"ƒ(x)",x:292,y:111,width:50,height:50,input:[],func:"function (a) {\n    return (a || 0) + 1;\n}"},{id:"123a068b93db4edd88539852",type:"FUNCTION",name:"ƒ(x)",x:292,y:200,width:50,height:50,input:[],func:"function () {\n    return 2;\n}"},{id:"4f0b3ba3df7340229b7a85a6",type:"FUNCTION",name:"ƒ(x)",x:460,y:157,width:50,height:50,input:["fb5aeb26b1b14237a0303202","123a068b93db4edd88539852"],func:"function (a, b) {\n    return a + b;\n}"},{id:"0c99f88b24f242b6a3f606af",type:"VIEW",name:"V(x)",x:591,y:157,width:50,height:50,input:["4f0b3ba3df7340229b7a85a6"],func:"function () {}"}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=document.createElement("div");function n(){o.default.unmountComponentAtNode(t)&&t.parentNode&&t.parentNode.removeChild(t),e.onCancel&&e.onCancel.apply(e,arguments)}document.body.appendChild(t);var a=e.width||window.innerWidth/2,l=e.height||window.innerHeight/2,u=void 0===e.x?(window.innerWidth-a)/2:e.x,c=void 0===e.y?(window.innerHeight-l)/2:e.y;return o.default.render(r.default.createElement(i.default,{name:e.name||"未知",onCancel:n,x:u,y:c,width:a,height:l},e.content),t),{destroy:n}};var r=a(n(0)),o=a(n(3)),i=a(n(51));function a(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o,i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),l=n(0),u=s(l);n(52);var c=s(n(4));function s(e){return e&&e.__esModule?e:{default:e}}var f=(o=r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleCancel=function(){n.props.onCancel&&n.props.onCancel()},n.handleMin=function(){console.log("最小化")},n.handleMax=function(){n.originSize?(n.resize(n.originSize),n.originSize=null):(n.originSize=n.rect,n.resize({x:0,y:0,width:window.innerWidth,height:window.innerHeight}))},n.handleResize=function(e,t){var r=e.pageX,o=e.pageY,i=function(e){var i=e.pageX-r,a=e.pageY-o;r=e.pageX,o=e.pageY;var l={};switch(t){case"left-top":l.x=n.rect.x+i,l.y=n.rect.y+a,l.width=n.rect.width-i,l.height=n.rect.height-a;break;case"top":l.y=n.rect.y+a,l.height=n.rect.height-a;break;case"right-top":l.y=n.rect.y+a,l.height=n.rect.height-a,l.width=n.rect.width+i;break;case"right":l.width=n.rect.width+i;break;case"right-bottom":l.height=n.rect.height+a,l.width=n.rect.width+i;break;case"bottom":l.height=n.rect.height+a;break;case"left-bottom":l.x=n.rect.x+i,l.width=n.rect.width-i,l.height=n.rect.height+a;break;case"left":l.x=n.rect.x+i,l.width=n.rect.width-i}n.resize(l)};window.addEventListener("mousemove",i),window.addEventListener("mouseup",function e(){window.removeEventListener("mousemove",i),window.removeEventListener("mouseup",e)})},n.rect={x:e.x,y:e.y,width:e.width,height:e.height},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.Component),a(t,[{key:"componentDidMount",value:function(){var e=this;new c.default({dom:this.refs["drag-handler"],onDrag:function(t,n){e.resize({x:e.rect.x+t,y:e.rect.y+n})}})}},{key:"resize",value:function(e){this.rect=i({},this.rect,e),this.refs.container.style.cssText="\n      left: "+this.rect.x+"px;\n      top: "+this.rect.y+"px;\n      width: "+this.rect.width+"px;\n      height: "+this.rect.height+"px;\n    "}},{key:"render",value:function(){var e=this,t=this.props,n=t.name,r=t.children,o=this.rect,i=o.x,a=o.y,l=o.width,c=o.height;return u.default.createElement("div",{className:"dialog"},u.default.createElement("div",{className:"dialog-container",ref:"container",style:{left:i,top:a,width:l,height:c}},u.default.createElement("div",{className:"dialog-header",ref:"drag-handler"},u.default.createElement("div",{className:"btns"},u.default.createElement("a",{onClick:this.handleCancel},u.default.createElement("svg",{x:"0px",y:"0px",width:"10px",height:"10px",viewBox:"0 -2 20 20"},u.default.createElement("polygon",{fill:"#4d0000",points:"15.9,5.2 14.8,4.1 10,8.9 5.2,4.1 4.1,5.2 8.9,10 4.1,14.8 5.2,15.9 10,11.1 14.8,15.9 15.9,14.8 11.1,10 "}))),u.default.createElement("a",{onClick:this.handleMin},u.default.createElement("svg",{x:"0px",y:"0px",width:"10px",height:"10px",viewBox:"0 -2 20 20"},u.default.createElement("rect",{fill:"#995700",x:"2.4",y:"9",width:"15.1",height:"2"}))),u.default.createElement("a",{onClick:this.handleMax},u.default.createElement("svg",{x:"0px",y:"0px",width:"10px",height:"10px",viewBox:"0 0 20 20"},u.default.createElement("path",{fill:"#006400",d:"M5.3,16H13L4,7v7.7C4.6,14.7,5.3,15.4,5.3,16z"}),u.default.createElement("path",{fill:"#006400",d:"M14.7,4H7l9,9V5.3C15.4,5.3,14.7,4.6,14.7,4z"})))),u.default.createElement("div",{className:"title"},n)),u.default.createElement("div",{className:"dialog-body"},r),u.default.createElement("div",{className:"zoom-area zoom-left-top",onMouseDown:function(t){return e.handleResize(t,"left-top")}}),u.default.createElement("div",{className:"zoom-area zoom-top",onMouseDown:function(t){return e.handleResize(t,"top")}}),u.default.createElement("div",{className:"zoom-area zoom-right-top",onMouseDown:function(t){return e.handleResize(t,"right-top")}}),u.default.createElement("div",{className:"zoom-area zoom-right",onMouseDown:function(t){return e.handleResize(t,"right")}}),u.default.createElement("div",{className:"zoom-area zoom-right-bottom",onMouseDown:function(t){return e.handleResize(t,"right-bottom")}}),u.default.createElement("div",{className:"zoom-area zoom-bottom",onMouseDown:function(t){return e.handleResize(t,"bottom")}}),u.default.createElement("div",{className:"zoom-area zoom-left-bottom",onMouseDown:function(t){return e.handleResize(t,"left-bottom")}}),u.default.createElement("div",{className:"zoom-area zoom-left",onMouseDown:function(t){return e.handleResize(t,"left")}})))}}]),t}(),r.defaultProps={x:0,y:0,width:600,height:400},o);t.default=f},function(e,t,n){var r=n(53);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".dialog{position:fixed;width:100%;height:100%;left:0;top:0;pointer-events:none;user-select:none}.dialog .dialog-container{pointer-events:all;position:absolute;background:#ececec;border-radius:4px;box-shadow:0 0 1px rgba(0,0,0,.31),0 0 5px rgba(0,0,0,.18),0 8px 50px rgba(0,0,0,.3)}.dialog .dialog-container .dialog-header{position:relative;z-index:1;width:100%;display:flex;align-items:center;min-height:22px;background-image:-webkit-linear-gradient(top,#ededed,#ededed 1px,#e7e7e7 2px,#d1d1d1);border-bottom:1px solid #afafaf;border-top:1px solid #f6f6f6;border-radius:5px 5px 0 0;padding:0 3px}.dialog .dialog-container .dialog-header .btns{display:flex;width:61px}.dialog .dialog-container .dialog-header .btns a{width:12px;height:12px;border:1px solid #ffa12a;border-radius:50%;margin:1px 4px 0 5px;line-height:0;background:#ffbd2e}.dialog .dialog-container .dialog-header .btns a svg{width:10px;height:10px;opacity:0}.dialog .dialog-container .dialog-header .btns a:first-child{background:#ff5f57;border-color:#ff463f}.dialog .dialog-container .dialog-header .btns a:last-child{background:#28c940;border-color:#12ac28}.dialog .dialog-container .dialog-header .btns:hover a svg{opacity:1}.dialog .dialog-container .dialog-header .title{font-size:12px;color:#4d4d4d;flex-grow:1;flex-shrink:1;text-align:center;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;padding-right:60px}.dialog .dialog-container .dialog-body{border-radius:0 0 4px 4px;height:100%;width:100%;padding-top:22px;position:absolute;top:0;overflow:hidden}.dialog .dialog-container .zoom-area{position:absolute;z-index:1}.dialog .dialog-container .zoom-area.zoom-left-bottom,.dialog .dialog-container .zoom-area.zoom-left-top,.dialog .dialog-container .zoom-area.zoom-right-bottom,.dialog .dialog-container .zoom-area.zoom-right-top{width:5px;height:5px;z-index:2}.dialog .dialog-container .zoom-area.zoom-bottom,.dialog .dialog-container .zoom-area.zoom-top{width:100%;height:5px}.dialog .dialog-container .zoom-area.zoom-left,.dialog .dialog-container .zoom-area.zoom-right{width:5px;height:100%}.dialog .dialog-container .zoom-area.zoom-left-top{cursor:nwse-resize;left:0;top:0}.dialog .dialog-container .zoom-area.zoom-right-top{cursor:nesw-resize;right:0;top:0}.dialog .dialog-container .zoom-area.zoom-left-bottom{cursor:nesw-resize;left:0;bottom:0}.dialog .dialog-container .zoom-area.zoom-right-bottom{cursor:nwse-resize;right:0;bottom:0}.dialog .dialog-container .zoom-area.zoom-top{cursor:ns-resize;left:0;top:0}.dialog .dialog-container .zoom-area.zoom-bottom{cursor:ns-resize;left:0;bottom:0}.dialog .dialog-container .zoom-area.zoom-left{cursor:ew-resize;left:0;top:0}.dialog .dialog-container .zoom-area.zoom-right{cursor:ew-resize;right:0;top:0}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(55);var a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(6));var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"handleOpenApp",value:function(e){a.open(e.key,{width:600,height:400})}},{key:"render",value:function(){var e=this;return i.default.createElement("div",{className:"finder"},i.default.createElement("div",{className:"sidebar"},i.default.createElement("ul",{className:"menu"},i.default.createElement("li",null,i.default.createElement("span",null,"个人收藏"),i.default.createElement("ul",{className:"sub-menu"},i.default.createElement("li",{className:"active"},i.default.createElement("i",{className:"iconfont icon-app-store"}),"  应用程序"),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-document"}),"  文档"),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-desktop"}),"  桌面"),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-download"}),"  下载"),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-recent"}),"  最近使用"))))),i.default.createElement("div",{className:"finder-body"},i.default.createElement("ul",null,[{name:"生命游戏",type:"game",key:"game-of-life"},{name:"可视化编程工具",type:"tool",key:"js-view"},{name:"JS编辑器",type:"tool",key:"editor"},{name:"Chrome",type:"tool",key:"chrome"}].map(function(t,n){return i.default.createElement("li",null,i.default.createElement("a",{onDoubleClick:function(){return e.handleOpenApp(t)}},i.default.createElement("i",{className:"iconfont icon-"+t.type})," ",t.name))}))))}}]),t}();t.default=l},function(e,t,n){var r=n(56);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".finder{width:100%;height:100%;user-select:none}.finder .sidebar{width:150px;height:100%;float:left;background:#d6d6d6;padding:5px 0}.finder .sidebar .menu,.finder .sidebar .sub-menu{margin:0;padding:0;list-style:none}.finder .sidebar .menu{font-size:12px}.finder .sidebar .menu>li>span{padding-left:5px}.finder .sidebar .sub-menu li{font-size:14px;color:#181818;height:24px;line-height:24px;padding-left:15px}.finder .sidebar .sub-menu li i{color:#666}.finder .sidebar .sub-menu li.active{background:#848d91}.finder .finder-body{overflow:hidden;height:100%}.finder .finder-body ul{margin:0;padding:0;list-style:none;font-size:12px;width:200px;height:100%;border-right:1px solid #d9d9d9}.finder .finder-body ul li{height:18px;line-height:18px}.finder .finder-body ul li a{display:block;padding-left:5px;cursor:pointer}.finder .finder-body ul li a i{font-size:14px;color:#666}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(58);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleKey=function(e){13===e.keyCode&&(e.target.value.match(/https?:\/\//)||(e.target.value="http://"+e.target.value),n.setState({addr:e.target.value}))},n.handleRefresh=function(){n.forceUpdate()},n.state={addr:"https://codepen.io/lanyuechen"},window.addEventListener("keypress",n.handleKey),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.state.addr;return i.default.createElement("div",{className:"browser"},i.default.createElement("div",{className:"tab-bar"},"tab栏"),i.default.createElement("div",{className:"address-bar"},i.default.createElement("ul",null,i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-left"})),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-right"})),i.default.createElement("li",{onClick:this.handleRefresh},i.default.createElement("i",{className:"iconfont icon-refresh"})),i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-home"})),i.default.createElement("li",{className:"address"},i.default.createElement("input",{type:"text",defaultValue:e})))),i.default.createElement("div",{className:"body"},i.default.createElement("iframe",{src:e,frameborder:"0"})))}}]),t}();t.default=a},function(e,t,n){var r=n(59);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".browser{width:100%;height:100%;position:relative}.browser .tab-bar{height:25px}.browser .address-bar{border-bottom:1px solid #ddd;height:25px}.browser .address-bar ul{margin:0;padding:0;list-style:none;display:flex;height:22px}.browser .address-bar ul li{padding:0 5px;border-radius:50%;cursor:pointer;line-height:22px}.browser .address-bar ul li:hover{background:#e0e0e0}.browser .address-bar ul li i{font-size:12px}.browser .address-bar ul li.address{flex:1;border-radius:0}.browser .address-bar ul li.address:hover{background:none}.browser .address-bar ul li.address input{width:100%;height:100%;border:none}.browser .body{position:absolute;top:51px;bottom:0;left:0;right:0}.browser .body iframe{width:100%;height:100%}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(61);var a=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"handleClick",value:function(e){this.props.onClick&&this.props.onClick(e)}},{key:"render",value:function(){var e=this,t=this.props.data;return i.default.createElement("div",{className:"dock"},i.default.createElement("ul",null,t.map(function(t){return i.default.createElement("li",{key:t.key},i.default.createElement("span",null,t.name),i.default.createElement("a",{onClick:function(){return e.handleClick(t)}},i.default.createElement("img",{src:"public/img/dock/"+t.key+".png"})))})))}}]),t}();t.default=a},function(e,t,n){var r=n(62);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".dock ul{list-style:none;margin:0;background:rgba(0,0,0,.5);border-radius:10px 10px 0 0;height:74px;padding:10px}.dock ul li{padding:0 5px;display:inline-block;position:relative}.dock ul li a{cursor:pointer}.dock ul li a img{width:50px;-webkit-box-reflect:below 2px -webkit-gradient(linear,left top,left bottom,from(transparent),color-stop(.7,transparent),to(hsla(0,0%,100%,.5)));transition:all .3s;transform-origin:50% 90%}.dock ul li span{pointer-events:none;display:none;position:absolute;bottom:100px;width:100%;background:rgba(0,0,0,.8);color:#fff;padding:4px 0;border-radius:5px;text-align:center;white-space:nowrap;font-size:12px}.dock ul li:hover span{display:block}.dock ul li:hover img{transform:scale(1.8);margin:0 20px}.dock ul li:hover+li a img{transform:scale(1.2);margin:0 15px}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),a=s(i);n(64);var l=s(n(66)),u=s(n(4)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(6));function s(e){return e&&e.__esModule?e:{default:e}}var f=100,d=5,p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.fsData=t.find(l.default,e.path),n.fsData=r({},n.fsData,{children:n.fsData.children.map(function(e,t){return r({},e,{x:Math.floor(t/d)*f,y:t%d*f+22})})}),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),o(t,null,[{key:"find",value:function(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"/";if(n===(r=(r+"/"+e.path).replace(/\/{2,}/,"/")))return e;if(e.children){var o=!0,i=!1,a=void 0;try{for(var l,u=e.children[Symbol.iterator]();!(o=(l=u.next()).done);o=!0){var c=l.value,s=t.find(c,n,r);if(s)return s}}catch(e){i=!0,a=e}finally{try{!o&&u.return&&u.return()}finally{if(i)throw a}}}}}]),o(t,[{key:"componentDidMount",value:function(){this.fsData.children.map(function(e){new u.default({dom:e.dom,onDrag:function(t,n){e.x=e.x+t,e.y=e.y+n,e.dom.style.cssText="\n            left: "+e.x+"px;\n            top: "+e.y+"px;\n          "}})})}},{key:"handleOpenApp",value:function(e){c.open(e.key,{width:600,height:400})}},{key:"render",value:function(){var e=this,t=this.fsData.children;return a.default.createElement("div",{className:"fs"},t.map(function(n,r){return a.default.createElement("div",{className:"fs-item",tabIndex:r,key:r,ref:function(e){return t[r].dom=e},style:{left:n.x,top:n.y}},a.default.createElement("a",{onDoubleClick:function(){return e.handleOpenApp(n)}},a.default.createElement("img",{src:n.icon||"public/img/icon/default.png"}),a.default.createElement("label",null,n.children?n.path:n.name)))}))}}]),t}();t.default=p},function(e,t,n){var r=n(65);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".fs{width:100%;height:100%;pointer-events:none;left:0;top:0}.fs,.fs .fs-item{position:absolute}.fs .fs-item{pointer-events:all;padding:15px}.fs .fs-item a{display:block}.fs .fs-item a img{width:60px;display:block;pointer-events:none}.fs .fs-item a label{color:#fff;display:block;margin-top:5px;width:100%;text-align:center;font-size:12px;text-shadow:1px 1px 2px rgba(0,0,0,.5)}",""])},function(e){e.exports={path:"/",children:[{path:"Users",children:[{path:"lanyuechen",children:[{path:"Desktop",children:[{name:"Chrome",key:"chrome",icon:"public/img/icon/chrome.png"},{name:"生命游戏",key:"game-of-life",icon:"public/img/icon/game-of-life.jpeg"},{name:"编辑器",key:"editor",icon:"public/img/icon/editor.png"},{name:"jsVIEW",key:"js-view",icon:"public/img/icon/js-view.png"},{name:"文件夹",key:"file",icon:"public/img/icon/file.png"}]}]}]}]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(68);var a=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return i.default.createElement("div",{className:"sys-menu-bar"},i.default.createElement("ul",null,i.default.createElement("li",null,i.default.createElement("i",{className:"iconfont icon-apple"})),i.default.createElement("li",{tabIndex:1},"Finder"),i.default.createElement("li",{tabIndex:2},"文件"),i.default.createElement("li",{tabIndex:3},"编辑"),i.default.createElement("li",{tabIndex:4},"显示"),i.default.createElement("li",{tabIndex:5},"前往"),i.default.createElement("li",{tabIndex:6},"窗口"),i.default.createElement("li",{tabIndex:7},"帮助")))}}]),t}();t.default=a},function(e,t,n){var r=n(69);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".sys-menu-bar{position:fixed;top:0;left:0;width:100%;height:22px;background:hsla(0,0%,100%,.8);border-bottom:1px solid rgba(0,0,0,.3);box-shadow:0 2px 10px rgba(0,0,0,.1)}.sys-menu-bar ul{margin:0 10px;padding:0;list-style:none;font-size:14px}.sys-menu-bar ul li{float:left;padding:0 10px;color:#25333b}.sys-menu-bar ul li:focus{background:#3385ef;color:#fff}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=function(e){return e&&e.__esModule?e:{default:e}}(o);n(71);var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleSearch=function(e){n.setState({search:e.target.value})},n.handleClick=function(e,t){console.log("=====handleClick=====",t)},n.state={search:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props.data,n=this.state.search;return i.default.createElement("div",{className:"launchpad"},i.default.createElement("div",{className:"search",onClick:function(e){e.stopPropagation(),e.preventDefault()}},i.default.createElement("div",{className:"search-container"},i.default.createElement("i",{className:"iconfont icon-search"}),i.default.createElement("input",{onChange:this.handleSearch,type:"text",placeholder:"搜索"}))),i.default.createElement("ul",null,t.filter(function(e){return!n||e.name.match(new RegExp(n,"i"))}).map(function(t){return i.default.createElement("li",{key:t.key},i.default.createElement("a",{onClick:function(n){return e.handleClick(n,t)}},i.default.createElement("img",{src:"public/img/dock/"+t.key+".png"})),i.default.createElement("span",null,t.name))})))}}]),t}();t.default=a},function(e,t,n){var r=n(72);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".launchpad{padding:25px 100px 100px;height:100%}.launchpad .search{text-align:center}.launchpad .search .search-container{display:inline;position:relative}.launchpad .search .search-container i{position:absolute;top:6px;left:8px;font-size:12px;color:hsla(0,0%,100%,.8)}.launchpad .search .search-container input{background:hsla(0,0%,100%,.1);border:1px solid hsla(0,0%,100%,.3);color:hsla(0,0%,100%,.8);border-radius:2px;width:250px;height:25px;line-height:25px;text-indent:25px}.launchpad .search .search-container input::-webkit-input-placeholder{color:hsla(0,0%,100%,.8)}.launchpad .search .search-container input:focus{border-color:hsla(0,0%,100%,.5)}.launchpad ul{list-style:none;margin:0;padding:0}.launchpad ul li{position:relative;float:left;margin:20px}.launchpad ul li a{cursor:pointer}.launchpad ul li a img{width:64px}.launchpad ul li span{display:block;color:#fff;font-size:12px;text-align:center}",""])},function(e){e.exports=[{key:"finder",name:"Finder"},{key:"chrome",name:"Chrome"},{key:"launchpad",name:"Launchpad"},{key:"preference",name:"Preference"},{key:"itunes",name:"Itunes"},{key:"siri",name:"Siri"},{key:"app-store",name:"App Store"}]}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiUmVhY3RcIiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcIlJlYWN0RE9NXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xpYi9kcmFnL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL21vZGFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9nYW1lLW9mLWxpZmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9qcy12aWV3L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAvanMtdmlldy9tb2R1bGUvZGVmYXVsdC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2VkaXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlLnNjc3M/YzFjMyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9kZXNrdG9wL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9kZXNrdG9wL3N0eWxlLnNjc3M/ZThhMiIsIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvZGVza3RvcC9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi91cmwvZXNjYXBlLmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9kZXNrdG9wL2ltZy9iZy5qcGciLCJ3ZWJwYWNrOi8vLy4vc3JjL2xpYi9jYXJvdXNlbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvbGliL2Nhcm91c2VsL3N0eWxlLnNjc3M/NDNkZSIsIndlYnBhY2s6Ly8vLi9zcmMvbGliL2Nhcm91c2VsL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9nYW1lLW9mLWxpZmUvd29ybGQuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwienJlbmRlclwiIiwid2VicGFjazovLy8uL3NyYy9hcHAvZ2FtZS1vZi1saWZlL2dvZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2dhbWUtb2YtbGlmZS9jZWxsLmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAvanMtdmlldy9zdHlsZS5zY3NzP2ZjZGMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9qcy12aWV3L3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xpYi9kbmQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xpYi9kbmQvZHJvcC10YXJnZXQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xpYi9kbmQvZHJhZy1zb3VyY2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9qcy12aWV3L2NvbnRleHQtbWVudS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2pzLXZpZXcvY29udGV4dC1tZW51L3N0eWxlLnNjc3M/ZGFlZSIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2pzLXZpZXcvY29udGV4dC1tZW51L3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9qcy12aWV3L2JyaWNrL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAvanMtdmlldy9icmljay9zdHlsZS5zY3NzP2ZkOGEiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9qcy12aWV3L2JyaWNrL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xpYi9jb21tb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9qcy12aWV3L21vZHVsZS92aWV3LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3BvcG92ZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvcG9wb3Zlci9wb3BvdmVyLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3BvcG92ZXIvc3R5bGUuc2Nzcz8wNDdjIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3BvcG92ZXIvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9tb2RhbC9tb2RhbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9tb2RhbC9zdHlsZS5zY3NzPzYxYmYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvbW9kYWwvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2VkaXRvci9zdHlsZS5zY3NzPzMwOWYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9lZGl0b3Ivc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9kaWFsb2cvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZGlhbG9nL2RpYWxvZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9kaWFsb2cvc3R5bGUuc2Nzcz9jNDc0Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2RpYWxvZy9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2ZpbmRlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9maW5kZXIvc3R5bGUuc2Nzcz82ZTMyIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2ZpbmRlci9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL3NyYy9hcHAvYnJvd3Nlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2Jyb3dzZXIvc3R5bGUuc2Nzcz83NmVmIiwid2VicGFjazovLy8uL3NyYy9hcHAvYnJvd3Nlci9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2RvY2svaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZG9jay9zdHlsZS5zY3NzPzA4OGMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvZG9jay9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2ZzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2ZzL3N0eWxlLnNjc3M/OGE2OSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9mcy9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3N5cy1tZW51LWJhci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9zeXMtbWVudS1iYXIvc3R5bGUuc2Nzcz9mNWE3Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3N5cy1tZW51LWJhci9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2xhdW5jaHBhZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9sYXVuY2hwYWQvc3R5bGUuc2Nzcz8yZjQ1Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2xhdW5jaHBhZC9zdHlsZS5zY3NzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiUmVhY3QiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b0NvbW1lbnQiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJjb25jYXQiLCJqb2luIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwibGVuZ3RoIiwiaWQiLCJwdXNoIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwiZm4iLCJtZW1vIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJtZW1vaXplIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsIm9wdGlvbnMiLCJkb21TdHlsZSIsInJlZnMiLCJqIiwicGFydHMiLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsIm5ld1N0eWxlcyIsImJhc2UiLCJwYXJ0IiwiY3NzIiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImluc2VydEludG8iLCJFcnJvciIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImFwcGVuZENoaWxkIiwiZmlyc3RDaGlsZCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImlkeCIsImluZGV4T2YiLCJzcGxpY2UiLCJjcmVhdGVTdHlsZUVsZW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidW5kZWZpbmVkIiwiYXR0cnMiLCJ0eXBlIiwiYWRkQXR0cnMiLCJlbCIsImtleXMiLCJmb3JFYWNoIiwic2V0QXR0cmlidXRlIiwib2JqIiwidXBkYXRlIiwicmVtb3ZlIiwicmVzdWx0IiwidHJhbnNmb3JtIiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwibGluayIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJibG9iIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJuZXdPYmoiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJyZXBsYWNlVGV4dCIsInRleHRTdG9yZSIsImluZGV4IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJSZWFjdERPTSIsIkRyYWciLCJfcmVmIiwiX3RoaXMiLCJkb20iLCJvbkRyYWciLCJvbkRyYWdFbmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJkcmFnU3RhcnQiLCJseCIsInBhZ2VYIiwibHkiLCJwYWdlWSIsImFkZEV2ZW50TGlzdGVuZXIiLCJkcmFnIiwiZHJhZ0VuZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjYiIsImYiLCJkeCIsImR5IiwiY29uZmlnIiwiZGl2IiwiY2xvc2UiLCJnZXRFbGVtZW50QnlJZCIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJvbkNhbmNlbCIsImJvZHkiLCJyZW5kZXIiLCJfcmVhY3QyIiwiZGVmYXVsdCIsIl9tb2RhbDIiLCJkZXN0cm95Iiwib3BlbiIsInByb3BzIiwiQXBwIiwiQVBQUyIsImFsZXJ0IiwiX2RpYWxvZzIiLCJ3aWR0aCIsImhlaWdodCIsImZpbmRlciIsIkZpbmRlciIsImNocm9tZSIsIkJyb3dzZXIiLCJnYW1lLW9mLWxpZmUiLCJHYW1lT2ZMaWZlIiwiZWRpdG9yIiwiRWRpdG9yIiwianMtdmlldyIsIkpzVmlldyIsIl9yZWFjdCIsIkdhbWUiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsImdldFByb3RvdHlwZU9mIiwiaGFuZGxlU3RhcnQiLCJ3b3JsZCIsInN0YXJ0IiwiaGFuZGxlU3RvcCIsInN0b3AiLCJoYW5kbGVUaWNrIiwic2V0U3RhdGUiLCJ0aW1lcyIsInN0YXRlIiwiQ29tcG9uZW50IiwiV29ybGQiLCJzcGVlZCIsImRhdGEiLCJvblRpY2siLCJjb250YWluZXIiLCJvbkNsaWNrIiwicmVmIiwiX2RuZCIsIl9kZWZhdWx0Iiwic2F2ZSIsIngiLCJ5IiwiaW5wdXQiLCJkZCIsImZ1bmMiLCJkb3dubG9hZCIsInNhdmVNb2RlbCIsInRvZ2dsZSIsInJ1bm5pbmciLCJyZXNldCIsImNsZWFySW50ZXJ2YWwiLCJpbnRlcnZhbCIsIlRJQ0tfQ09VTlQiLCJzZXRJbnRlcnZhbCIsInRpY2siLCJmb3JjZVVwZGF0ZSIsImhhbmRsZURyb3AiLCJib3VuZGluZ1JlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJUWVBFX1ZJRVciLCJWaWV3IiwiTSIsImhhbmRsZUxpbmsiLCJjdXJyZW50SW5wdXQiLCJhZGRJbnB1dCIsImNsZWFyVG1wTGluayIsInRtcFBhdGgiLCJjcmVhdGVFbGVtZW50TlMiLCJsaW5lcyIsImxpbmtBbmltYXRlIiwicGF0aERhdGEiLCJoYW5kbGVLZXlQcmVzcyIsInN0b3BQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwiaGFuZGxlRHJhZyIsImhhbmRsZUNvbnRleHRNZW51IiwiX3BvcG92ZXIyIiwiX2NvbnRleHRNZW51MiIsImhhbmRsZUVkaXQiLCJoYW5kbGVMaW5rQ29udGV4dCIsImhhbmRsZUNvbmZpcm0iLCJzZXRGdW5jIiwibW9kYWwiLCJtYXJnaW4iLCJfZWRpdG9yMiIsIm9uQ29uZmlybSIsInR4dCIsImxvYWQiLCJkZW1vIiwiZHMiLCJfZCRtIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiZmluZCIsImZpbGVuYW1lIiwiYSIsImRpc3BsYXkiLCJjbGljayIsInZpZXdzIiwidmlldyIsIm91dHB1dCIsImIiLCJhciIsImFsIiwiYXQiLCJhYiIsImJsIiwiYnQiLCJiYiIsIk1hdGgiLCJtYXgiLCJtaW4iLCJjb25zb2xlIiwibG9nIiwiX3RoaXMyIiwiY2xhc3NOYW1lIiwiVFlQRVMiLCJEcmFnU291cmNlIiwiRHJvcFRhcmdldCIsIm9uRHJvcCIsIm9uQ29udGV4dE1lbnUiLCJfYnJpY2syIiwib25MaW5rIiwib25ab29tIiwiaGFuZGxlWm9vbSIsIm9uRWRpdCIsIl9jb21tb24iLCJUWVBFX0ZVTkNUSU9OIiwiX3JlZiRpbnB1dCIsIl9yZWYkd2lkdGgiLCJfcmVmJGhlaWdodCIsIl9yZWYkdHlwZSIsInV1aWQiLCJ0aWNrQ291bnQiLCJsYXN0RGF0YSIsIl9sZW4iLCJBcnJheSIsIl9rZXkiLCJfbGVuMiIsIl9rZXkyIiwiZXZhbCIsImdldFZhbHVlIiwiYWNlIiwiZWRpdCIsInNldFRoZW1lIiwic2Vzc2lvbiIsInNldE1vZGUiLCJjaGlsZHJlbiIsIl9kZXNrdG9wMiIsImhtciIsImxvY2FscyIsImxvY2F0aW9uIiwiYmFzZVVybCIsInByb3RvY29sIiwiaG9zdCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsInJlcGxhY2UiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwidHJpbSIsIiQxIiwidGVzdCIsImFwcCIsIkRlc2t0b3AiLCJoYW5kbGVDbGljayIsIl9sYXVuY2hwYWQyIiwiYXBwcyIsImRlc2t0b3BzIiwiX3N5c01lbnVCYXIyIiwiX2ZzMiIsInBhdGgiLCJfZG9jazIiLCJfanNWaWV3MiIsImVzY2FwZSIsInVybCIsInNsaWNlIiwiQ2Fyb3VzZWwiLCJfaW5pdGlhbGlzZVByb3BzIiwiaXRlbVdpZHRoIiwiaXRlbUhlaWdodCIsImN1cnJlbnRQYWdlIiwiY291bnQiLCJDaGlsZHJlbiIsInRyYW5zaXRpb24iLCJoYW5kbGVLZXkiLCJtdWx0aSIsIl9yZWZzJHdyYXAiLCJ3cmFwIiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJzZXRBdXRvIiwibmV4dFByb3BzIiwiX3Byb3BzIiwiaG9yaXpvbiIsIm5leHQiLCJwcmV2IiwibG9vcCIsIl9zdGF0ZSIsIml0ZW1zIiwidG9BcnJheSIsImxlZnQiLCJ0b3AiLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJjaGlsZCIsImRlZmF1bHRQcm9wcyIsInN0ZXAiLCJwYWdpbmF0aW9uIiwiYWx0S2V5Iiwia2V5Q29kZSIsIl9wcm9wczIiLCJfc3RhdGUyIiwic2V0VGltZW91dCIsIl9zdGF0ZTMiLCJncmlkIiwiayIsImdvZCIsIkdvZCIsImFkZExpdmVzIiwiaW5pdCIsInpyIiwienJlbmRlciIsIkdyb3VwIiwiYmciLCJjZWxscyIsImFkZCIsImRyYXdCZyIsImQzIiwic2VsZWN0Iiwiem9vbSIsInNjYWxlRXh0ZW50Iiwib24iLCJ6b29tZWQiLCJldmVudCIsInBvc2l0aW9uIiwic2NhbGUiLCJkaXJ0eSIsInJlbW92ZUFsbCIsImZsb29yIiwib2Zmc2V0WCIsIkxpbmUiLCJzaGFwZSIsIngxIiwieTEiLCJ4MiIsInkyIiwic3Ryb2tlIiwib2Zmc2V0WSIsImRyYXdDZWxscyIsIl90aGlzMyIsImRyYXdDZWxsIiwiY2VsbCIsIlJlY3QiLCJmaWxsIiwiZGlzdHJpY3QiLCJzdGFnZSIsIkNlbGwiLCJBTElWRSIsIl9rJHNwbGl0JG1hcCIsInNwbGl0IiwicGFyc2VJbnQiLCJfayRzcGxpdCRtYXAyIiwiX3NsaWNlZFRvQXJyYXkiLCJ3dGYiLCJ0b0JlT3JOb3RUb0JlIiwiTElWRSIsIkRJRSIsImRpZSIsIkFGVEVSX0FMSVZFIiwiYWxpdmUiLCJsaXZlcyIsImlzQXJyYXkiLCJQUkVfQUxJVkUiLCJhYnMiLCJLRUVQIiwiYWNjZXB0cyIsIndpZGdldCIsIl9leHRlbmRzIiwib25EcmFnRW50ZXIiLCJvbkRyYWdPdmVyIiwicGFyc2UiLCJkYXRhVHJhbnNmZXIiLCJnZXREYXRhIiwiZHJhZ2dhYmxlIiwib25EcmFnU3RhcnQiLCJzZXREYXRhIiwiQ29udGV4dE1lbnUiLCJwYXJhbXMiLCJvbkJsdXIiLCJtZW51IiwiZm9jdXMiLCJ0YWJpbmRleCIsIkJyaWNrIiwic2V0RG9tIiwib25Eb3VibGVDbGljayIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic2NyaXB0Iiwic3JjIiwiUHJvbWlzZSIsInJlc29sdmUiLCJvbmxvYWQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwic2VwIiwibGVuIiwic3Vic3RyIiwicmFuZG9tIiwiRGVmYXVsdCIsIlBvcG92ZXIiLCJyZWN0IiwiX3JlY3QiLCJNb2RhbCIsImhhbmRsZUNhbmNlbCIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsIkRpYWxvZyIsImhhbmRsZU1pbiIsImhhbmRsZU1heCIsIm9yaWdpblNpemUiLCJyZXNpemUiLCJoYW5kbGVSZXNpemUiLCJldiIsImhhbmRsZU1vdXNlVXAiLCJ2aWV3Qm94IiwicG9pbnRzIiwib25Nb3VzZURvd24iLCJoYW5kbGVPcGVuQXBwIiwibWF0Y2giLCJhZGRyIiwiaGFuZGxlUmVmcmVzaCIsImRlZmF1bHRWYWx1ZSIsImZyYW1lYm9yZGVyIiwiRG9jayIsIkdSSURfU0laRSIsIlJPV19TSVpFIiwiRnMiLCJmc0RhdGEiLCJmcyIsImN1cnJlbnRQYXRoIiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiIsIl9kaWRJdGVyYXRvckVycm9yIiwiX2l0ZXJhdG9yRXJyb3IiLCJfc3RlcCIsIl9pdGVyYXRvciIsIml0ZXJhdG9yIiwiZG9uZSIsInJlcyIsImVyciIsInJldHVybiIsImZpbGVzIiwidGFiSW5kZXgiLCJpY29uIiwiU3lzTWVudUJhciIsIkxhdW5jaHBhZCIsImhhbmRsZVNlYXJjaCIsInNlYXJjaCIsIm9uQ2hhbmdlIiwicGxhY2Vob2xkZXIiLCJSZWdFeHAiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxHQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsYUFBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURtQixPQUFBLEtBUWpEckIsRUFBQXNCLEVBQUEsU0FBQUQsRUFBQUUsR0FFQSxHQURBLEVBQUFBLElBQUFGLEVBQUFyQixFQUFBcUIsSUFDQSxFQUFBRSxFQUFBLE9BQUFGLEVBQ0EsS0FBQUUsR0FBQSxpQkFBQUYsUUFBQUcsV0FBQSxPQUFBSCxFQUNBLElBQUFJLEVBQUFYLE9BQUFZLE9BQUEsTUFHQSxHQUZBMUIsRUFBQWtCLEVBQUFPLEdBQ0FYLE9BQUFDLGVBQUFVLEVBQUEsV0FBeUNULFlBQUEsRUFBQUssVUFDekMsRUFBQUUsR0FBQSxpQkFBQUYsRUFBQSxRQUFBTSxLQUFBTixFQUFBckIsRUFBQVUsRUFBQWUsRUFBQUUsRUFBQSxTQUFBQSxHQUFnSCxPQUFBTixFQUFBTSxJQUFxQkMsS0FBQSxL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LElBQUErQyxHQUFlaVEsS0FBQSxFQUVmdE4sZUFQQUEsRUFRQTdCLGdCQUFBaUIsR0FFQXpILEVBQUEsRUFBQUEsQ0FBQTJDLEVBQUErQyxHQUVBL0MsRUFBQWlULFNBQUF6VixFQUFBRCxRQUFBeUMsRUFBQWlULDBCQ2pCQXpWLEVBQUFELFFBQUFGLEVBQUEsRUFBQUEsRUFBQSxJQUtBZ0UsTUFBQTdELEVBQUFDLEVBQUEsaTVCQUF3NkIiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDExKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gUmVhY3Q7IiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50byArIFwiIFwiICsgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IFJlYWN0RE9NOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIERyYWcge1xuICBjb25zdHJ1Y3Rvcih7ZG9tLCBvbkRyYWcsIG9uRHJhZ0VuZH0pIHtcbiAgICB0aGlzLm9uRHJhZyA9IG9uRHJhZztcbiAgICB0aGlzLm9uRHJhZ0VuZCA9IG9uRHJhZ0VuZDtcbiAgICBkb20uYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5kcmFnU3RhcnQpO1xuICB9XG5cbiAgZHJhZ1N0YXJ0ID0gKGUpID0+IHtcbiAgICB0aGlzLmx4ID0gZS5wYWdlWDtcbiAgICB0aGlzLmx5ID0gZS5wYWdlWTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5kcmFnKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuZHJhZ0VuZCk7XG4gIH07XG5cbiAgZHJhZ0VuZCA9IChlKSA9PiB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuZHJhZyk7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLmRyYWdFbmQpO1xuICAgIHRoaXMuY2IoZSwgdGhpcy5vbkRyYWdFbmQpO1xuICB9O1xuXG4gIGRyYWcgPSAoZSkgPT4ge1xuICAgIHRoaXMuY2IoZSwgdGhpcy5vbkRyYWcpO1xuICB9O1xuXG4gIGNiKGUsIGYpIHtcbiAgICBpZiAoZikge1xuICAgICAgY29uc3QgZHggPSBlLnBhZ2VYIC0gdGhpcy5seDtcbiAgICAgIGNvbnN0IGR5ID0gZS5wYWdlWSAtIHRoaXMubHk7XG4gICAgICB0aGlzLmx4ID0gZS5wYWdlWDtcbiAgICAgIHRoaXMubHkgPSBlLnBhZ2VZO1xuICAgICAgZihkeCwgZHkpO1xuICAgIH1cbiAgfVxufSIsIi8vdG9kbyDov5nkuKrlip/og73ot59kaWFsb2fnsbvkvLws5Lul5ZCO6KaB5o+Q5Y+W5YWs5YWx6YOo5YiGXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IE1vZGFsIGZyb20gJy4vbW9kYWwnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb25maWcpIHtcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykuc3R5bGUuZmlsdGVyID0gJ2JsdXIoMTBweCknO1xuXG4gIGZ1bmN0aW9uIGNsb3NlKC4uLmFyZ3MpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJykuc3R5bGUuZmlsdGVyID0gJ25vbmUnO1xuICAgIGlmIChSZWFjdERPTS51bm1vdW50Q29tcG9uZW50QXROb2RlKGRpdikgJiYgZGl2LnBhcmVudE5vZGUpIHtcbiAgICAgIGRpdi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGRpdik7XG4gICAgfVxuICAgIGlmIChjb25maWcub25DYW5jZWwpIHtcbiAgICAgIGNvbmZpZy5vbkNhbmNlbCguLi5hcmdzKTtcbiAgICB9XG4gIH1cblxuICBSZWFjdERPTS5yZW5kZXIoKFxuICAgIDxNb2RhbFxuICAgICAgb25DYW5jZWw9e2Nsb3NlfVxuICAgID5cbiAgICAgIHtjb25maWcuY29udGVudH1cbiAgICA8L01vZGFsPlxuICApLCBkaXYpO1xuXG4gIHJldHVybiB7XG4gICAgZGVzdHJveTogY2xvc2VcbiAgfTtcbn1cbiIsImltcG9ydCBkaWFsb2cgZnJvbSAnY29tcG9uZW50cy9kaWFsb2cnO1xuaW1wb3J0IG1vZGFsIGZyb20gJ2NvbXBvbmVudHMvbW9kYWwnO1xuXG4vL3RvZG8g6L+Z5Liq5LiN566X5bqU55SoLOS9v+eUqOS4gOS4quabtOWlveeahOaWueW8j+S7o+abv1xuaW1wb3J0IEZpbmRlciBmcm9tICdjb21wb25lbnRzL2ZpbmRlcic7XG5cbmltcG9ydCBCcm93c2VyIGZyb20gJ2FwcC9icm93c2VyJztcbmltcG9ydCBHYW1lT2ZMaWZlIGZyb20gJ2FwcC9nYW1lLW9mLWxpZmUnO1xuaW1wb3J0IEVkaXRvciBmcm9tICdhcHAvZWRpdG9yJztcbmltcG9ydCBKc1ZpZXcgZnJvbSAnYXBwL2pzLXZpZXcnO1xuXG5jb25zdCBBUFBTID0ge1xuICAnZmluZGVyJzogRmluZGVyLFxuXG4gICdjaHJvbWUnOiBCcm93c2VyLFxuICAnZ2FtZS1vZi1saWZlJzogR2FtZU9mTGlmZSxcbiAgJ2VkaXRvcic6IEVkaXRvcixcbiAgJ2pzLXZpZXcnOiBKc1ZpZXdcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBvcGVuKGtleSwgcHJvcHMpIHtcbiAgY29uc3QgQXBwID0gQVBQU1trZXldO1xuICBpZiAoIUFwcCkge1xuICAgIGFsZXJ0KCfor6XlupTnlKjlt7LmjZ/lnY8hJyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGRpYWxvZyh7XG4gICAgbmFtZToga2V5LFxuICAgIHdpZHRoOiBwcm9wcy53aWR0aCxcbiAgICBoZWlnaHQ6IHByb3BzLmhlaWdodCxcbiAgICBjb250ZW50OiA8QXBwIC8+XG4gIH0pXG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBXb3JsZCBmcm9tICcuL3dvcmxkJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB0aW1lczogMFxuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMud29ybGQgPSBuZXcgV29ybGQoe1xuICAgICAgd2lkdGg6IDYwMCxcbiAgICAgIGhlaWdodDogNDAwLFxuICAgICAgc3BlZWQ6IDEwLFxuICAgICAgZGF0YTogW1xuICAgICAgICBbMSw3XSxbMSw4XSxbMiw3XSxbMiw4XSxbOCw2XSxbOCw3XSxbOCw4XSxbOSw1XSxbOSw2XSxbOSw4XSxbOSw5XSxcbiAgICAgICAgWzEwLDVdLFsxMCw2XSxbMTAsOF0sWzEwLDldLFsxMSw1XSxbMTEsNl0sWzExLDddLFsxMSw4XSxbMTEsOV0sWzEyLDRdLFxuICAgICAgICBbMTIsNV0sWzEyLDldLFsxMiwxMF0sWzE1LDZdLFsxNSw3XSxbMTYsNV0sWzE2LDZdLFsxNiw3XSxbMTYsOF0sWzE2LDldLFxuICAgICAgICBbMTcsNV0sWzE4LDddLFsxOCw4XSxbMTgsOV0sWzE5LDldLFsyMCw3XSxbMjAsOF0sWzIxLDddLFsyMSw4XSxbMjQsMl0sXG4gICAgICAgIFsyNCwzXSxbMjQsN10sWzI0LDhdLFsyNSwyXSxbMjUsNF0sWzI1LDZdLFsyNSw4XSxbMjYsM10sWzI2LDRdLFsyNiw1XSxcbiAgICAgICAgWzI2LDZdLFsyNiw3XSxbMjcsNF0sWzI3LDVdLFsyNyw2XSxbMjgsNV0sWzM1LDVdLFszNSw2XSxbMzYsNV0sWzM2LDZdXSxcbiAgICAgIG9uVGljazogdGhpcy5oYW5kbGVUaWNrXG4gICAgfSk7XG4gICAgdGhpcy53b3JsZC5zdGFydCgpO1xuICAgIHRoaXMucmVmcy5jb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy53b3JsZC5kb20pO1xuICB9XG5cbiAgaGFuZGxlU3RhcnQgPSAoKSA9PiB7XG4gICAgdGhpcy53b3JsZC5zdGFydCgpO1xuICB9O1xuXG4gIGhhbmRsZVN0b3AgPSAoKSA9PiB7XG4gICAgdGhpcy53b3JsZC5zdG9wKCk7XG4gIH07XG5cbiAgaGFuZGxlVGljayA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHRpbWVzOiB0aGlzLnN0YXRlLnRpbWVzICsgMVxuICAgIH0pXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgdGltZXMgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuaGFuZGxlU3RhcnR9PnN0YXJ0PC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmhhbmRsZVN0b3B9PnN0b3A8L2J1dHRvbj5cbiAgICAgICAgICA8c3Bhbj7ov63ku6PmrKHmlbA6IHt0aW1lc308L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IHJlZj1cImNvbnRhaW5lclwiPlxuXG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5pbXBvcnQgeyBEcmFnU291cmNlLCBEcm9wVGFyZ2V0IH0gZnJvbSAnbGliL2RuZCc7XG5cbmltcG9ydCBDb250ZXh0TWVudSBmcm9tICcuL2NvbnRleHQtbWVudSc7XG5pbXBvcnQgQnJpY2sgZnJvbSAnLi9icmljayc7XG5pbXBvcnQgTSwgeyBUWVBFX1ZJRVcsIFRJQ0tfQ09VTlQgfSBmcm9tICcuL21vZHVsZS9kZWZhdWx0JztcbmltcG9ydCBWaWV3IGZyb20gJy4vbW9kdWxlL3ZpZXcnO1xuXG5pbXBvcnQgcG9wb3ZlciBmcm9tICdjb21wb25lbnRzL3BvcG92ZXInO1xuaW1wb3J0IG1vZGFsIGZyb20gJ2NvbXBvbmVudHMvbW9kYWwnO1xuaW1wb3J0IEVkaXRvciBmcm9tICdhcHAvZWRpdG9yJztcblxuaW1wb3J0IGRlbW8gZnJvbSAnLi9kZW1vLmpzb24nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBKc1ZpZXcgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLm1vZHVsZXMgPSBbXTtcbiAgICB3aW5kb3dbVElDS19DT1VOVF0gPSAwO1xuXG4gICAgdGhpcy5sb2FkKGRlbW8pO1xuICB9XG5cbiAgbG9hZChtb2R1bGVzKSB7XG4gICAgdGhpcy5tb2R1bGVzID0gbW9kdWxlcy5tYXAoZCA9PiB7XG4gICAgICBjb25zdCBNbyA9IGQudHlwZSA9PT0gVFlQRV9WSUVXID8gVmlldyA6IE07XG4gICAgICBjb25zdCBtID0gbmV3IE1vKHtcbiAgICAgICAgaWQ6IGQuaWQsXG4gICAgICAgIHR5cGU6IGQudHlwZSxcbiAgICAgICAgeDogZC54LFxuICAgICAgICB5OiBkLnksXG4gICAgICAgIHdpZHRoOiBkLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IGQuaGVpZ2h0XG4gICAgICB9KTtcbiAgICAgIG0uc2V0RnVuYyhkLmZ1bmMpO1xuICAgICAgcmV0dXJuIHttLCBpbnB1dDogZC5pbnB1dH07XG4gICAgfSkubWFwKChkLCBpLCBkcykgPT4ge1xuICAgICAgZC5tLmFkZElucHV0KC4uLmQuaW5wdXQubWFwKGlkID0+IGRzLmZpbmQoZGQgPT4gZGQubS5pZCA9PT0gaWQpLm0pKTtcbiAgICAgIHJldHVybiBkLm07XG4gICAgfSk7XG4gICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICB9XG5cbiAgc2F2ZSA9ICgpID0+IHtcbiAgICBjb25zdCBtb2R1bGVzID0gdGhpcy5tb2R1bGVzLm1hcChkID0+ICh7XG4gICAgICBpZDogZC5pZCxcbiAgICAgIHR5cGU6IGQudHlwZSxcbiAgICAgIG5hbWU6IGQubmFtZSxcbiAgICAgIHg6IGQueCxcbiAgICAgIHk6IGQueSxcbiAgICAgIHdpZHRoOiBkLndpZHRoLFxuICAgICAgaGVpZ2h0OiBkLmhlaWdodCxcbiAgICAgIGlucHV0OiBkLmlucHV0Lm1hcChkZCA9PiBkZC5pZCksXG4gICAgICBmdW5jOiBkLmZ1bmMudG9TdHJpbmcoKVxuICAgIH0pKTtcbiAgICB0aGlzLmRvd25sb2FkKEpTT04uc3RyaW5naWZ5KG1vZHVsZXMsIHVuZGVmaW5lZCwgMiksICdkZW1vLmpzb24nKTtcbiAgfTtcblxuICBzYXZlTW9kZWwgPSAoKSA9PiB7XG5cbiAgfTtcblxuICBkb3dubG9hZChjb250ZW50LCBmaWxlbmFtZSkge1xuICAgIGNvbnN0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgYS5kb3dubG9hZCA9IGZpbGVuYW1lO1xuICAgIGEuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtjb250ZW50XSwge3R5cGU6ICd0ZXh0L3BsYWluJ30pO1xuICAgIGEuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTtcbiAgICBhLmNsaWNrKCk7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChhKTtcbiAgfTtcblxuICB0b2dnbGUgPSAoKSA9PiB7XG4gICAgaWYgKCF0aGlzLnJ1bm5pbmcpIHtcbiAgICAgIHRoaXMucnVubmluZyA9IHRydWU7XG4gICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICB0aGlzLnRpY2soKTtcbiAgICAgIH0sIDEwMDApO1xuICAgIH0gZWxzZSB7ICAgICAgICAgICAgICAgICAgLy/lgZzmraJcbiAgICAgIHRoaXMubW9kdWxlcy5tYXAoZCA9PiBkLnJlc2V0KCkpO1xuICAgICAgdGhpcy5ydW5uaW5nID0gbnVsbDtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7XG4gICAgICB0aGlzLmludGVydmFsID0gbnVsbDtcbiAgICAgIHdpbmRvd1tUSUNLX0NPVU5UXSA9IDA7XG4gICAgfVxuICAgIHRoaXMuZm9yY2VVcGRhdGUoKTtcbiAgfTtcblxuICB0aWNrKCkge1xuICAgIGNvbnN0IHZpZXdzID0gdGhpcy5tb2R1bGVzLmZpbHRlcihkID0+IGQudHlwZSA9PT0gVFlQRV9WSUVXKTtcbiAgICBpZiAoIXZpZXdzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvL3RvZG8g55uu5YmN5pqC5pe25pSv5oyB5Y2V6L6T5Ye6LOWQjuacn+a3u+WKoOWkmui+k+WHuuaUr+aMgVxuICAgIGNvbnN0IHZpZXcgPSB2aWV3c1swXTtcblxuICAgIC8v5YWo5bGA5omn6KGM5qyh5pWw6K6w5b2VLOavj+asoXRpY2voh6rliqAxXG4gICAgd2luZG93W1RJQ0tfQ09VTlRdICs9IDE7XG5cbiAgICB2aWV3Lm91dHB1dCgpO1xuICB9XG5cbiAgcGF0aERhdGEoYSwgYikge1xuICAgIGNvbnN0IFBBRERJTkcgPSAyMDtcbiAgICBsZXQgYXIgPSBhLnggKyBhLndpZHRoIC8gMiArIFBBRERJTkc7XG4gICAgY29uc3QgYWwgPSBhLnggLSBhLndpZHRoIC8gMiAtIFBBRERJTkc7XG4gICAgY29uc3QgYXQgPSBhLnkgLSBhLmhlaWdodCAvIDIgLSBQQURESU5HO1xuICAgIGNvbnN0IGFiID0gYS55ICsgYS5oZWlnaHQgLyAyICsgUEFERElORztcbiAgICBsZXQgYmwgPSBiLnggLSBiLndpZHRoIC8gMiAtIFBBRERJTkc7XG4gICAgY29uc3QgYnQgPSBiLnkgLSBiLmhlaWdodCAvIDIgLSBQQURESU5HO1xuICAgIGNvbnN0IGJiID0gYi55ICsgYi5oZWlnaHQgLyAyICsgUEFERElORztcbiAgICBsZXQgZCA9IGBNJHthLnh9ICR7YS55fSBgO1xuICAgIGlmIChhLnggKyBhLndpZHRoIC8gMiA8IGIueCAtIGIud2lkdGggLyAyKSB7XG4gICAgICBibCA9IGFyID0gKGFyICsgYmwpIC8gMjtcbiAgICAgIGQgKz0gYEwke2FyfSAke2EueX0gTCR7YXJ9ICR7Yi55fSBMJHtibH0gJHtiLnl9IGA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGQgKz0gYEwke2FyfSAke2EueX0gYDtcbiAgICAgIGlmIChhYiA8IGJ0KSB7XG4gICAgICAgIGQgKz0gYEwke2FyfSAke2J0fSBMJHtibH0gJHtidH0gTCR7Ymx9ICR7Yi55fSBgO1xuICAgICAgfSBlbHNlIGlmIChhdCA+IGJiKSB7XG4gICAgICAgIGQgKz0gYEwke2FyfSAke2JifSBMJHtibH0gJHtiYn0gTCR7Ymx9ICR7Yi55fSBgO1xuICAgICAgfSBlbHNlIGlmIChhLnkgPiBiLnkpIHtcbiAgICAgICAgZCArPSBgTCR7YXJ9ICR7TWF0aC5tYXgoYmIsIGFiKX0gTCR7TWF0aC5taW4oYmwsIGFsKX0gJHtNYXRoLm1heChiYiwgYWIpfSBMJHtNYXRoLm1pbihibCwgYWwpfSAke2IueX0gYDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGQgKz0gYEwke2FyfSAke01hdGgubWluKGJ0LCBhdCl9IEwke01hdGgubWluKGJsLCBhbCl9ICR7TWF0aC5taW4oYnQsIGF0KX0gTCR7TWF0aC5taW4oYmwsIGFsKX0gJHtiLnl9IGA7XG4gICAgICB9XG4gICAgfVxuICAgIGQgKz0gYEwke2IueH0gJHtiLnl9YDtcbiAgICByZXR1cm4gZDtcbiAgfVxuXG4gIGhhbmRsZURyb3AgPSAoZGF0YSwgZSkgPT4ge1xuICAgIGNvbnN0IGJvdW5kaW5nUmVjdCA9IGUudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IHggPSBlLnBhZ2VYIC0gYm91bmRpbmdSZWN0Lng7XG4gICAgY29uc3QgeSA9IGUucGFnZVkgLSBib3VuZGluZ1JlY3QueTtcbiAgICBpZiAoZGF0YS50eXBlID09PSBUWVBFX1ZJRVcpIHtcbiAgICAgIHRoaXMubW9kdWxlcy5wdXNoKG5ldyBWaWV3KHt4LCB5fSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm1vZHVsZXMucHVzaChuZXcgTSh7eCwgeX0pKTtcbiAgICB9XG4gICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICB9O1xuXG4gIC8vdG9kbyDkvJjljJbov5nkuKrmlrnms5VcbiAgaGFuZGxlTGluayA9IChkKSA9PiB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRJbnB1dCkge1xuICAgICAgaWYgKGQudHlwZSAhPT0gVFlQRV9WSUVXKSB7ICAgLy92aWV357G75Z6L55qE5qih5Z2X5LiN5pSv5oyB6L6T5Ye6XG4gICAgICAgIHRoaXMuY3VycmVudElucHV0ID0gZDtcbiAgICAgICAgdGhpcy50bXBQYXRoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdwYXRoJyk7XG4gICAgICAgIHRoaXMudG1wUGF0aC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2xpbmstcGF0aCcpO1xuICAgICAgICB0aGlzLnJlZnMubGluZXMuYXBwZW5kQ2hpbGQodGhpcy50bXBQYXRoKTtcbiAgICAgICAgdGhpcy5saW5rQW5pbWF0ZSA9IChlKSA9PiB7XG4gICAgICAgICAgY29uc3QgYm91bmRpbmdSZWN0ID0gdGhpcy5yZWZzLmNvbnRlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgdGhpcy50bXBQYXRoLnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMucGF0aERhdGEoZCwge1xuICAgICAgICAgICAgeDogZS5wYWdlWCAtIGJvdW5kaW5nUmVjdC54LFxuICAgICAgICAgICAgeTogZS5wYWdlWSAtIGJvdW5kaW5nUmVjdC55LFxuICAgICAgICAgICAgd2lkdGg6IDAsXG4gICAgICAgICAgICBoZWlnaHQ6IDBcbiAgICAgICAgICB9KSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaGFuZGxlS2V5UHJlc3MgPSAoZSkgPT4ge1xuICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIHRoaXMuY2xlYXJUbXBMaW5rKCk7XG4gICAgICAgIH07XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLmxpbmtBbmltYXRlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgdGhpcy5oYW5kbGVLZXlQcmVzcylcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZC5hZGRJbnB1dCh0aGlzLmN1cnJlbnRJbnB1dCk7XG4gICAgICB0aGlzLmNsZWFyVG1wTGluaygpO1xuICAgIH1cbiAgfTtcblxuICBjbGVhclRtcExpbmsgPSAoKSA9PiB7XG4gICAgdGhpcy5jdXJyZW50SW5wdXQgPSBudWxsO1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLmxpbmtBbmltYXRlKTtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignY29udGV4dG1lbnUnLCB0aGlzLmhhbmRsZUtleVByZXNzKTtcbiAgICB0aGlzLmxpbmtBbmltYXRlID0gbnVsbDtcbiAgICB0aGlzLmhhbmRsZUtleVByZXNzID0gbnVsbDtcblxuICAgIHRoaXMucmVmcy5saW5lcy5yZW1vdmVDaGlsZCh0aGlzLnRtcFBhdGgpO1xuICAgIHRoaXMudG1wUGF0aCA9IG51bGw7XG5cbiAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XG4gIH07XG5cbiAgaGFuZGxlRHJhZyA9IChkLCBkeCwgZHkpID0+IHtcbiAgICBkLnggKz0gZHg7XG4gICAgZC55ICs9IGR5O1xuICAgIHRoaXMuZm9yY2VVcGRhdGUoKTtcbiAgfTtcblxuICBoYW5kbGVab29tKGQpIHtcbiAgICBjb25zb2xlLmxvZygnPT09JywgZClcbiAgfVxuXG4gIGhhbmRsZUNvbnRleHRNZW51ID0gKGUsIGQpID0+IHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNvbnN0IGhhbmRsZVJlbW92ZSA9ICgpID0+IHtcbiAgICAgIHRoaXMubW9kdWxlcyA9IHRoaXMubW9kdWxlcy5maWx0ZXIobSA9PiB7XG4gICAgICAgIGlmIChtICE9PSBkKSB7XG4gICAgICAgICAgbS5pbnB1dCA9IG0uaW5wdXQuZmlsdGVyKGkgPT4gaSAhPT0gZCk7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICAgIH07XG5cbiAgICBwb3BvdmVyKHtcbiAgICAgIHg6IGUucGFnZVgsXG4gICAgICB5OiBlLnBhZ2VZLFxuICAgICAgY29udGVudDogKFxuICAgICAgICA8Q29udGV4dE1lbnVcbiAgICAgICAgICBkYXRhPXtbXG4gICAgICAgICAgICB7bmFtZTogJ+e8lui+kScsIG9uQ2xpY2s6ICgpID0+IHRoaXMuaGFuZGxlRWRpdChkKX0sXG4gICAgICAgICAgICB7bmFtZTogJ+WIoOmZpCcsIG9uQ2xpY2s6IGhhbmRsZVJlbW92ZX1cbiAgICAgICAgICBdfVxuICAgICAgICAvPlxuICAgICAgKVxuICAgIH0pO1xuICB9O1xuXG4gIGhhbmRsZUxpbmtDb250ZXh0ID0gKGUsIGQsIGRkKSA9PiB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjb25zdCBoYW5kbGVSZW1vdmUgPSAoKSA9PiB7XG4gICAgICB0aGlzLm1vZHVsZXMubWFwKG0gPT4ge1xuICAgICAgICBpZiAobSA9PT0gZCkge1xuICAgICAgICAgIG0uaW5wdXQgPSBtLmlucHV0LmZpbHRlcihpID0+IGkgIT09IGRkKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XG4gICAgfTtcblxuICAgIHBvcG92ZXIoe1xuICAgICAgeDogZS5wYWdlWCxcbiAgICAgIHk6IGUucGFnZVksXG4gICAgICBjb250ZW50OiAoXG4gICAgICAgIDxDb250ZXh0TWVudVxuICAgICAgICAgIGRhdGE9e1tcbiAgICAgICAgICAgIHtuYW1lOiAn5Yig6ZmkJywgb25DbGljazogaGFuZGxlUmVtb3ZlfVxuICAgICAgICAgIF19XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfSk7XG4gIH07XG5cbiAgaGFuZGxlQ29uZmlybSA9IChtb2R1bGUsIGZ1bmMpID0+IHtcbiAgICBtb2R1bGUuc2V0RnVuYyhmdW5jKTtcbiAgICB0aGlzLm1vZGFsLmRlc3Ryb3koKTtcbiAgICB0aGlzLm1vZGFsID0gbnVsbDtcbiAgfTtcblxuICBoYW5kbGVFZGl0ID0gKG1vZHVsZSkgPT4ge1xuICAgIHRoaXMubW9kYWwgPSBtb2RhbCh7XG4gICAgICBjb250ZW50OiAoXG4gICAgICAgIDxkaXYgc3R5bGU9e3t3aWR0aDogJzgwJScsIGhlaWdodDogJzgwJScsIG1hcmdpbjogJzEwJSd9fT5cbiAgICAgICAgICA8RWRpdG9yIG9uQ29uZmlybT17KHR4dCkgPT4gdGhpcy5oYW5kbGVDb25maXJtKG1vZHVsZSwgdHh0KX0+XG4gICAgICAgICAgICB7bW9kdWxlLmZ1bmMgJiYgbW9kdWxlLmZ1bmMudG9TdHJpbmcoKX1cbiAgICAgICAgICA8L0VkaXRvcj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApXG4gICAgfSlcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBtb2R1bGVzIH0gPSB0aGlzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwianMtdmlld1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRvb2xiYXJcIj5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHRoaXMubG9hZChbXSl9PumHjee9rjwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy50b2dnbGV9IGNsYXNzTmFtZT1cImJ0bi1zdGFydFwiPnt0aGlzLnJ1bm5pbmcgPyAn5YGc5q2iJyA6ICflvIDlp4snfTwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gdGhpcy5sb2FkKGRlbW8pfT7liqDovb08L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuc2F2ZX0+5L+d5a2YPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnNhdmVNb2RlbH0+5L+d5a2Y5Li657uE5Lu2PC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNpZGViYXJcIj5cbiAgICAgICAgICB7TS5UWVBFUy5tYXAoZCA9PiBEcmFnU291cmNlKGQua2V5LCBkKShcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kdWxlXCI+XG4gICAgICAgICAgICAgIHtkLm5hbWV9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudFwiIHJlZj1cImNvbnRlbnRcIj5cbiAgICAgICAgICB7RHJvcFRhcmdldChNLlRZUEVTLm1hcChkID0+IGQua2V5KSwge1xuICAgICAgICAgICAgb25Ecm9wOiB0aGlzLmhhbmRsZURyb3BcbiAgICAgICAgICB9KShcbiAgICAgICAgICAgIDxzdmc+XG4gICAgICAgICAgICAgIDxnIGNsYXNzTmFtZT1cImxpbmVzXCIgcmVmPVwibGluZXNcIj5cbiAgICAgICAgICAgICAgICB7bW9kdWxlcy5tYXAoZCA9PiAoXG4gICAgICAgICAgICAgICAgICA8ZyBrZXk9e2QuaWR9PlxuICAgICAgICAgICAgICAgICAgICB7ZC5pbnB1dC5tYXAoKGRkLCBqKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgPGcga2V5PXtqfSBjbGFzc05hbWU9XCJsaW5rLXBhdGhcIiBvbkNvbnRleHRNZW51PXsoZSkgPT4gdGhpcy5oYW5kbGVMaW5rQ29udGV4dChlLCBkLCBkZCl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggY2xhc3NOYW1lPVwicGF0aC1oaWRkZW5cIiBkPXt0aGlzLnBhdGhEYXRhKGRkLCBkKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGNsYXNzTmFtZT1cInBhdGgtZGlzcGxheVwiIGQ9e3RoaXMucGF0aERhdGEoZGQsIGQpfSAvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICA8L2c+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgPGcgY2xhc3NOYW1lPVwibW9kdWxlc1wiPlxuICAgICAgICAgICAgICAgIHttb2R1bGVzLm1hcCgoZCwgaSkgPT4gKFxuICAgICAgICAgICAgICAgICAgPEJyaWNrXG4gICAgICAgICAgICAgICAgICAgIGtleT17ZC5pZH1cbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlPXtkfVxuICAgICAgICAgICAgICAgICAgICBvbkxpbms9e3RoaXMuaGFuZGxlTGlua31cbiAgICAgICAgICAgICAgICAgICAgb25ab29tPXt0aGlzLmhhbmRsZVpvb219XG4gICAgICAgICAgICAgICAgICAgIG9uRHJhZz17dGhpcy5oYW5kbGVEcmFnfVxuICAgICAgICAgICAgICAgICAgICBvbkVkaXQ9eygpID0+IHRoaXMuaGFuZGxlRWRpdChkKX1cbiAgICAgICAgICAgICAgICAgICAgb25Db250ZXh0TWVudT17KGUpID0+IHRoaXMuaGFuZGxlQ29udGV4dE1lbnUoZSwgZCl9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L2c+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufSIsImltcG9ydCB7IHV1aWQgfSBmcm9tICdsaWIvY29tbW9uJztcblxuZXhwb3J0IGNvbnN0IFRZUEVfRlVOQ1RJT04gPSAnRlVOQ1RJT04nO1xuZXhwb3J0IGNvbnN0IFRZUEVfVklFVyA9ICdWSUVXJztcblxuZXhwb3J0IGNvbnN0IFRJQ0tfQ09VTlQgPSBTeW1ib2woMSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE0ge1xuICBzdGF0aWMgVFlQRVMgPSBbXG4gICAge2tleTogVFlQRV9GVU5DVElPTiwgbmFtZTogJ8aSKHgpJ30sXG4gICAge2tleTogVFlQRV9WSUVXLCBuYW1lOiAnVih4KSd9XG4gIF07XG5cbiAgY29uc3RydWN0b3IoeyBpZCwgaW5wdXQgPSBbXSwgZnVuYywgeCwgeSwgd2lkdGggPSA1MCwgaGVpZ2h0ID0gNTAsIHR5cGUgPSBUWVBFX0ZVTkNUSU9OIH0pIHtcbiAgICB0aGlzLmlkID0gaWQgfHwgdXVpZCgpO1xuICAgIHRoaXMuaW5wdXQgPSBpbnB1dDtcbiAgICB0aGlzLnggPSB4O1xuICAgIHRoaXMueSA9IHk7XG4gICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgIHRoaXMuZnVuYyA9IGZ1bmMgfHwgZnVuY3Rpb24oKSB7fTtcbiAgICB0aGlzLm5hbWUgPSBNLlRZUEVTLmZpbmQoZCA9PiBkLmtleSA9PT0gdHlwZSkubmFtZTtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMudGlja0NvdW50ID0gMDtcbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIHRoaXMudGlja0NvdW50ID0gMDtcbiAgICB0aGlzLmxhc3REYXRhID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgYWRkSW5wdXQoLi4uaW5wdXQpIHtcbiAgICB0aGlzLmlucHV0ID0gdGhpcy5pbnB1dC5jb25jYXQoaW5wdXQpO1xuICB9XG5cbiAgcm1JbnB1dCguLi5pbnB1dCkge1xuICAgIHRoaXMuaW5wdXQgPSB0aGlzLmlucHV0LmZpbHRlcihkID0+IGlucHV0LmluZGV4T2YoZCkgPT09IC0xKTtcbiAgfVxuXG4gIGNsZWFySW5wdXQoKSB7XG4gICAgdGhpcy5pbnB1dCA9IFtdO1xuICB9XG5cbiAgc2V0RG9tKGRvbSwgY2IpIHtcbiAgICAvL3RvZG8g5q+P5qyh6YeN5paw5riy5p+TcmVm6YO95Lya5a+86Ie0c2V0RG9t6YeN5paw5omn6KGMLOS5i+WJjea4suafk+eahOWFg+e0oOaLluWKqOWbnuiwg+S8muWPjeWkjeWPoOWKoCzlr7zoh7TlhYjmt7vliqDnmoTlhYPntKDmi5bliqjlh7rplJks5pqC5pe25L2/55So6L+Z56eN5pa55byP6Kej5YazXG4gICAgaWYgKGRvbSAmJiAhdGhpcy5kb20pIHtcbiAgICAgIHRoaXMuZG9tID0gZG9tO1xuICAgICAgY2IodGhpcy5kb20sIHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIHNldEZ1bmMoZnVuYykge1xuICAgIGlmICghZnVuYykge1xuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mKGZ1bmMpID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLmZ1bmMgPSBmdW5jO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mKGZ1bmMpID09PSAnc3RyaW5nJykge1xuICAgICAgZXZhbChgdGhpcy5mdW5jID0gJHtmdW5jfWApO1xuICAgIH1cbiAgfVxuXG4gIG91dHB1dCgpIHtcbiAgICAvL+WmguaenOW9k+WJjeaooeWdl+iuoeaVsOWkp+S6juWFqOWxgOiuoeaVsCzor7TmmI7mraTmqKHlnZflpITkuo7lvqrnjq/osIPnlKgs55u05o6l6L+U5Zue5LiK5qyh55qE5YC8LOmYsuatouatu+W+queOr1xuICAgIGlmICh0aGlzLnRpY2tDb3VudCA8IHdpbmRvd1tUSUNLX0NPVU5UXSkge1xuICAgICAgdGhpcy50aWNrQ291bnQgKz0gMTtcbiAgICAgIHRoaXMubGFzdERhdGEgPSB0aGlzLmZ1bmMoLi4udGhpcy5pbnB1dC5tYXAoZCA9PiBkLm91dHB1dCgpKSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmxhc3REYXRhO1xuICB9XG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFZGl0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuZWRpdG9yID0gYWNlLmVkaXQodGhpcy5yZWZzLmVkaXRvcik7XG4gICAgdGhpcy5lZGl0b3Iuc2V0VGhlbWUoXCJhY2UvdGhlbWUvbW9ub2thaVwiKTtcbiAgICB0aGlzLmVkaXRvci5zZXNzaW9uLnNldE1vZGUoXCJhY2UvbW9kZS9qYXZhc2NyaXB0XCIpO1xuICB9XG5cbiAgaGFuZGxlQ29uZmlybSA9ICgpID0+IHtcbiAgICB0aGlzLnByb3BzLm9uQ29uZmlybSAmJiB0aGlzLnByb3BzLm9uQ29uZmlybSh0aGlzLmVkaXRvci5nZXRWYWx1ZSgpKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZWRpdG9yXCIgb25DbGljaz17ZSA9PiB7ZS5zdG9wUHJvcGFnYXRpb24oKTsgZS5wcmV2ZW50RGVmYXVsdCgpO319PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5oYW5kbGVDb25maXJtfT7noa7lrpo8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgcmVmPVwiZWRpdG9yXCIgc3R5bGU9e3t3aWR0aDogJzEwMCUnLCBoZWlnaHQ6ICcxMDAlJ319PlxuICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufSIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5pbXBvcnQgRGVza3RvcCBmcm9tICcuL3ZpZXdzL2Rlc2t0b3AnO1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17e3dpZHRoOiAnMTAwJScsIGhlaWdodDogJzEwMCUnfX0+XG4gICAgICAgIDxEZXNrdG9wIC8+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuUmVhY3RET00ucmVuZGVyKDxBcHAgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKSk7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIqe2JveC1zaXppbmc6Ym9yZGVyLWJveDt1c2VyLXNlbGVjdDpub25lO291dGxpbmU6bm9uZSFpbXBvcnRhbnR9Ym9keSxodG1se21hcmdpbjowfSNhcHAsYm9keSxodG1se3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmltcG9ydCBDYXJvdXNlbCBmcm9tICdsaWIvY2Fyb3VzZWwnO1xuXG5pbXBvcnQgR2FtZU9mTGlmZSBmcm9tICdhcHAvZ2FtZS1vZi1saWZlJztcbmltcG9ydCBKc1ZpZXcgZnJvbSAnYXBwL2pzLXZpZXcnO1xuaW1wb3J0ICogYXMgYXBwIGZyb20gJ2FwcCc7XG5cbmltcG9ydCBEb2NrIGZyb20gJ2NvbXBvbmVudHMvZG9jayc7XG5pbXBvcnQgRnMgZnJvbSAnY29tcG9uZW50cy9mcyc7XG5pbXBvcnQgU3lzTWVudUJhciBmcm9tICdjb21wb25lbnRzL3N5cy1tZW51LWJhcic7XG5pbXBvcnQgbW9kYWwgZnJvbSAnY29tcG9uZW50cy9tb2RhbCc7XG5pbXBvcnQgTGF1bmNocGFkIGZyb20gJ2NvbXBvbmVudHMvbGF1bmNocGFkJztcblxuaW1wb3J0IGFwcHMgZnJvbSAnb3B0aW9uL2FwcHMuanNvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlc2t0b3AgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgZGVza3RvcHM6IFtcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZXNrdG9wXCI+XG4gICAgICAgICAgPFN5c01lbnVCYXIgLz5cblxuICAgICAgICAgIDxGcyBwYXRoPVwiL1VzZXJzL2xhbnl1ZWNoZW4vRGVza3RvcFwiIC8+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRvY2stY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8RG9jayBkYXRhPXthcHBzfSBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIF1cbiAgICB9O1xuICB9XG5cbiAgaGFuZGxlQ2xpY2sgPSAoZCkgPT4ge1xuICAgIGlmIChkLmtleSA9PT0gJ2xhdW5jaHBhZCcpIHtcbiAgICAgIG1vZGFsKHtcbiAgICAgICAgY29udGVudDogPExhdW5jaHBhZCBkYXRhPXthcHBzfSAvPlxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGFwcC5vcGVuKGQua2V5LCB7d2lkdGg6IDYwMCwgaGVpZ2h0OiA0MDB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBkZXNrdG9wcyB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8SnNWaWV3IC8+XG4gICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Q2Fyb3VzZWxcbiAgICAgICAgcmVmPVwiY2Fyb3VzZWxcIlxuICAgICAgICBpbnRlcnZhbD17MH1cbiAgICAgICAgY3VycmVudFBhZ2U9ezB9XG4gICAgICA+XG4gICAgICAgIHtkZXNrdG9wc31cbiAgICAgIDwvQ2Fyb3VzZWw+XG4gICAgKVxuICB9XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwidmFyIGVzY2FwZSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvdXJsL2VzY2FwZS5qc1wiKTtcbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmRlc2t0b3B7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtiYWNrZ3JvdW5kOnVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi9pbWcvYmcuanBnXCIpKSArIFwiKSA1MCU7YmFja2dyb3VuZC1zaXplOmNvdmVyfS5kZXNrdG9wIC5kb2NrLWNvbnRhaW5lcntwb3NpdGlvbjphYnNvbHV0ZTtib3R0b206MDtsZWZ0OjA7d2lkdGg6MTAwJTtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVzY2FwZSh1cmwpIHtcbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHVybFxuICAgIH1cbiAgICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAgICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgICB9XG4gICAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAgIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gICAgaWYgKC9bXCInKCkgXFx0XFxuXS8udGVzdCh1cmwpKSB7XG4gICAgICAgIHJldHVybiAnXCInICsgdXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgJ1xcXFxuJykgKyAnXCInXG4gICAgfVxuXG4gICAgcmV0dXJuIHVybFxufVxuIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1hZ2VzL2JnLmpwZ1wiOyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuY29uc3QgVFJBTlNJVElPTl9EVVJBVElPTiA9ICcuNXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJvdXNlbCBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgd2lkdGg6ICcxMDAlJywgICAgICAgICAgLy/mjIflrprova7mkq3nu4Tku7blrr3luqYsIOm7mOiupOS4uuWuueWZqOeahDEwMCVcbiAgICBoZWlnaHQ6ICcxMDAlJywgICAgICAgICAvL+aMh+Wumui9ruaSree7hOS7tumrmOW6piwg6buY6K6k5Li65a655Zmo55qEMTAwJVxuICAgIGludGVydmFsOiA1MDAwLCAgICAgICAgIC8v6L2u5pKt6Ze06ZqU5pe26Ze0LCDpu5jorqTkuLo156eSLCDlsIZpbnRlcnZhbOiuvue9ruS4ujDooajnpLrkuI3ova7mkq1cbiAgICBtdWx0aTogMSwgICAgICAgICAgICAgICAvL+WNlemhteaYvuekuuWGheWuueaVsOmHjywg6buY6K6k5Li6MeadoVxuICAgIHN0ZXA6IDEsICAgICAgICAgICAgICAgIC8v6L2u5pKt5q2l5bmFLCDpu5jorqTkuLoxIChzdGVwIOKJpCBtdWx0aSwg5ZCm5YiZ5Y+v6IO95Y+R55Sf5LiN5Y+v5o+P6L+w55qEYnVnKVxuICAgIGhvcml6b246IHRydWUsICAgICAgICAgIC8v5piv5ZCm5Li65rC05bmz6L2u5pKtLCDpu5jorqTkuLrmsLTlubMsIGhvcml6b24gPSBmYWxzZSDooajnpLrlnoLnm7Tova7mkq1cbiAgICBuZXh0OiBmYWxzZSwgICAgICAgICAgICAvL+aYr+WQpuaYvuekuuS4i+S4gOmhteaMiemSriwgZmFsc2XkuI3mmL7npLosIHRydWXmmL7npLpcbiAgICBwcmV2OiBmYWxzZSwgICAgICAgICAgICAvL+aYr+WQpuaYvuekuuS4iuS4gOmhteaMiemSriwgZmFsc2XkuI3mmL7npLosIHRydWXmmL7npLpcbiAgICBwYWdpbmF0aW9uOiBmYWxzZSwgICAgICAvL+aYr+WQpuaYvuekuuWIhumhtSwgZmFsc2XkuI3mmL7npLosIHRydWXmmL7npLpcbiAgICBsb29wOiBmYWxzZSwgICAgICAgICAgICAvL+aXoOmZkOi9ruaSrVxuICAgIGN1cnJlbnRQYWdlOiAwICAgICAgICAgIC8v5b2T5YmN6aG1XG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGl0ZW1XaWR0aDogMCxcbiAgICAgIGl0ZW1IZWlnaHQ6IDAsXG4gICAgICBpZHg6IHByb3BzLmN1cnJlbnRQYWdlLFxuICAgICAgY291bnQ6IFJlYWN0LkNoaWxkcmVuLmNvdW50KHByb3BzLmNoaWxkcmVuKSxcbiAgICAgIHRyYW5zaXRpb246IHRydWVcbiAgICB9O1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5oYW5kbGVLZXkpO1xuICB9XG5cbiAgaGFuZGxlS2V5ID0gKGUpID0+IHtcbiAgICBpZiAoZS5hbHRLZXkpIHtcbiAgICAgIGlmIChlLmtleUNvZGUgPT09IDM5KSB7XG4gICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgfVxuICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMzcpIHtcbiAgICAgICAgdGhpcy5wcmV2KCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIG5leHQgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBzdGVwLCBsb29wLCBpbnRlcnZhbCB9ID0gdGhpcy5wcm9wcztcbiAgICBsZXQgeyBpZHgsIGNvdW50IH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgaWR4ICs9IHN0ZXA7XG4gICAgaWYgKCFsb29wICYmIGlkeCA+PSBjb3VudCkge1xuICAgICAgaWR4ID0gMDtcbiAgICB9XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHRyYW5zaXRpb246IHRydWUsXG4gICAgICBpZHg6IGlkeFxuICAgIH0pO1xuICAgIHRoaXMuc2V0QXV0byh0aGlzLnByb3BzKTtcblxuICAgIGlmIChsb29wICYmIGlkeCA+PSBjb3VudCkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgIH0sIGludGVydmFsICsgMSk7ICAgLy/lpKfkuo5pbnRlcnZhbOeahOafkOS4quaXtumXtO+8jOS4uuS6huS4jeiuqeeUqOaIt+WPkeinieS7jmRvbeS9jee9ruWBmuS6huWIh+aNolxuICAgIH1cbiAgfTtcblxuICBwcmV2ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgc3RlcCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGlkeCwgY291bnQgfSA9IHRoaXMuc3RhdGU7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB0cmFuc2l0aW9uOiB0cnVlLFxuICAgICAgaWR4OiBpZHggLSBzdGVwIDwgMCA/IGNvdW50IC0gKGNvdW50ICUgc3RlcCA9PSAwID8gMSA6IGNvdW50ICUgc3RlcCkgOiBpZHggLSBzdGVwXG4gICAgfSk7XG4gICAgdGhpcy5zZXRBdXRvKHRoaXMucHJvcHMpO1xuICB9O1xuXG4gIHNldEF1dG8gPSAocHJvcHMpID0+IHtcbiAgICBjb25zdCB7IGludGVydmFsIH0gPSBwcm9wcztcbiAgICBpZiAoaW50ZXJ2YWwgPiAwKSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO1xuICAgICAgdGhpcy5pbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICB9LCBpbnRlcnZhbCA+IDIwID8gaW50ZXJ2YWwgOiAyMClcbiAgICB9IGVsc2Uge1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcbiAgICB9XG4gIH07XG5cbiAgcmVzZXQgPSAoaWR4ID0gMCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgaWR4OiBpZHgsXG4gICAgICB0cmFuc2l0aW9uOiBmYWxzZVxuICAgIH0pXG4gIH07XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgeyBtdWx0aSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGNsaWVudFdpZHRoLCBjbGllbnRIZWlnaHQgfSA9IHRoaXMucmVmcy53cmFwO1xuXG4gICAgdGhpcy5zZXRBdXRvKHRoaXMucHJvcHMpO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBpdGVtV2lkdGg6IGNsaWVudFdpZHRoIC8gbXVsdGksXG4gICAgICBpdGVtSGVpZ2h0OiBjbGllbnRIZWlnaHQgLyBtdWx0aSxcbiAgICB9KTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmhhbmRsZUtleSk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIGlmIChuZXh0UHJvcHMuaW50ZXJ2YWwgIT09IHRoaXMucHJvcHMuaW50ZXJ2YWwpIHtcbiAgICAgIHRoaXMuc2V0QXV0byhuZXh0UHJvcHMpO1xuICAgIH1cbiAgICBpZiAobmV4dFByb3BzLmNoaWxkcmVuICE9PSB0aGlzLnByb3BzLmNoaWxkcmVuKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtjb3VudDogUmVhY3QuQ2hpbGRyZW4uY291bnQobmV4dFByb3BzLmNoaWxkcmVuKX0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCB3aWR0aCwgaGVpZ2h0LCBob3Jpem9uLCBuZXh0LCBwcmV2LCBsb29wLCBtdWx0aSB9ID0gdGhpcy5wcm9wcztcbiAgICBsZXQgeyBpdGVtV2lkdGgsIGl0ZW1IZWlnaHQsIGlkeCwgY291bnQsIHRyYW5zaXRpb24gfSA9IHRoaXMuc3RhdGU7XG5cbiAgICBpdGVtSGVpZ2h0ID0gaG9yaXpvbiA/IDAgOiBpdGVtSGVpZ2h0O1xuICAgIGl0ZW1XaWR0aCA9IGhvcml6b24gPyBpdGVtV2lkdGggOiAwO1xuXG4gICAgbGV0IGl0ZW1zID0gUmVhY3QuQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlbik7XG4gICAgaWYgKGxvb3AgJiYgbXVsdGkgPD0gY291bnQpIHtcbiAgICAgIGNvdW50ICs9IG11bHRpICogMjtcbiAgICAgIGl0ZW1zID0gWy4uLml0ZW1zLnNsaWNlKC0zKSwgLi4uaXRlbXMsIC4uLml0ZW1zLnNsaWNlKDAsIDMpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJvdXNlbFwiIHN0eWxlPXt7d2lkdGgsIGhlaWdodH19PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndyYXBcIiByZWY9XCJ3cmFwXCI+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgcmVmPVwiY2Fyb3VzZWxcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiY29udGVudFwiXG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBkaXNwbGF5OiBob3Jpem9uID8gJ2ZsZXgnIDogJ2Jsb2NrJyxcbiAgICAgICAgICAgICAgd2lkdGg6IGhvcml6b24gPyBpdGVtV2lkdGggKiBjb3VudCA6ICcxMDAlJyxcbiAgICAgICAgICAgICAgaGVpZ2h0OiBob3Jpem9uID8gJzEwMCUnIDogaXRlbUhlaWdodCAqIGNvdW50LFxuICAgICAgICAgICAgICBsZWZ0OiBob3Jpem9uID8gLWlkeCAqIGl0ZW1XaWR0aCA6IDAsXG4gICAgICAgICAgICAgIHRvcDogaG9yaXpvbiA/IDAgOiAtaWR4ICogaXRlbUhlaWdodCxcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uID8gVFJBTlNJVElPTl9EVVJBVElPTiA6ICcwcycsXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogKGxvb3AgJiYgbXVsdGkgPD0gY291bnQpID8gYHRyYW5zbGF0ZSgkey1tdWx0aSAqIGl0ZW1XaWR0aH1weCwgJHstbXVsdGkgKiBpdGVtSGVpZ2h0fXB4KWAgOiAnJ1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7aXRlbXMubWFwKChjaGlsZCwgaSkgPT4gKFxuICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAga2V5PXtpfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIml0ZW1cIlxuICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICB3aWR0aDogaG9yaXpvbiA/IGl0ZW1XaWR0aCA6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICAgIGhlaWdodDogaG9yaXpvbiA/ICcxMDAlJyA6IGl0ZW1IZWlnaHRcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2NoaWxkfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge3ByZXYgJiYgPGEgY2xhc3NOYW1lPVwicHJldlwiIG9uQ2xpY2s9e3RoaXMucHJldn0+Jmx0OzwvYT59XG4gICAgICAgIHtuZXh0ICYmIDxhIGNsYXNzTmFtZT1cIm5leHRcIiBvbkNsaWNrPXt0aGlzLm5leHR9PiZndDs8L2E+fVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY2Fyb3VzZWwgLndyYXB7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvdmVyZmxvdzpoaWRkZW59LmNhcm91c2VsIC53cmFwIC5jb250ZW50e3Bvc2l0aW9uOmFic29sdXRlO3RyYW5zaXRpb246bGVmdCx0b3Asd2lkdGggLjVzIGVhc2UtaW4gMHM7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0uY2Fyb3VzZWwgLndyYXAgLmNvbnRlbnQgLml0ZW17d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0uY2Fyb3VzZWwgLm5leHQsLmNhcm91c2VsIC5wcmV2e2N1cnNvcjpwb2ludGVyfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImltcG9ydCB6cmVuZGVyIGZyb20gJ3pyZW5kZXInO1xuaW1wb3J0IEdvZCBmcm9tICcuL2dvZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdvcmxkIHtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHRoaXMud2lkdGggPSBwcm9wcy53aWR0aDtcbiAgICB0aGlzLmhlaWdodCA9IHByb3BzLmhlaWdodDtcbiAgICB0aGlzLmdyaWQgPSBwcm9wcy5ncmlkIHx8IDEwO1xuICAgIHRoaXMuc3BlZWQgPSBwcm9wcy5zcGVlZCB8fCAxOyAgICAgIC8v5q+P56eS6L+t5Luj55qE5qyh5pWwLOWFtuWunuWwseaYr+mikeeOh1xuICAgIHRoaXMub25UaWNrID0gcHJvcHMub25UaWNrO1xuXG4gICAgdGhpcy50cmFuc2Zvcm0gPSB7eDogMCwgeTogMCwgazogMX07XG5cbiAgICB0aGlzLmdvZCA9IG5ldyBHb2QoKTtcblxuICAgIHRoaXMuZ29kLmFkZExpdmVzKHByb3BzLmRhdGEpO1xuXG4gICAgdGhpcy5pbml0KCk7XG5cbiAgICB0aGlzLnRpY2soKTtcbiAgfVxuXG4gIHN0YXJ0KCkge1xuICAgIHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICB0aGlzLnRpY2soKTtcbiAgICB9LCAxMDAwIC8gdGhpcy5zcGVlZCk7XG4gIH1cblxuICBzdG9wKCkge1xuICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7XG4gICAgdGhpcy5pbnRlcnZhbCA9IG51bGw7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuZG9tID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGhpcy5kb20uc3R5bGUuY3NzVGV4dCA9IGBcbiAgICAgIHdpZHRoOiAke3RoaXMud2lkdGh9cHg7XG4gICAgICBoZWlnaHQ6ICR7dGhpcy5oZWlnaHR9cHg7XG4gICAgYDtcbiAgICB0aGlzLnpyID0genJlbmRlci5pbml0KHRoaXMuZG9tKTtcbiAgICB0aGlzLmNvbnRhaW5lciA9IG5ldyB6cmVuZGVyLkdyb3VwKCk7XG4gICAgdGhpcy5iZyA9IG5ldyB6cmVuZGVyLkdyb3VwKCk7XG4gICAgdGhpcy5jZWxscyA9IG5ldyB6cmVuZGVyLkdyb3VwKCk7XG4gICAgdGhpcy5jb250YWluZXIuYWRkKHRoaXMuYmcpO1xuICAgIHRoaXMuY29udGFpbmVyLmFkZCh0aGlzLmNlbGxzKTtcbiAgICB0aGlzLnpyLmFkZCh0aGlzLmNvbnRhaW5lcik7XG5cbiAgICB0aGlzLmRyYXdCZygpO1xuXG4gICAgZDMuc2VsZWN0KHRoaXMuZG9tKS5jYWxsKGQzLnpvb20oKVxuICAgICAgLnNjYWxlRXh0ZW50KFswLjEsIDEwXSlcbiAgICAgIC5vbihcInpvb21cIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLnpvb21lZCgpO1xuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgem9vbWVkKCkge1xuICAgIHRoaXMudHJhbnNmb3JtID0gZDMuZXZlbnQudHJhbnNmb3JtO1xuICAgIHRoaXMuY29udGFpbmVyLnBvc2l0aW9uID0gW3RoaXMudHJhbnNmb3JtLngsIHRoaXMudHJhbnNmb3JtLnldO1xuICAgIHRoaXMuY29udGFpbmVyLnNjYWxlID0gW3RoaXMudHJhbnNmb3JtLmssIHRoaXMudHJhbnNmb3JtLmtdO1xuICAgIHRoaXMuY29udGFpbmVyLmRpcnR5KCk7XG4gICAgdGhpcy5kcmF3QmcoKTtcbiAgfVxuXG4gIGRyYXdCZygpIHtcbiAgICB0aGlzLmJnLnJlbW92ZUFsbCgpO1xuICAgIGNvbnN0IGdyaWQgPSB0aGlzLmdyaWQgKiB0aGlzLnRyYW5zZm9ybS5rO1xuICAgIGNvbnN0IHN0ZXAgPSBNYXRoLmZsb29yKDggLyBncmlkKSArIDE7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLndpZHRoIC8gZ3JpZDsgaSArPSBzdGVwKSB7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuaGVpZ2h0IC8gZ3JpZDsgaiArPSBzdGVwKSB7XG4gICAgICAgIGNvbnN0IG9mZnNldFggPSBNYXRoLmZsb29yKHRoaXMudHJhbnNmb3JtLnggLyBncmlkKTtcbiAgICAgICAgdGhpcy5iZy5hZGQobmV3IHpyZW5kZXIuTGluZSh7XG4gICAgICAgICAgc2hhcGU6IHtcbiAgICAgICAgICAgIHgxOiAoaSAtIG9mZnNldFgpICogdGhpcy5ncmlkLFxuICAgICAgICAgICAgeTE6IC10aGlzLnRyYW5zZm9ybS55IC8gdGhpcy50cmFuc2Zvcm0uayxcbiAgICAgICAgICAgIHgyOiAoaSAtIG9mZnNldFgpICogdGhpcy5ncmlkLFxuICAgICAgICAgICAgeTI6ICh0aGlzLmhlaWdodCAtIHRoaXMudHJhbnNmb3JtLnkpIC8gdGhpcy50cmFuc2Zvcm0ua1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgIHN0cm9rZTogJyNjY2MnXG4gICAgICAgICAgfVxuICAgICAgICB9KSk7XG4gICAgICAgIGNvbnN0IG9mZnNldFkgPSBNYXRoLmZsb29yKHRoaXMudHJhbnNmb3JtLnkgLyBncmlkKTtcbiAgICAgICAgdGhpcy5iZy5hZGQobmV3IHpyZW5kZXIuTGluZSh7XG4gICAgICAgICAgc2hhcGU6IHtcbiAgICAgICAgICAgIHgxOiAtdGhpcy50cmFuc2Zvcm0ueCAvIHRoaXMudHJhbnNmb3JtLmssXG4gICAgICAgICAgICB5MTogKGogLSBvZmZzZXRZKSAqIHRoaXMuZ3JpZCxcbiAgICAgICAgICAgIHgyOiAodGhpcy53aWR0aCAtIHRoaXMudHJhbnNmb3JtLngpIC8gdGhpcy50cmFuc2Zvcm0uayxcbiAgICAgICAgICAgIHkyOiAoaiAtIG9mZnNldFkpICogdGhpcy5ncmlkXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgc3Ryb2tlOiAnI2NjYydcbiAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB0aWNrKCkge1xuICAgIHRoaXMub25UaWNrICYmIHRoaXMub25UaWNrKCk7XG4gICAgdGhpcy5nb2QudGljaygpO1xuICAgIHRoaXMuZHJhd0NlbGxzKCk7XG4gIH1cblxuICBkcmF3Q2VsbHMoKSB7XG4gICAgdGhpcy5jZWxscy5yZW1vdmVBbGwoKTtcbiAgICB0aGlzLmdvZC5jZWxscy5tYXAoZCA9PiB7XG4gICAgICB0aGlzLmRyYXdDZWxsKGQpO1xuICAgIH0pO1xuICB9XG5cbiAgZHJhd0NlbGwoY2VsbCkge1xuICAgIGNvbnN0IGdyaWQgPSB0aGlzLmdyaWQgKiB0aGlzLnRyYW5zZm9ybS5rO1xuICAgIGlmIChcbiAgICAgIGNlbGwueCAqIGdyaWQgKyB0aGlzLnRyYW5zZm9ybS54ID4gdGhpcy53aWR0aCB8fFxuICAgICAgY2VsbC54ICogZ3JpZCArIHRoaXMudHJhbnNmb3JtLnggPCAwIHx8XG4gICAgICBjZWxsLnkgKiBncmlkICsgdGhpcy50cmFuc2Zvcm0ueSA+IHRoaXMuaGVpZ2h0IHx8XG4gICAgICBjZWxsLnkgKiBncmlkICsgdGhpcy50cmFuc2Zvcm0ueSA8IDBcbiAgICApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5jZWxscy5hZGQobmV3IHpyZW5kZXIuUmVjdCh7XG4gICAgICBzaGFwZToge1xuICAgICAgICB4OiBjZWxsLnggKiB0aGlzLmdyaWQsXG4gICAgICAgIHk6IGNlbGwueSAqIHRoaXMuZ3JpZCxcbiAgICAgICAgd2lkdGg6IHRoaXMuZ3JpZCxcbiAgICAgICAgaGVpZ2h0OiB0aGlzLmdyaWRcbiAgICAgIH0sXG4gICAgICBzdHlsZToge1xuICAgICAgICBmaWxsOiAnIzAwMCdcbiAgICAgIH1cbiAgICB9KSk7XG4gIH1cbn0iLCJtb2R1bGUuZXhwb3J0cyA9IHpyZW5kZXI7IiwiaW1wb3J0IENlbGwgZnJvbSAnLi9jZWxsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR29kIHtcbiAgc3RhdGljIExJVkUgPSAxO1xuICBzdGF0aWMgRElFID0gLTE7XG4gIHN0YXRpYyBLRUVQID0gMDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmNlbGxzID0gW107XG4gIH1cblxuICB0aWNrKCkge1xuICAgIC8v5om+5Ye66ZyA6KaB5Yik5pat55qE5Yy65Z+fXG4gICAgY29uc3QgZGlzdHJpY3QgPSB7fTtcbiAgICB0aGlzLmNlbGxzLmZpbHRlcihkID0+IGQuc3RhZ2UgPT09IENlbGwuQUxJVkUpLm1hcChkID0+IHtcbiAgICAgIGZvciAobGV0IGkgPSAtMTsgaSA8PSAxOyBpKyspIHtcbiAgICAgICAgZm9yIChsZXQgaiA9IC0xOyBqIDw9IDE7IGorKykge1xuICAgICAgICAgIGNvbnN0IGtleSA9IGAke2QueCArIGl9LCR7ZC55ICsgan1gO1xuICAgICAgICAgIGlmICghZGlzdHJpY3Rba2V5XSkge1xuICAgICAgICAgICAgZGlzdHJpY3Rba2V5XSA9IChpID09PSAwICYmIGogPT09IDApID8gZCA6IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvL+eUn+WRveaIkOmVv+S6huS4gOWkqSzkuqfnlJ/kuobkupvorrjlpYflppnnmoTlj5jljJYuLi5cbiAgICBPYmplY3Qua2V5cyhkaXN0cmljdCkubWFwKGsgPT4ge1xuICAgICAgY29uc3QgW3gsIHldID0gay5zcGxpdCgnLCcpLm1hcChuID0+IHBhcnNlSW50KG4pKTtcbiAgICAgIGNvbnN0IHd0ZiA9IHRoaXMudG9CZU9yTm90VG9CZSh4LCB5KTtcbiAgICAgIGlmICghZGlzdHJpY3Rba10gJiYgd3RmID09PSBHb2QuTElWRSkge1xuICAgICAgICB0aGlzLmNlbGxzLnB1c2gobmV3IENlbGwoeCwgeSkpOyAgICAgICAvL+a3u+WKoOaWsOeUn+WRvVxuICAgICAgfVxuICAgICAgaWYgKGRpc3RyaWN0W2tdICYmIHd0ZiA9PT0gR29kLkRJRSkge1xuICAgICAgICBkaXN0cmljdFtrXS5kaWUoKTsgICAgICAgIC8v5p2A5q2755Sf5ZG9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvL+eJqeernuWkqeaLqSzpgILogIXnlJ/lrZguLi5cbiAgICB0aGlzLmNlbGxzID0gdGhpcy5jZWxscy5maWx0ZXIoZCA9PiB7XG4gICAgICBpZiAoZC5zdGFnZSAhPT0gQ2VsbC5BRlRFUl9BTElWRSkgeyAgIC8v5Y2z5bCG5rS76L+H5p2l5ZKM5pys5p2l5bCx5rS7552A55qEXG4gICAgICAgIGQuYWxpdmUoKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBhZGRMaXZlcyhsaXZlcykge1xuICAgIEFycmF5LmlzQXJyYXkobGl2ZXMpICYmIGxpdmVzLm1hcChkID0+IHtcbiAgICAgIHRoaXMuY2VsbHMucHVzaChuZXcgQ2VsbChkWzBdLCBkWzFdKSk7XG4gICAgfSlcbiAgfVxuXG4gIHRvQmVPck5vdFRvQmUoeCwgeSkge1xuICAgIGNvbnN0IGNvdW50ID0gdGhpcy5jZWxscy5maWx0ZXIoZCA9PiB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBkLnN0YWdlICE9PSBDZWxsLlBSRV9BTElWRSAmJlxuICAgICAgICBNYXRoLmFicyhkLnggLSB4KSA8PSAxICYmXG4gICAgICAgIE1hdGguYWJzKGQueSAtIHkpIDw9IDEgJiZcbiAgICAgICAgKGQueCAhPT0geCB8fCBkLnkgIT09IHkpXG4gICAgICApXG4gICAgfSkubGVuZ3RoO1xuICAgIGlmIChjb3VudCA9PT0gMykge1xuICAgICAgcmV0dXJuIEdvZC5MSVZFO1xuICAgIH0gZWxzZSBpZiAoY291bnQgPT09IDIpIHtcbiAgICAgIHJldHVybiBHb2QuS0VFUDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIEdvZC5ESUU7XG4gICAgfVxuICB9XG59IiwiLy8gMe+8jiDlpoLmnpzkuIDkuKrnu4bog57lkajlm7TmnIkz5Liq57uG6IOe5Li655Sf77yI5LiA5Liq57uG6IOe5ZGo5Zu05YWx5pyJOOS4que7huiDnu+8ie+8jOWImeivpee7huiDnuS4uueUn++8iOWNs+ivpee7huiDnuiLpeWOn+WFiOS4uuatu++8jOWImei9rOS4uueUn++8jOiLpeWOn+WFiOS4uueUn++8jOWImeS/neaMgeS4jeWPmO+8iSDjgIJcbi8vIDLvvI4g5aaC5p6c5LiA5Liq57uG6IOe5ZGo5Zu05pyJMuS4que7huiDnuS4uueUn++8jOWImeivpee7huiDnueahOeUn+atu+eKtuaAgeS/neaMgeS4jeWPmO+8m1xuLy8gM++8jiDlnKjlhbblroPmg4XlhrXkuIvvvIzor6Xnu4bog57kuLrmrbvvvIjljbPor6Xnu4bog57oi6Xljp/lhYjkuLrnlJ/vvIzliJnovazkuLrmrbvvvIzoi6Xljp/lhYjkuLrmrbvvvIzliJnkv53mjIHkuI3lj5jvvIlcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2VsbCB7XG4gIHN0YXRpYyBQUkVfQUxJVkUgPSAwOyAgICAgIC8vMO+8muWNs+WwhuWtmOa0u1xuICBzdGF0aWMgQUxJVkUgPSAxOyAgICAgICAgICAvLzHvvJrlrZjmtLvvvIjlj6rmnInlpITkuo7lrZjmtLvnirbmgIHnmoTnu4bog57miY3kvJrlvbHlk43njq/looPvvIlcbiAgc3RhdGljIEFGVEVSX0FMSVZFID0gMjsgICAgLy8y77ya5Y2z5bCG5q275LqhXG5cbiAgY29uc3RydWN0b3IoeCwgeSkge1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcbiAgICB0aGlzLnN0YWdlID0gQ2VsbC5QUkVfQUxJVkU7XG4gIH1cblxuICBhbGl2ZSgpIHtcbiAgICB0aGlzLnN0YWdlID0gQ2VsbC5BTElWRTtcbiAgfVxuXG4gIGRpZSgpIHtcbiAgICB0aGlzLnN0YWdlID0gQ2VsbC5BRlRFUl9BTElWRTtcbiAgfVxufSIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmpzLXZpZXd7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZX0uanMtdmlldyAudG9vbGJhcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO3otaW5kZXg6MX0uanMtdmlldyAudG9vbGJhciBidXR0b257Y3Vyc29yOnBvaW50ZXI7bWFyZ2luOjEwcHggMTBweCAwIDB9LmpzLXZpZXcgLnNpZGViYXJ7d2lkdGg6NzBweDtoZWlnaHQ6MTAwJTtiYWNrZ3JvdW5kOmhzbGEoMCwwJSwxMDAlLC44KTtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjA7ei1pbmRleDoxfS5qcy12aWV3IC5zaWRlYmFyIC5tb2R1bGV7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtsaW5lLWhlaWdodDo1MHB4O3RleHQtYWxpZ246Y2VudGVyO2JvcmRlcjoxcHggc29saWQgIzk5OTttYXJnaW46MTBweCBhdXRvO2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQ6I2ZmZjtjb2xvcjojNjY2fS5qcy12aWV3IC5zaWRlYmFyIC5tb2R1bGU6aG92ZXJ7Ym94LXNoYWRvdzoxcHggMXB4IDVweCByZ2JhKDAsMCwwLC41KX0uanMtdmlldyAuY29udGVudHtiYWNrZ3JvdW5kOiMwMDA7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW59LmpzLXZpZXcgLmNvbnRlbnQgc3Zne3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7cG9zaXRpb246cmVsYXRpdmV9LmpzLXZpZXcgLmNvbnRlbnQgc3ZnIC5saW5rLXBhdGh7Y3Vyc29yOnBvaW50ZXJ9LmpzLXZpZXcgLmNvbnRlbnQgc3ZnIC5saW5rLXBhdGggLnBhdGgtaGlkZGVue2ZpbGw6bm9uZTtzdHJva2Utd2lkdGg6NnB4O3N0cm9rZTp0cmFuc3BhcmVudH0uanMtdmlldyAuY29udGVudCBzdmcgLmxpbmstcGF0aCAucGF0aC1kaXNwbGF5e2ZpbGw6bm9uZTtzdHJva2Utd2lkdGg6MnB4O3N0cm9rZTojOGFjMDA3O3N0cm9rZS1kYXNoYXJyYXk6NTtzdHJva2UtZGFzaG9mZnNldDoxMDthbmltYXRpb246b2Zmc2V0IC41cyBsaW5lYXIgaW5maW5pdGV9LmpzLXZpZXcgLmNvbnRlbnQgc3ZnIC5saW5rLXBhdGg6aG92ZXIgLnBhdGgtaGlkZGVue3N0cm9rZTojNTU1fUBrZXlmcmFtZXMgb2Zmc2V0e3Rve3N0cm9rZS1kYXNob2Zmc2V0OjB9fVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydCBEcm9wVGFyZ2V0IGZyb20gJy4vZHJvcC10YXJnZXQnO1xuZXhwb3J0IERyYWdTb3VyY2UgZnJvbSAnLi9kcmFnLXNvdXJjZSc7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYWNjZXB0cyA9IFtdLCBwcm9wcyA9IHt9KSB7XG4gIHJldHVybiBmdW5jdGlvbih3aWRnZXQpIHtcblxuICAgIGZ1bmN0aW9uIGdldERhdGEoZSkge1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZS5kYXRhVHJhbnNmZXIuZ2V0RGF0YShcInRleHRcIikpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZURyYWdFbnRlcihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlRHJhZ092ZXIoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZURyb3AoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgZGF0YSA9IGdldERhdGEoZSk7XG4gICAgICBpZiAoYWNjZXB0cy5pbmRleE9mKGRhdGEudHlwZSkgPT09IC0xKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHByb3BzLm9uRHJvcCAmJiBwcm9wcy5vbkRyb3AoZGF0YSwgZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLndpZGdldCxcbiAgICAgIHByb3BzOiB7XG4gICAgICAgIC4uLndpZGdldC5wcm9wcyxcbiAgICAgICAgb25EcmFnRW50ZXI6IGhhbmRsZURyYWdFbnRlcixcbiAgICAgICAgb25EcmFnT3ZlcjogaGFuZGxlRHJhZ092ZXIsXG4gICAgICAgIG9uRHJvcDogaGFuZGxlRHJvcFxuICAgICAgfVxuICAgIH07XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0eXBlLCBkYXRhKSB7XG4gIHJldHVybiBmdW5jdGlvbih3aWRnZXQpIHtcblxuICAgIGZ1bmN0aW9uIGhhbmRsZURyYWdTdGFydChlKSB7XG4gICAgICBlLmRhdGFUcmFuc2Zlci5zZXREYXRhKCd0ZXh0JywgSlNPTi5zdHJpbmdpZnkoeyB0eXBlLCBkYXRhIH0pKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVEcmFnKGUpIHtcblxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZURyYWdFbmQoZSkge1xuXG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLndpZGdldCxcbiAgICAgIHByb3BzOiB7XG4gICAgICAgIC4uLndpZGdldC5wcm9wcyxcbiAgICAgICAgZHJhZ2dhYmxlOiB0cnVlLFxuICAgICAgICBvbkRyYWdTdGFydDogaGFuZGxlRHJhZ1N0YXJ0LFxuICAgICAgICAvL29uRHJhZzogaGFuZGxlRHJhZyxcbiAgICAgICAgLy9vbmRyYWdlbmQ6IGhhbmRsZURyYWdFbmRcbiAgICAgIH1cbiAgICB9O1xuICB9XG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250ZXh0TWVudSBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5yZWZzLm1lbnUuZm9jdXMoKTtcbiAgfVxuXG4gIGhhbmRsZUNsaWNrID0gKGNiLCAuLi5wYXJhbXMpID0+IHtcbiAgICBjYiAmJiBjYiguLi5wYXJhbXMpO1xuICAgIHRoaXMucHJvcHMub25CbHVyKCk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgZGF0YSwgb25CbHVyIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGV4dC1tZW51XCI+XG4gICAgICAgIDx1bCB0YWJpbmRleD1cIjFcIiByZWY9XCJtZW51XCIgb25CbHVyPXtvbkJsdXJ9PlxuICAgICAgICAgIHtkYXRhLm1hcCgoZCwgaSkgPT4gKFxuICAgICAgICAgICAgPGxpIGtleT17aX0gb25DbGljaz17KC4uLnBhcmFtcykgPT4gdGhpcy5oYW5kbGVDbGljayhkLm9uQ2xpY2ssIC4uLnBhcmFtcyl9PntkLm5hbWV9PC9saT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufSIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnRleHQtbWVudXtiYWNrZ3JvdW5kOiNmZmY7Zm9udC1zaXplOjEycHg7Ym94LXNoYWRvdzoxcHggMXB4IDVweCByZ2JhKDAsMCwwLC41KTttaW4td2lkdGg6MTAwcHg7bWFyZ2luOjJweH0uY29udGV4dC1tZW51PnVse21hcmdpbjowO3BhZGRpbmc6MDtsaXN0LXN0eWxlOm5vbmU7Ym9yZGVyOjFweCBzb2xpZCAjZGRkfS5jb250ZXh0LW1lbnU+dWw+bGl7Y3Vyc29yOnBvaW50ZXI7cGFkZGluZzo1cHg7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZH0uY29udGV4dC1tZW51PnVsPmxpOmxhc3QtY2hpbGR7Ym9yZGVyLWJvdHRvbTpub25lfS5jb250ZXh0LW1lbnU+dWw+bGk6aG92ZXJ7YmFja2dyb3VuZDojZGRkfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuaW1wb3J0IERyYWcgZnJvbSAnbGliL2RyYWcnO1xuXG5jb25zdCBQQURESU5HID0gNTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnJpY2sgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIGhhbmRsZURyYWcgPSAoZG9tLCBtKSA9PiB7XG4gICAgbmV3IERyYWcoe1xuICAgICAgZG9tLFxuICAgICAgb25EcmFnOiAoZHgsIGR5KSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMub25EcmFnICYmIHRoaXMucHJvcHMub25EcmFnKG0sIGR4LCBkeSk7ICAgLy/mj5DljYfliLDniLbnu4Tku7bmmK/kuLrkuobmuLLmn5PlnZfkvY3nva7nmoTml7blgJnlkIzml7bmuLLmn5Pnur9cbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBtb2R1bGU6IGQsIG9uTGluaywgb25ab29tLCBvbkVkaXQsIG9uQ29udGV4dE1lbnUgfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDxnXG4gICAgICAgIGNsYXNzTmFtZT1cImJyaWNrXCJcbiAgICAgICAgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7ZC54IC0gZC53aWR0aCAvIDJ9LCAke2QueSAtIGQuaGVpZ2h0IC8gMn0pYH1cbiAgICAgID5cbiAgICAgICAgey8qIOeJteW8lee6v+inpuWPkeaMiemSriAqL31cbiAgICAgICAgPGcgY2xhc3NOYW1lPVwiaW8tYXJlYVwiIG9uQ2xpY2s9eygpID0+IG9uTGluayAmJiBvbkxpbmsoZCl9PlxuICAgICAgICAgIDxyZWN0IHg9ezB9IHk9ey1QQURESU5HfSB3aWR0aD17ZC53aWR0aH0gaGVpZ2h0PXtQQURESU5HfSAvPlxuICAgICAgICAgIDxyZWN0IHg9e2Qud2lkdGh9IHk9ezB9IHdpZHRoPXtQQURESU5HfSBoZWlnaHQ9e2QuaGVpZ2h0fSAvPlxuICAgICAgICAgIDxyZWN0IHg9ezB9IHk9e2QuaGVpZ2h0fSB3aWR0aD17ZC53aWR0aH0gaGVpZ2h0PXtQQURESU5HfSAvPlxuICAgICAgICAgIDxyZWN0IHg9ey1QQURESU5HfSB5PXswfSB3aWR0aD17UEFERElOR30gaGVpZ2h0PXtkLmhlaWdodH0gLz5cbiAgICAgICAgPC9nPlxuXG4gICAgICAgIHsvKiDnvKnmlL7op6blj5HmjInpkq4gKi99XG4gICAgICAgIDxnIGNsYXNzTmFtZT1cInpvb20tYXJlYVwiIG9uQ2xpY2s9eygpID0+IG9uWm9vbSAmJiBvblpvb20oZCl9PlxuICAgICAgICAgIDxyZWN0IHg9ey1QQURESU5HfSB5PXstUEFERElOR30gd2lkdGg9e1BBRERJTkd9IGhlaWdodD17UEFERElOR30gLz5cbiAgICAgICAgICA8cmVjdCB4PXtkLndpZHRofSB5PXstUEFERElOR30gd2lkdGg9e1BBRERJTkd9IGhlaWdodD17UEFERElOR30gLz5cbiAgICAgICAgICA8cmVjdCB4PXtkLndpZHRofSB5PXtkLmhlaWdodH0gd2lkdGg9e1BBRERJTkd9IGhlaWdodD17UEFERElOR30gLz5cbiAgICAgICAgICA8cmVjdCB4PXstUEFERElOR30geT17ZC5oZWlnaHR9IHdpZHRoPXtQQURESU5HfSBoZWlnaHQ9e1BBRERJTkd9IC8+XG4gICAgICAgIDwvZz5cblxuICAgICAgICA8ZyByZWY9e2RvbSA9PiBkLnNldERvbShkb20sIHRoaXMuaGFuZGxlRHJhZyl9IG9uQ29udGV4dE1lbnU9e29uQ29udGV4dE1lbnV9PlxuICAgICAgICAgIDxyZWN0IHdpZHRoPXtkLndpZHRofSBoZWlnaHQ9e2QuaGVpZ2h0fSAvPlxuICAgICAgICAgIDx0ZXh0IHg9e2Qud2lkdGggLyAyfSB5PXtkLmhlaWdodCAvIDJ9IG9uRG91YmxlQ2xpY2s9e29uRWRpdH0+e2QubmFtZX08L3RleHQ+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvZz5cbiAgICApXG4gIH1cbn0iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5icmljayAuaW8tYXJlYXtjdXJzb3I6Y3Jvc3NoYWlyfS5icmljayAuem9vbS1hcmVhIHJlY3Q6Zmlyc3QtY2hpbGR7Y3Vyc29yOm53LXJlc2l6ZX0uYnJpY2sgLnpvb20tYXJlYSByZWN0Om50aC1jaGlsZCgyKXtjdXJzb3I6bmUtcmVzaXplfS5icmljayAuem9vbS1hcmVhIHJlY3Q6bnRoLWNoaWxkKDMpe2N1cnNvcjpzZS1yZXNpemV9LmJyaWNrIC56b29tLWFyZWEgcmVjdDpudGgtY2hpbGQoNCl7Y3Vyc29yOnN3LXJlc2l6ZX0uYnJpY2sgcmVjdHtmaWxsOiNmZmY7c3Ryb2tlOiM5OTk7c3Ryb2tlLXdpZHRoOjFweH0uYnJpY2sgdGV4dHtmaWxsOiM2NjY7dGV4dC1hbmNob3I6bWlkZGxlO2RvbWluYW50LWJhc2VsaW5lOm1pZGRsZX0uYnJpY2sgdGV4dDpob3ZlcntmaWxsOiMwMDB9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGxvYWQodXJsKSB7XG4gIHZhciBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTtcbiAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICBzY3JpcHQudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnO1xuICBzY3JpcHQuc3JjID0gdXJsO1xuXG4gIGhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzY3JpcHQub25sb2FkID0gc2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCF0aGlzLnJlYWR5U3RhdGUgfHwgdGhpcy5yZWFkeVN0YXRlID09PSBcImxvYWRlZFwiIHx8IHRoaXMucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKXtcbiAgICAgICAgc2NyaXB0Lm9ubG9hZCA9IHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuICAgICAgICBoZWFkLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHV1aWQoc2VwID0gJycsIGxlbiA9IDI0KSB7XG4gIGNvbnN0IHMgPSBbXTtcbiAgY29uc3QgaGV4RGlnaXRzID0gJzAxMjM0NTY3ODlhYmNkZWYnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDM2OyBpKyspIHtcbiAgICBzW2ldID0gaGV4RGlnaXRzLnN1YnN0cihNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAweDEwKSwgMSk7XG4gIH1cbiAgc1sxNF0gPSAnNCc7ICAvLyBiaXRzIDEyLTE1IG9mIHRoZSB0aW1lX2hpX2FuZF92ZXJzaW9uIGZpZWxkIHRvIDAwMTBcbiAgc1sxOV0gPSBoZXhEaWdpdHMuc3Vic3RyKChzWzE5XSAmIDB4MykgfCAweDgsIDEpOyAgLy8gYml0cyA2LTcgb2YgdGhlIGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWQgdG8gMDFcbiAgc1s4XSA9IHNbMTNdID0gc1sxOF0gPSBzWzIzXSA9IHNlcDtcblxuICByZXR1cm4gcy5qb2luKCcnKS5zdWJzdHIoMCwgbGVuKTtcdC8v5YiG6ZqU56ymOiBcIi1cIlxufSIsImltcG9ydCBEZWZhdWx0LCB7IFRZUEVfVklFVyB9IGZyb20gJy4vZGVmYXVsdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpZXcgZXh0ZW5kcyBEZWZhdWx0IHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgc3VwZXIoe1xuICAgICAgLi4uY29uZmlnLFxuICAgICAgdHlwZTogVFlQRV9WSUVXXG4gICAgfSk7XG4gIH1cblxuICBvdXRwdXQoKSB7XG4gICAgLy90b2RvIOebruWJjeaaguaXtuaUr+aMgei+k+WHuuWIsOaOp+WItuWPsCzlkI7mnJ/mt7vliqDlhbbku5bovpPlh7rmlrnlvI/mlK/mjIFcbiAgICB0aGlzLmlucHV0Lm1hcChkID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGBbJHtkLmlkfV0gPj4+YCwgZC5vdXRwdXQoKSk7XG4gICAgfSk7XG4gIH1cbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCBQb3BvdmVyIGZyb20gJy4vcG9wb3Zlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbmZpZykge1xuICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO1xuXG4gIGZ1bmN0aW9uIGNsb3NlKC4uLmFyZ3MpIHtcbiAgICBpZiAoUmVhY3RET00udW5tb3VudENvbXBvbmVudEF0Tm9kZShkaXYpICYmIGRpdi5wYXJlbnROb2RlKSB7XG4gICAgICBkaXYucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkaXYpO1xuICAgIH1cbiAgICBpZiAoY29uZmlnLm9uQ2FuY2VsKSB7XG4gICAgICBjb25maWcub25DYW5jZWwoLi4uYXJncyk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgY29udGVudCA9IHtcbiAgICAuLi5jb25maWcuY29udGVudCxcbiAgICBwcm9wczoge1xuICAgICAgLi4uY29uZmlnLmNvbnRlbnQucHJvcHMsXG4gICAgICBvbkJsdXI6IGNsb3NlXG4gICAgfVxuICB9O1xuXG4gIFJlYWN0RE9NLnJlbmRlcigoXG4gICAgPFBvcG92ZXJcbiAgICAgIHg9e2NvbmZpZy54fVxuICAgICAgeT17Y29uZmlnLnl9XG4gICAgPlxuICAgICAge2NvbnRlbnR9XG4gICAgPC9Qb3BvdmVyPlxuICApLCBkaXYpO1xuXG4gIHJldHVybiB7XG4gICAgZGVzdHJveTogY2xvc2VcbiAgfTtcbn1cbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wb3ZlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5yZWN0ID0ge1xuICAgICAgeDogcHJvcHMueCxcbiAgICAgIHk6IHByb3BzLnlcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHgsIHkgfSA9IHRoaXMucmVjdDtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvcG92ZXJcIiBzdHlsZT17e2xlZnQ6IHgsIHRvcDogeX19PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn0iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5wb3BvdmVye3Bvc2l0aW9uOmFic29sdXRlfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIi8vdG9kbyDov5nkuKrlkI3lrZfkuI3lpb0s5Lul5ZCO6KaB5pS55ZCN5a2XXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9kYWwgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIGhhbmRsZUNhbmNlbCA9ICgpID0+IHtcbiAgICB0aGlzLnByb3BzLm9uQ2FuY2VsICYmIHRoaXMucHJvcHMub25DYW5jZWwoKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsXCIgb25DbGljaz17dGhpcy5oYW5kbGVDYW5jZWx9PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWNvbnRhaW5lclwiPlxuICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn0iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5tb2RhbHtwb3NpdGlvbjpmaXhlZDtsZWZ0OjA7dG9wOjA7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC41KX0ubW9kYWwsLm1vZGFsIC5tb2RhbC1jb250YWluZXJ7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5lZGl0b3J7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCBEaWFsb2cgZnJvbSAnLi9kaWFsb2cnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb25maWcpIHtcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcblxuICBmdW5jdGlvbiBjbG9zZSguLi5hcmdzKSB7XG4gICAgaWYgKFJlYWN0RE9NLnVubW91bnRDb21wb25lbnRBdE5vZGUoZGl2KSAmJiBkaXYucGFyZW50Tm9kZSkge1xuICAgICAgZGl2LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZGl2KTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy5vbkNhbmNlbCkge1xuICAgICAgY29uZmlnLm9uQ2FuY2VsKC4uLmFyZ3MpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHdpZHRoID0gY29uZmlnLndpZHRoIHx8IHdpbmRvdy5pbm5lcldpZHRoIC8gMjtcbiAgY29uc3QgaGVpZ2h0ID0gY29uZmlnLmhlaWdodCB8fCB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyO1xuICBjb25zdCB4ID0gdHlwZW9mKGNvbmZpZy54KSA9PT0gJ3VuZGVmaW5lZCcgPyAod2luZG93LmlubmVyV2lkdGggLSB3aWR0aCkgLyAyIDogY29uZmlnLng7XG4gIGNvbnN0IHkgPSB0eXBlb2YoY29uZmlnLnkpID09PSAndW5kZWZpbmVkJyA/ICh3aW5kb3cuaW5uZXJIZWlnaHQgLSBoZWlnaHQpIC8gMiA6IGNvbmZpZy55O1xuXG4gIFJlYWN0RE9NLnJlbmRlcigoXG4gICAgPERpYWxvZ1xuICAgICAgbmFtZT17Y29uZmlnLm5hbWUgfHwgJ+acquefpSd9XG4gICAgICBvbkNhbmNlbD17Y2xvc2V9XG4gICAgICB4PXt4fVxuICAgICAgeT17eX1cbiAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgID5cbiAgICAgIHtjb25maWcuY29udGVudH1cbiAgICA8L0RpYWxvZz5cbiAgKSwgZGl2KTtcblxuICByZXR1cm4ge1xuICAgIGRlc3Ryb3k6IGNsb3NlXG4gIH07XG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmltcG9ydCBEcmFnIGZyb20gJ2xpYi9kcmFnJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGlhbG9nIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDAsXG4gICAgd2lkdGg6IDYwMCxcbiAgICBoZWlnaHQ6IDQwMFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMucmVjdCA9IHtcbiAgICAgIHg6IHByb3BzLngsXG4gICAgICB5OiBwcm9wcy55LFxuICAgICAgd2lkdGg6IHByb3BzLndpZHRoLFxuICAgICAgaGVpZ2h0OiBwcm9wcy5oZWlnaHRcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBuZXcgRHJhZyh7XG4gICAgICBkb206IHRoaXMucmVmc1snZHJhZy1oYW5kbGVyJ10sXG4gICAgICBvbkRyYWc6IChkeCwgZHkpID0+IHtcbiAgICAgICAgdGhpcy5yZXNpemUoe1xuICAgICAgICAgIHg6IHRoaXMucmVjdC54ICsgZHgsXG4gICAgICAgICAgeTogdGhpcy5yZWN0LnkgKyBkeVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGhhbmRsZUNhbmNlbCA9ICgpID0+IHtcbiAgICB0aGlzLnByb3BzLm9uQ2FuY2VsICYmIHRoaXMucHJvcHMub25DYW5jZWwoKTtcbiAgfTtcblxuICBoYW5kbGVNaW4gPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ+acgOWwj+WMlicpXG4gIH07XG5cbiAgaGFuZGxlTWF4ID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLm9yaWdpblNpemUpIHtcbiAgICAgIHRoaXMucmVzaXplKHRoaXMub3JpZ2luU2l6ZSk7XG4gICAgICB0aGlzLm9yaWdpblNpemUgPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9yaWdpblNpemUgPSB0aGlzLnJlY3Q7XG4gICAgICB0aGlzLnJlc2l6ZSh7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcbiAgICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHRcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBoYW5kbGVSZXNpemUgPSAoZSwgdHlwZSkgPT4ge1xuICAgIGxldCBseCA9IGUucGFnZVg7XG4gICAgbGV0IGx5ID0gZS5wYWdlWTtcbiAgICBjb25zdCBoYW5kbGVab29tID0gKGV2KSA9PiB7XG4gICAgICBjb25zdCBkeCA9IGV2LnBhZ2VYIC0gbHg7XG4gICAgICBjb25zdCBkeSA9IGV2LnBhZ2VZIC0gbHk7XG4gICAgICBseCA9IGV2LnBhZ2VYO1xuICAgICAgbHkgPSBldi5wYWdlWTtcbiAgICAgIGxldCByZWN0ID0ge307XG4gICAgICBzd2l0Y2godHlwZSkge1xuICAgICAgICBjYXNlICdsZWZ0LXRvcCc6XG4gICAgICAgICAgcmVjdC54ID0gdGhpcy5yZWN0LnggKyBkeDtcbiAgICAgICAgICByZWN0LnkgPSB0aGlzLnJlY3QueSArIGR5O1xuICAgICAgICAgIHJlY3Qud2lkdGggPSB0aGlzLnJlY3Qud2lkdGggLSBkeDtcbiAgICAgICAgICByZWN0LmhlaWdodCA9IHRoaXMucmVjdC5oZWlnaHQgLSBkeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAndG9wJzpcbiAgICAgICAgICByZWN0LnkgPSB0aGlzLnJlY3QueSArIGR5O1xuICAgICAgICAgIHJlY3QuaGVpZ2h0ID0gdGhpcy5yZWN0LmhlaWdodCAtIGR5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdyaWdodC10b3AnOlxuICAgICAgICAgIHJlY3QueSA9IHRoaXMucmVjdC55ICsgZHk7XG4gICAgICAgICAgcmVjdC5oZWlnaHQgPSB0aGlzLnJlY3QuaGVpZ2h0IC0gZHk7XG4gICAgICAgICAgcmVjdC53aWR0aCA9IHRoaXMucmVjdC53aWR0aCArIGR4O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdyaWdodCc6XG4gICAgICAgICAgcmVjdC53aWR0aCA9IHRoaXMucmVjdC53aWR0aCArIGR4O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdyaWdodC1ib3R0b20nOlxuICAgICAgICAgIHJlY3QuaGVpZ2h0ID0gdGhpcy5yZWN0LmhlaWdodCArIGR5O1xuICAgICAgICAgIHJlY3Qud2lkdGggPSB0aGlzLnJlY3Qud2lkdGggKyBkeDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnYm90dG9tJzpcbiAgICAgICAgICByZWN0LmhlaWdodCA9IHRoaXMucmVjdC5oZWlnaHQgKyBkeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnbGVmdC1ib3R0b20nOlxuICAgICAgICAgIHJlY3QueCA9IHRoaXMucmVjdC54ICsgZHg7XG4gICAgICAgICAgcmVjdC53aWR0aCA9IHRoaXMucmVjdC53aWR0aCAtIGR4O1xuICAgICAgICAgIHJlY3QuaGVpZ2h0ID0gdGhpcy5yZWN0LmhlaWdodCArIGR5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdsZWZ0JzpcbiAgICAgICAgICByZWN0LnggPSB0aGlzLnJlY3QueCArIGR4O1xuICAgICAgICAgIHJlY3Qud2lkdGggPSB0aGlzLnJlY3Qud2lkdGggLSBkeDtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHRoaXMucmVzaXplKHJlY3QpO1xuICAgIH07XG4gICAgY29uc3QgaGFuZGxlTW91c2VVcCA9ICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVab29tKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlTW91c2VVcCk7XG4gICAgfTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgaGFuZGxlWm9vbSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVNb3VzZVVwKTtcbiAgfTtcblxuICByZXNpemUocmVjdCkge1xuICAgIHRoaXMucmVjdCA9IHsgLi4udGhpcy5yZWN0LCAuLi5yZWN0IH07XG4gICAgdGhpcy5yZWZzLmNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gYFxuICAgICAgbGVmdDogJHt0aGlzLnJlY3QueH1weDtcbiAgICAgIHRvcDogJHt0aGlzLnJlY3QueX1weDtcbiAgICAgIHdpZHRoOiAke3RoaXMucmVjdC53aWR0aH1weDtcbiAgICAgIGhlaWdodDogJHt0aGlzLnJlY3QuaGVpZ2h0fXB4O1xuICAgIGA7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBuYW1lLCBjaGlsZHJlbiB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHgsIHksIHdpZHRoLCBoZWlnaHQgfSA9IHRoaXMucmVjdDtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImRpYWxvZ1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRpYWxvZy1jb250YWluZXJcIiByZWY9XCJjb250YWluZXJcIiBzdHlsZT17e2xlZnQ6IHgsIHRvcDogeSwgd2lkdGgsIGhlaWdodH19PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGlhbG9nLWhlYWRlclwiIHJlZj1cImRyYWctaGFuZGxlclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG5zXCI+XG4gICAgICAgICAgICAgIDxhIG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2FuY2VsfT5cbiAgICAgICAgICAgICAgICA8c3ZnIHg9XCIwcHhcIiB5PVwiMHB4XCIgd2lkdGg9XCIxMHB4XCIgaGVpZ2h0PVwiMTBweFwiIHZpZXdCb3g9XCIwIC0yIDIwIDIwXCI+XG4gICAgICAgICAgICAgICAgICA8cG9seWdvbiBmaWxsPVwiIzRkMDAwMFwiIHBvaW50cz1cIjE1LjksNS4yIDE0LjgsNC4xIDEwLDguOSA1LjIsNC4xIDQuMSw1LjIgOC45LDEwIDQuMSwxNC44IDUuMiwxNS45IDEwLDExLjEgMTQuOCwxNS45IDE1LjksMTQuOCAxMS4xLDEwIFwiIC8+XG4gICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPGEgb25DbGljaz17dGhpcy5oYW5kbGVNaW59PlxuICAgICAgICAgICAgICAgIDxzdmcgeD1cIjBweFwiIHk9XCIwcHhcIiB3aWR0aD1cIjEwcHhcIiBoZWlnaHQ9XCIxMHB4XCIgdmlld0JveD1cIjAgLTIgMjAgMjBcIj5cbiAgICAgICAgICAgICAgICAgIDxyZWN0IGZpbGw9XCIjOTk1NzAwXCIgeD1cIjIuNFwiIHk9XCI5XCIgd2lkdGg9XCIxNS4xXCIgaGVpZ2h0PVwiMlwiIC8+XG4gICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPGEgb25DbGljaz17dGhpcy5oYW5kbGVNYXh9PlxuICAgICAgICAgICAgICAgIDxzdmcgeD1cIjBweFwiIHk9XCIwcHhcIiB3aWR0aD1cIjEwcHhcIiBoZWlnaHQ9XCIxMHB4XCIgdmlld0JveD1cIjAgMCAyMCAyMFwiPlxuICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbD1cIiMwMDY0MDBcIiBkPVwiTTUuMywxNkgxM0w0LDd2Ny43QzQuNiwxNC43LDUuMywxNS40LDUuMywxNnpcIiAvPlxuICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbD1cIiMwMDY0MDBcIiBkPVwiTTE0LjcsNEg3bDksOVY1LjNDMTUuNCw1LjMsMTQuNyw0LjYsMTQuNyw0elwiIC8+XG4gICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICB7bmFtZX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGlhbG9nLWJvZHlcIj5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiem9vbS1hcmVhIHpvb20tbGVmdC10b3BcIiBvbk1vdXNlRG93bj17KGUpID0+IHRoaXMuaGFuZGxlUmVzaXplKGUsICdsZWZ0LXRvcCcpfT48L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInpvb20tYXJlYSB6b29tLXRvcFwiIG9uTW91c2VEb3duPXsoZSkgPT4gdGhpcy5oYW5kbGVSZXNpemUoZSwgJ3RvcCcpfT48L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInpvb20tYXJlYSB6b29tLXJpZ2h0LXRvcFwiIG9uTW91c2VEb3duPXsoZSkgPT4gdGhpcy5oYW5kbGVSZXNpemUoZSwgJ3JpZ2h0LXRvcCcpfT48L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInpvb20tYXJlYSB6b29tLXJpZ2h0XCIgb25Nb3VzZURvd249eyhlKSA9PiB0aGlzLmhhbmRsZVJlc2l6ZShlLCAncmlnaHQnKX0+PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ6b29tLWFyZWEgem9vbS1yaWdodC1ib3R0b21cIiBvbk1vdXNlRG93bj17KGUpID0+IHRoaXMuaGFuZGxlUmVzaXplKGUsICdyaWdodC1ib3R0b20nKX0+PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ6b29tLWFyZWEgem9vbS1ib3R0b21cIiBvbk1vdXNlRG93bj17KGUpID0+IHRoaXMuaGFuZGxlUmVzaXplKGUsICdib3R0b20nKX0+PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ6b29tLWFyZWEgem9vbS1sZWZ0LWJvdHRvbVwiIG9uTW91c2VEb3duPXsoZSkgPT4gdGhpcy5oYW5kbGVSZXNpemUoZSwgJ2xlZnQtYm90dG9tJyl9PjwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiem9vbS1hcmVhIHpvb20tbGVmdFwiIG9uTW91c2VEb3duPXsoZSkgPT4gdGhpcy5oYW5kbGVSZXNpemUoZSwgJ2xlZnQnKX0+PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZGlhbG9ne3Bvc2l0aW9uOmZpeGVkO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO3BvaW50ZXItZXZlbnRzOm5vbmU7dXNlci1zZWxlY3Q6bm9uZX0uZGlhbG9nIC5kaWFsb2ctY29udGFpbmVye3BvaW50ZXItZXZlbnRzOmFsbDtwb3NpdGlvbjphYnNvbHV0ZTtiYWNrZ3JvdW5kOiNlY2VjZWM7Ym9yZGVyLXJhZGl1czo0cHg7Ym94LXNoYWRvdzowIDAgMXB4IHJnYmEoMCwwLDAsLjMxKSwwIDAgNXB4IHJnYmEoMCwwLDAsLjE4KSwwIDhweCA1MHB4IHJnYmEoMCwwLDAsLjMpfS5kaWFsb2cgLmRpYWxvZy1jb250YWluZXIgLmRpYWxvZy1oZWFkZXJ7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxO3dpZHRoOjEwMCU7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjttaW4taGVpZ2h0OjIycHg7YmFja2dyb3VuZC1pbWFnZTotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2VkZWRlZCwjZWRlZGVkIDFweCwjZTdlN2U3IDJweCwjZDFkMWQxKTtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjYWZhZmFmO2JvcmRlci10b3A6MXB4IHNvbGlkICNmNmY2ZjY7Ym9yZGVyLXJhZGl1czo1cHggNXB4IDAgMDtwYWRkaW5nOjAgM3B4fS5kaWFsb2cgLmRpYWxvZy1jb250YWluZXIgLmRpYWxvZy1oZWFkZXIgLmJ0bnN7ZGlzcGxheTpmbGV4O3dpZHRoOjYxcHh9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuZGlhbG9nLWhlYWRlciAuYnRucyBhe3dpZHRoOjEycHg7aGVpZ2h0OjEycHg7Ym9yZGVyOjFweCBzb2xpZCAjZmZhMTJhO2JvcmRlci1yYWRpdXM6NTAlO21hcmdpbjoxcHggNHB4IDAgNXB4O2xpbmUtaGVpZ2h0OjA7YmFja2dyb3VuZDojZmZiZDJlfS5kaWFsb2cgLmRpYWxvZy1jb250YWluZXIgLmRpYWxvZy1oZWFkZXIgLmJ0bnMgYSBzdmd7d2lkdGg6MTBweDtoZWlnaHQ6MTBweDtvcGFjaXR5OjB9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuZGlhbG9nLWhlYWRlciAuYnRucyBhOmZpcnN0LWNoaWxke2JhY2tncm91bmQ6I2ZmNWY1Nztib3JkZXItY29sb3I6I2ZmNDYzZn0uZGlhbG9nIC5kaWFsb2ctY29udGFpbmVyIC5kaWFsb2ctaGVhZGVyIC5idG5zIGE6bGFzdC1jaGlsZHtiYWNrZ3JvdW5kOiMyOGM5NDA7Ym9yZGVyLWNvbG9yOiMxMmFjMjh9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuZGlhbG9nLWhlYWRlciAuYnRuczpob3ZlciBhIHN2Z3tvcGFjaXR5OjF9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuZGlhbG9nLWhlYWRlciAudGl0bGV7Zm9udC1zaXplOjEycHg7Y29sb3I6IzRkNGQ0ZDtmbGV4LWdyb3c6MTtmbGV4LXNocmluazoxO3RleHQtYWxpZ246Y2VudGVyO3doaXRlLXNwYWNlOm5vd3JhcDt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO292ZXJmbG93OmhpZGRlbjtwYWRkaW5nLXJpZ2h0OjYwcHh9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuZGlhbG9nLWJvZHl7Ym9yZGVyLXJhZGl1czowIDAgNHB4IDRweDtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlO3BhZGRpbmctdG9wOjIycHg7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7b3ZlcmZsb3c6aGlkZGVufS5kaWFsb2cgLmRpYWxvZy1jb250YWluZXIgLnpvb20tYXJlYXtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjF9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuem9vbS1hcmVhLnpvb20tbGVmdC1ib3R0b20sLmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuem9vbS1hcmVhLnpvb20tbGVmdC10b3AsLmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuem9vbS1hcmVhLnpvb20tcmlnaHQtYm90dG9tLC5kaWFsb2cgLmRpYWxvZy1jb250YWluZXIgLnpvb20tYXJlYS56b29tLXJpZ2h0LXRvcHt3aWR0aDo1cHg7aGVpZ2h0OjVweDt6LWluZGV4OjJ9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuem9vbS1hcmVhLnpvb20tYm90dG9tLC5kaWFsb2cgLmRpYWxvZy1jb250YWluZXIgLnpvb20tYXJlYS56b29tLXRvcHt3aWR0aDoxMDAlO2hlaWdodDo1cHh9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuem9vbS1hcmVhLnpvb20tbGVmdCwuZGlhbG9nIC5kaWFsb2ctY29udGFpbmVyIC56b29tLWFyZWEuem9vbS1yaWdodHt3aWR0aDo1cHg7aGVpZ2h0OjEwMCV9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuem9vbS1hcmVhLnpvb20tbGVmdC10b3B7Y3Vyc29yOm53c2UtcmVzaXplO2xlZnQ6MDt0b3A6MH0uZGlhbG9nIC5kaWFsb2ctY29udGFpbmVyIC56b29tLWFyZWEuem9vbS1yaWdodC10b3B7Y3Vyc29yOm5lc3ctcmVzaXplO3JpZ2h0OjA7dG9wOjB9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuem9vbS1hcmVhLnpvb20tbGVmdC1ib3R0b217Y3Vyc29yOm5lc3ctcmVzaXplO2xlZnQ6MDtib3R0b206MH0uZGlhbG9nIC5kaWFsb2ctY29udGFpbmVyIC56b29tLWFyZWEuem9vbS1yaWdodC1ib3R0b217Y3Vyc29yOm53c2UtcmVzaXplO3JpZ2h0OjA7Ym90dG9tOjB9LmRpYWxvZyAuZGlhbG9nLWNvbnRhaW5lciAuem9vbS1hcmVhLnpvb20tdG9we2N1cnNvcjpucy1yZXNpemU7bGVmdDowO3RvcDowfS5kaWFsb2cgLmRpYWxvZy1jb250YWluZXIgLnpvb20tYXJlYS56b29tLWJvdHRvbXtjdXJzb3I6bnMtcmVzaXplO2xlZnQ6MDtib3R0b206MH0uZGlhbG9nIC5kaWFsb2ctY29udGFpbmVyIC56b29tLWFyZWEuem9vbS1sZWZ0e2N1cnNvcjpldy1yZXNpemU7bGVmdDowO3RvcDowfS5kaWFsb2cgLmRpYWxvZy1jb250YWluZXIgLnpvb20tYXJlYS56b29tLXJpZ2h0e2N1cnNvcjpldy1yZXNpemU7cmlnaHQ6MDt0b3A6MH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmltcG9ydCAqIGFzIGFwcCBmcm9tICdhcHAnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaW5kZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIGhhbmRsZU9wZW5BcHAoZCkge1xuICAgIGFwcC5vcGVuKGQua2V5LCB7d2lkdGg6IDYwMCwgaGVpZ2h0OiA0MDB9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBhcHBzID0gW1xuICAgICAge25hbWU6ICfnlJ/lkb3muLjmiI8nLCB0eXBlOiAnZ2FtZScsIGtleTogJ2dhbWUtb2YtbGlmZSd9LFxuICAgICAge25hbWU6ICflj6/op4bljJbnvJbnqIvlt6XlhbcnLCB0eXBlOiAndG9vbCcsIGtleTogJ2pzLXZpZXcnfSxcbiAgICAgIHtuYW1lOiAnSlPnvJbovpHlmagnLCB0eXBlOiAndG9vbCcsIGtleTogJ2VkaXRvcid9LFxuICAgICAge25hbWU6ICdDaHJvbWUnLCB0eXBlOiAndG9vbCcsIGtleTogJ2Nocm9tZSd9XG4gICAgXTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpbmRlclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNpZGViYXJcIj5cbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwibWVudVwiPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8c3Bhbj7kuKrkurrmlLbol488L3NwYW4+XG4gICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJzdWItbWVudVwiPlxuICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJhY3RpdmVcIj5cbiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImljb25mb250IGljb24tYXBwLXN0b3JlXCIgLz4mbmJzcDsmbmJzcDvlupTnlKjnqIvluo9cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImljb25mb250IGljb24tZG9jdW1lbnRcIiAvPiZuYnNwOyZuYnNwO+aWh+aho1xuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiaWNvbmZvbnQgaWNvbi1kZXNrdG9wXCIgLz4mbmJzcDsmbmJzcDvmoYzpnaJcbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImljb25mb250IGljb24tZG93bmxvYWRcIiAvPiZuYnNwOyZuYnNwO+S4i+i9vVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiaWNvbmZvbnQgaWNvbi1yZWNlbnRcIiAvPiZuYnNwOyZuYnNwO+acgOi/keS9v+eUqFxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpbmRlci1ib2R5XCI+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAge2FwcHMubWFwKChkLCBpKSA9PiAoXG4gICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8YSBvbkRvdWJsZUNsaWNrPXsoKSA9PiB0aGlzLmhhbmRsZU9wZW5BcHAoZCl9PlxuICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPXtgaWNvbmZvbnQgaWNvbi0ke2QudHlwZX1gfSAvPiZuYnNwO3tkLm5hbWV9XG4gICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn0iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5maW5kZXJ7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt1c2VyLXNlbGVjdDpub25lfS5maW5kZXIgLnNpZGViYXJ7d2lkdGg6MTUwcHg7aGVpZ2h0OjEwMCU7ZmxvYXQ6bGVmdDtiYWNrZ3JvdW5kOiNkNmQ2ZDY7cGFkZGluZzo1cHggMH0uZmluZGVyIC5zaWRlYmFyIC5tZW51LC5maW5kZXIgLnNpZGViYXIgLnN1Yi1tZW51e21hcmdpbjowO3BhZGRpbmc6MDtsaXN0LXN0eWxlOm5vbmV9LmZpbmRlciAuc2lkZWJhciAubWVudXtmb250LXNpemU6MTJweH0uZmluZGVyIC5zaWRlYmFyIC5tZW51PmxpPnNwYW57cGFkZGluZy1sZWZ0OjVweH0uZmluZGVyIC5zaWRlYmFyIC5zdWItbWVudSBsaXtmb250LXNpemU6MTRweDtjb2xvcjojMTgxODE4O2hlaWdodDoyNHB4O2xpbmUtaGVpZ2h0OjI0cHg7cGFkZGluZy1sZWZ0OjE1cHh9LmZpbmRlciAuc2lkZWJhciAuc3ViLW1lbnUgbGkgaXtjb2xvcjojNjY2fS5maW5kZXIgLnNpZGViYXIgLnN1Yi1tZW51IGxpLmFjdGl2ZXtiYWNrZ3JvdW5kOiM4NDhkOTF9LmZpbmRlciAuZmluZGVyLWJvZHl7b3ZlcmZsb3c6aGlkZGVuO2hlaWdodDoxMDAlfS5maW5kZXIgLmZpbmRlci1ib2R5IHVse21hcmdpbjowO3BhZGRpbmc6MDtsaXN0LXN0eWxlOm5vbmU7Zm9udC1zaXplOjEycHg7d2lkdGg6MjAwcHg7aGVpZ2h0OjEwMCU7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjZDlkOWQ5fS5maW5kZXIgLmZpbmRlci1ib2R5IHVsIGxpe2hlaWdodDoxOHB4O2xpbmUtaGVpZ2h0OjE4cHh9LmZpbmRlciAuZmluZGVyLWJvZHkgdWwgbGkgYXtkaXNwbGF5OmJsb2NrO3BhZGRpbmctbGVmdDo1cHg7Y3Vyc29yOnBvaW50ZXJ9LmZpbmRlciAuZmluZGVyLWJvZHkgdWwgbGkgYSBpe2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiM2NjZ9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCcm93c2VyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGFkZHI6ICdodHRwczovL2NvZGVwZW4uaW8vbGFueXVlY2hlbidcbiAgICB9O1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlwcmVzcycsIHRoaXMuaGFuZGxlS2V5KTtcbiAgfVxuXG4gIGhhbmRsZUtleSA9IChlKSA9PiB7XG4gICAgaWYgKGUua2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgIGlmICghZS50YXJnZXQudmFsdWUubWF0Y2goL2h0dHBzPzpcXC9cXC8vKSkge1xuICAgICAgICBlLnRhcmdldC52YWx1ZSA9ICdodHRwOi8vJyArIGUudGFyZ2V0LnZhbHVlO1xuICAgICAgfVxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGFkZHI6IGUudGFyZ2V0LnZhbHVlXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgaGFuZGxlUmVmcmVzaCA9ICgpID0+IHtcbiAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgYWRkciB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJyb3dzZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0YWItYmFyXCI+XG4gICAgICAgICAgdGFi5qCPXG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFkZHJlc3MtYmFyXCI+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpPjxpIGNsYXNzTmFtZT1cImljb25mb250IGljb24tbGVmdFwiIC8+PC9saT5cbiAgICAgICAgICAgIDxsaT48aSBjbGFzc05hbWU9XCJpY29uZm9udCBpY29uLXJpZ2h0XCIgLz48L2xpPlxuICAgICAgICAgICAgPGxpIG9uQ2xpY2s9e3RoaXMuaGFuZGxlUmVmcmVzaH0+PGkgY2xhc3NOYW1lPVwiaWNvbmZvbnQgaWNvbi1yZWZyZXNoXCIgLz48L2xpPlxuICAgICAgICAgICAgPGxpPjxpIGNsYXNzTmFtZT1cImljb25mb250IGljb24taG9tZVwiIC8+PC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJhZGRyZXNzXCI+XG4gICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGRlZmF1bHRWYWx1ZT17YWRkcn0gLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPC91bD5cblxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJib2R5XCI+XG4gICAgICAgICAgPGlmcmFtZSBzcmM9e2FkZHJ9IGZyYW1lYm9yZGVyPVwiMFwiPjwvaWZyYW1lPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufSIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJyb3dzZXJ7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZX0uYnJvd3NlciAudGFiLWJhcntoZWlnaHQ6MjVweH0uYnJvd3NlciAuYWRkcmVzcy1iYXJ7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZDtoZWlnaHQ6MjVweH0uYnJvd3NlciAuYWRkcmVzcy1iYXIgdWx7bWFyZ2luOjA7cGFkZGluZzowO2xpc3Qtc3R5bGU6bm9uZTtkaXNwbGF5OmZsZXg7aGVpZ2h0OjIycHh9LmJyb3dzZXIgLmFkZHJlc3MtYmFyIHVsIGxpe3BhZGRpbmc6MCA1cHg7Ym9yZGVyLXJhZGl1czo1MCU7Y3Vyc29yOnBvaW50ZXI7bGluZS1oZWlnaHQ6MjJweH0uYnJvd3NlciAuYWRkcmVzcy1iYXIgdWwgbGk6aG92ZXJ7YmFja2dyb3VuZDojZTBlMGUwfS5icm93c2VyIC5hZGRyZXNzLWJhciB1bCBsaSBpe2ZvbnQtc2l6ZToxMnB4fS5icm93c2VyIC5hZGRyZXNzLWJhciB1bCBsaS5hZGRyZXNze2ZsZXg6MTtib3JkZXItcmFkaXVzOjB9LmJyb3dzZXIgLmFkZHJlc3MtYmFyIHVsIGxpLmFkZHJlc3M6aG92ZXJ7YmFja2dyb3VuZDpub25lfS5icm93c2VyIC5hZGRyZXNzLWJhciB1bCBsaS5hZGRyZXNzIGlucHV0e3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Ym9yZGVyOm5vbmV9LmJyb3dzZXIgLmJvZHl7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUxcHg7Ym90dG9tOjA7bGVmdDowO3JpZ2h0OjB9LmJyb3dzZXIgLmJvZHkgaWZyYW1le3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEb2NrIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuICBoYW5kbGVDbGljayhkKSB7XG4gICAgdGhpcy5wcm9wcy5vbkNsaWNrICYmIHRoaXMucHJvcHMub25DbGljayhkKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGRhdGEgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJkb2NrXCI+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICB7ZGF0YS5tYXAoZCA9PiAoXG4gICAgICAgICAgICA8bGkga2V5PXtkLmtleX0+XG4gICAgICAgICAgICAgIDxzcGFuPntkLm5hbWV9PC9zcGFuPlxuICAgICAgICAgICAgICA8YSBvbkNsaWNrPXsoKSA9PiB0aGlzLmhhbmRsZUNsaWNrKGQpfT5cbiAgICAgICAgICAgICAgICA8aW1nIHNyYz17YHB1YmxpYy9pbWcvZG9jay8ke2Qua2V5fS5wbmdgfSAvPlxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZG9jayB1bHtsaXN0LXN0eWxlOm5vbmU7bWFyZ2luOjA7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC41KTtib3JkZXItcmFkaXVzOjEwcHggMTBweCAwIDA7aGVpZ2h0Ojc0cHg7cGFkZGluZzoxMHB4fS5kb2NrIHVsIGxpe3BhZGRpbmc6MCA1cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmV9LmRvY2sgdWwgbGkgYXtjdXJzb3I6cG9pbnRlcn0uZG9jayB1bCBsaSBhIGltZ3t3aWR0aDo1MHB4Oy13ZWJraXQtYm94LXJlZmxlY3Q6YmVsb3cgMnB4IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLGxlZnQgdG9wLGxlZnQgYm90dG9tLGZyb20odHJhbnNwYXJlbnQpLGNvbG9yLXN0b3AoLjcsdHJhbnNwYXJlbnQpLHRvKGhzbGEoMCwwJSwxMDAlLC41KSkpO3RyYW5zaXRpb246YWxsIC4zczt0cmFuc2Zvcm0tb3JpZ2luOjUwJSA5MCV9LmRvY2sgdWwgbGkgc3Bhbntwb2ludGVyLWV2ZW50czpub25lO2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTtib3R0b206MTAwcHg7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjgpO2NvbG9yOiNmZmY7cGFkZGluZzo0cHggMDtib3JkZXItcmFkaXVzOjVweDt0ZXh0LWFsaWduOmNlbnRlcjt3aGl0ZS1zcGFjZTpub3dyYXA7Zm9udC1zaXplOjEycHh9LmRvY2sgdWwgbGk6aG92ZXIgc3BhbntkaXNwbGF5OmJsb2NrfS5kb2NrIHVsIGxpOmhvdmVyIGltZ3t0cmFuc2Zvcm06c2NhbGUoMS44KTttYXJnaW46MCAyMHB4fS5kb2NrIHVsIGxpOmhvdmVyK2xpIGEgaW1ne3RyYW5zZm9ybTpzY2FsZSgxLjIpO21hcmdpbjowIDE1cHh9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xuXG5pbXBvcnQgZnMgZnJvbSAnb3B0aW9uL2ZzLmpzb24nO1xuaW1wb3J0IERyYWcgZnJvbSAnbGliL2RyYWcnO1xuXG5pbXBvcnQgKiBhcyBhcHAgZnJvbSAnYXBwJztcblxuY29uc3QgR1JJRF9TSVpFID0gMTAwO1xuY29uc3QgUk9XX1NJWkUgPSA1O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGcyBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBmaW5kKGZzLCBwYXRoLCBjdXJyZW50UGF0aCA9ICcvJykge1xuICAgIGN1cnJlbnRQYXRoID0gYCR7Y3VycmVudFBhdGh9LyR7ZnMucGF0aH1gLnJlcGxhY2UoL1xcL3syLH0vLCAnLycpO1xuICAgIGlmIChwYXRoID09PSBjdXJyZW50UGF0aCkge1xuICAgICAgcmV0dXJuIGZzO1xuICAgIH1cbiAgICBpZiAoZnMuY2hpbGRyZW4pIHtcbiAgICAgIGZvciAobGV0IGMgb2YgZnMuY2hpbGRyZW4pIHtcbiAgICAgICAgY29uc3QgcmVzID0gRnMuZmluZChjLCBwYXRoLCBjdXJyZW50UGF0aCk7XG4gICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuZnNEYXRhID0gRnMuZmluZChmcywgcHJvcHMucGF0aCk7XG4gICAgdGhpcy5mc0RhdGEgPSB7XG4gICAgICAuLi50aGlzLmZzRGF0YSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLmZzRGF0YS5jaGlsZHJlbi5tYXAoKGQsIGkpID0+ICh7XG4gICAgICAgIC4uLmQsXG4gICAgICAgIHg6IE1hdGguZmxvb3IoaSAvIFJPV19TSVpFKSAgKiBHUklEX1NJWkUsXG4gICAgICAgIHk6IGkgJSBST1dfU0laRSAqIEdSSURfU0laRSArIDIyXG4gICAgICB9KSlcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLmZzRGF0YS5jaGlsZHJlbi5tYXAoZiA9PiB7XG4gICAgICBuZXcgRHJhZyh7XG4gICAgICAgIGRvbTogZi5kb20sXG4gICAgICAgIG9uRHJhZzogKGR4LCBkeSkgPT4ge1xuICAgICAgICAgIGYueCA9IGYueCArIGR4O1xuICAgICAgICAgIGYueSA9IGYueSArIGR5O1xuICAgICAgICAgIGYuZG9tLnN0eWxlLmNzc1RleHQgPSBgXG4gICAgICAgICAgICBsZWZ0OiAke2YueH1weDtcbiAgICAgICAgICAgIHRvcDogJHtmLnl9cHg7XG4gICAgICAgICAgYDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBoYW5kbGVPcGVuQXBwKGQpIHtcbiAgICBhcHAub3BlbihkLmtleSwge3dpZHRoOiA2MDAsIGhlaWdodDogNDAwfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgZmlsZXMgPSB0aGlzLmZzRGF0YS5jaGlsZHJlbjtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZzXCI+XG4gICAgICAgIHtmaWxlcy5tYXAoKGQsIGkpID0+IChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZzLWl0ZW1cIiB0YWJJbmRleD17aX0ga2V5PXtpfSByZWY9eyhkb20pID0+IGZpbGVzW2ldLmRvbSA9IGRvbX0gc3R5bGU9e3tsZWZ0OiBkLngsIHRvcDogZC55fX0+XG4gICAgICAgICAgICA8YSBvbkRvdWJsZUNsaWNrPXsoKSA9PiB0aGlzLmhhbmRsZU9wZW5BcHAoZCl9PlxuICAgICAgICAgICAgICA8aW1nIHNyYz17ZC5pY29uIHx8ICdwdWJsaWMvaW1nL2ljb24vZGVmYXVsdC5wbmcnfS8+XG4gICAgICAgICAgICAgIDxsYWJlbD57ZC5jaGlsZHJlbiA/IGQucGF0aCA6IGQubmFtZX08L2xhYmVsPlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufSIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmZze3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7cG9pbnRlci1ldmVudHM6bm9uZTtsZWZ0OjA7dG9wOjB9LmZzLC5mcyAuZnMtaXRlbXtwb3NpdGlvbjphYnNvbHV0ZX0uZnMgLmZzLWl0ZW17cG9pbnRlci1ldmVudHM6YWxsO3BhZGRpbmc6MTVweH0uZnMgLmZzLWl0ZW0gYXtkaXNwbGF5OmJsb2NrfS5mcyAuZnMtaXRlbSBhIGltZ3t3aWR0aDo2MHB4O2Rpc3BsYXk6YmxvY2s7cG9pbnRlci1ldmVudHM6bm9uZX0uZnMgLmZzLWl0ZW0gYSBsYWJlbHtjb2xvcjojZmZmO2Rpc3BsYXk6YmxvY2s7bWFyZ2luLXRvcDo1cHg7d2lkdGg6MTAwJTt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTJweDt0ZXh0LXNoYWRvdzoxcHggMXB4IDJweCByZ2JhKDAsMCwwLC41KX1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN5c01lbnVCYXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJzeXMtbWVudS1iYXJcIj5cbiAgICAgICAgPHVsPlxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImljb25mb250IGljb24tYXBwbGVcIiAvPlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgPGxpIHRhYkluZGV4PXsxfT5GaW5kZXI8L2xpPlxuICAgICAgICAgIDxsaSB0YWJJbmRleD17Mn0+5paH5Lu2PC9saT5cbiAgICAgICAgICA8bGkgdGFiSW5kZXg9ezN9Pue8lui+kTwvbGk+XG4gICAgICAgICAgPGxpIHRhYkluZGV4PXs0fT7mmL7npLo8L2xpPlxuICAgICAgICAgIDxsaSB0YWJJbmRleD17NX0+5YmN5b6APC9saT5cbiAgICAgICAgICA8bGkgdGFiSW5kZXg9ezZ9Pueql+WPozwvbGk+XG4gICAgICAgICAgPGxpIHRhYkluZGV4PXs3fT7luK7liqk8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc3lzLW1lbnUtYmFye3Bvc2l0aW9uOmZpeGVkO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDAlO2hlaWdodDoyMnB4O2JhY2tncm91bmQ6aHNsYSgwLDAlLDEwMCUsLjgpO2JvcmRlci1ib3R0b206MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjMpO2JveC1zaGFkb3c6MCAycHggMTBweCByZ2JhKDAsMCwwLC4xKX0uc3lzLW1lbnUtYmFyIHVse21hcmdpbjowIDEwcHg7cGFkZGluZzowO2xpc3Qtc3R5bGU6bm9uZTtmb250LXNpemU6MTRweH0uc3lzLW1lbnUtYmFyIHVsIGxpe2Zsb2F0OmxlZnQ7cGFkZGluZzowIDEwcHg7Y29sb3I6IzI1MzMzYn0uc3lzLW1lbnUtYmFyIHVsIGxpOmZvY3Vze2JhY2tncm91bmQ6IzMzODVlZjtjb2xvcjojZmZmfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGF1bmNocGFkIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHNlYXJjaDogJydcbiAgICB9XG4gIH1cblxuICBoYW5kbGVTZWFyY2ggPSAoZSkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc2VhcmNoOiBlLnRhcmdldC52YWx1ZVxuICAgIH0pO1xuICB9O1xuXG4gIGhhbmRsZUNsaWNrID0gKGUsIGQpID0+IHtcbiAgICBjb25zb2xlLmxvZygnPT09PT1oYW5kbGVDbGljaz09PT09JywgZClcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgc2VhcmNoIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGF1bmNocGFkXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2VhcmNoXCIgb25DbGljaz17ZSA9PiB7ZS5zdG9wUHJvcGFnYXRpb24oKTsgZS5wcmV2ZW50RGVmYXVsdCgpO319PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2VhcmNoLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiaWNvbmZvbnQgaWNvbi1zZWFyY2hcIiAvPlxuICAgICAgICAgICAgPGlucHV0IG9uQ2hhbmdlPXt0aGlzLmhhbmRsZVNlYXJjaH0gdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIuaQnOe0olwiLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICB7ZGF0YS5maWx0ZXIoZCA9PiAhc2VhcmNoIHx8IGQubmFtZS5tYXRjaChuZXcgUmVnRXhwKHNlYXJjaCwgJ2knKSkpLm1hcChkID0+IChcbiAgICAgICAgICAgIDxsaSBrZXk9e2Qua2V5fT5cbiAgICAgICAgICAgICAgPGEgb25DbGljaz17KGUpID0+IHRoaXMuaGFuZGxlQ2xpY2soZSwgZCl9PlxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtgcHVibGljL2ltZy9kb2NrLyR7ZC5rZXl9LnBuZ2B9IC8+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPHNwYW4+e2QubmFtZX08L3NwYW4+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3R5bGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9zdHlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubGF1bmNocGFke3BhZGRpbmc6MjVweCAxMDBweCAxMDBweDtoZWlnaHQ6MTAwJX0ubGF1bmNocGFkIC5zZWFyY2h7dGV4dC1hbGlnbjpjZW50ZXJ9LmxhdW5jaHBhZCAuc2VhcmNoIC5zZWFyY2gtY29udGFpbmVye2Rpc3BsYXk6aW5saW5lO3Bvc2l0aW9uOnJlbGF0aXZlfS5sYXVuY2hwYWQgLnNlYXJjaCAuc2VhcmNoLWNvbnRhaW5lciBpe3Bvc2l0aW9uOmFic29sdXRlO3RvcDo2cHg7bGVmdDo4cHg7Zm9udC1zaXplOjEycHg7Y29sb3I6aHNsYSgwLDAlLDEwMCUsLjgpfS5sYXVuY2hwYWQgLnNlYXJjaCAuc2VhcmNoLWNvbnRhaW5lciBpbnB1dHtiYWNrZ3JvdW5kOmhzbGEoMCwwJSwxMDAlLC4xKTtib3JkZXI6MXB4IHNvbGlkIGhzbGEoMCwwJSwxMDAlLC4zKTtjb2xvcjpoc2xhKDAsMCUsMTAwJSwuOCk7Ym9yZGVyLXJhZGl1czoycHg7d2lkdGg6MjUwcHg7aGVpZ2h0OjI1cHg7bGluZS1oZWlnaHQ6MjVweDt0ZXh0LWluZGVudDoyNXB4fS5sYXVuY2hwYWQgLnNlYXJjaCAuc2VhcmNoLWNvbnRhaW5lciBpbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjpoc2xhKDAsMCUsMTAwJSwuOCl9LmxhdW5jaHBhZCAuc2VhcmNoIC5zZWFyY2gtY29udGFpbmVyIGlucHV0OmZvY3Vze2JvcmRlci1jb2xvcjpoc2xhKDAsMCUsMTAwJSwuNSl9LmxhdW5jaHBhZCB1bHtsaXN0LXN0eWxlOm5vbmU7bWFyZ2luOjA7cGFkZGluZzowfS5sYXVuY2hwYWQgdWwgbGl7cG9zaXRpb246cmVsYXRpdmU7ZmxvYXQ6bGVmdDttYXJnaW46MjBweH0ubGF1bmNocGFkIHVsIGxpIGF7Y3Vyc29yOnBvaW50ZXJ9LmxhdW5jaHBhZCB1bCBsaSBhIGltZ3t3aWR0aDo2NHB4fS5sYXVuY2hwYWQgdWwgbGkgc3BhbntkaXNwbGF5OmJsb2NrO2NvbG9yOiNmZmY7Zm9udC1zaXplOjEycHg7dGV4dC1hbGlnbjpjZW50ZXJ9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==