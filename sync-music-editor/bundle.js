!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.imgSize=function(e,t){var n=document.createElement("img");n.src=e,n.onload=function(){t(n.clientWidth,n.clientHeight),document.body.removeChild(n),n=null},document.body.appendChild(n)},t.pending=function(e,t){t?e.innerHTML='<div class="pending"><i class="iconfont icon-loading"></i></div>':e.removeChild(e.querySelector(".pending"))},t.fileUpload=function(e){var t=document.createElement("input");t.setAttribute("type","file"),t.click(),t.onchange=function(t){t.target.files.length&&e(t.target.files[0])}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scoreImages=function(e){return(0,r.default)("public/score-images.json",{music_id:e})},t.loadScoreImage=function(e,t){return(0,i.upload)("/music/loadScoreImage?music_id="+e,t)},t.loadScoreData=function(e,t){return(0,i.upload)("/music/loadScoreData?music_id="+e,t)},t.saveScoreData=function(e,t,n){return(0,r.default)("/music/SaveScoreData",{music_id:e,img_name:t,data_score:n},"POST")},t.mapDetail=function(e){return(0,r.default)("public/map-detail.json",{music_id:e})},t.loadMap=function(e,t){return(0,i.upload)("/music/loadmap?type=images&music_id="+e,t)},t.loadSummary=function(e,t){return(0,i.upload)("/music/loadSummary?type=files&music_id="+e,t)},t.summaryUpdate=function(e,t,n){return(0,r.default)("/music/SummaryUpdate",{music_id:e,map_id:t,summary:n},"POST")},t.detail=function(e){return(0,r.default)("public/music-detail.json",{music_id:e})};var i=n(10),r=function(e){return e&&e.__esModule?e:{default:e}}(i)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var r=Symbol("event-instance"),o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),Object.defineProperty(this,"handles",{value:{},enumerable:!1,configurable:!0,writable:!0})}return i(e,[{key:"on",value:function(e,t){return this.handles[e]||(this.handles[e]=[]),this.handles[e].push(t),this}},{key:"emit",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];this.handles[e]&&this.handles[e].map(function(e){e.apply(void 0,n)})}},{key:"off",value:function(e,t){this.handles[e]&&(this.handles[e]=this.handles[e].filter(function(e){return e!==t}),0===this.handles[e].length&&delete this.handles[e])}}],[{key:"getInstance",value:function(){return window[r]||(window[r]=new e),window[r]}}]),e}();t.default=o.getInstance()},function(e,t,n){"use strict";n(4);var i=s(n(9)),r=s(n(11)),o=s(n(13)),a=n(0);function s(e){return e&&e.__esModule?e:{default:e}}!function(){var e=new i.default({container:document.getElementById("music-score-container")}),t=new r.default({container:document.getElementById("music-spectrum-container")}),n=new o.default({container:document.getElementById("music-audio-container")});document.getElementById("btn-back").addEventListener("click",function(e){console.log("[返回开始播放]"),n.wavesurfer.play(0),document.getElementById("btn-start").setAttribute("data-playing","true")}),document.getElementById("btn-start").addEventListener("click",function(e){console.log("[播放/暂停]"),n.wavesurfer.playPause(),n.wavesurfer.isPlaying()?e.target.setAttribute("data-playing","true"):e.target.removeAttribute("data-playing")}),document.getElementById("btn-down").addEventListener("click",function(e){console.log("[降速播放]"),n.speed=n.speed<=.6?1:n.speed-.1,n.wavesurfer.setPlaybackRate(n.speed),document.getElementById("speed-label").innerHTML="x"+n.speed.toFixed(1)}),document.getElementById("btn-pic").addEventListener("click",function(e){console.log("[上传音频图谱]"),(0,a.fileUpload)(function(e){t.loadMap(1,e)})}),document.getElementById("btn-db").addEventListener("click",function(e){console.log("[加载小节线]"),(0,a.fileUpload)(function(e){t.loadSummary(1,e)})}),document.getElementById("btn-add").addEventListener("click",function(e){console.log("[添加小节线]",t.adding),t.toggleAdding(),e.target.style.color=t.adding?"green":"#000"}),document.getElementById("btn-delete").addEventListener("click",function(e){console.log("[删除小节线]"),t.handleRemove()}),document.getElementById("btn-save").addEventListener("click",function(e){console.log("[保存]"),t.updateSummary()}),document.getElementById("btn-music-pic").addEventListener("click",function(t){console.log("[上传乐谱图片]"),(0,a.fileUpload)(function(t){e.loadScoreImage(1,t)})}),document.getElementById("btn-music-db").addEventListener("click",function(t){console.log("[上传乐谱]"),(0,a.fileUpload)(function(t){e.loadScoreData(1,t)})}),document.getElementById("btn-music-save").addEventListener("click",function(t){console.log("[保存]"),e.saveScoreData()})}()},function(e,t,n){var i=n(5);"string"==typeof i&&(i=[[e.i,i,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(7)(i,r);i.locals&&(e.exports=i.locals)},function(e,t,n){(e.exports=n(6)(!1)).push([e.i,'*{user-select:none;box-sizing:border-box}body,html{margin:0;width:100%;height:100%}@keyframes rotate{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}#app,#app .pending{width:100%;height:100%}#app .pending{position:absolute;left:0;top:0;display:flex;align-items:center;justify-content:center;background:rgba(0,0,0,.05)}#app .pending .icon-loading{font-size:18px;animation:rotate 2s linear Infinite}#app .tool{position:absolute;left:10px;top:60%;margin-top:-40px;z-index:1000;border:1px solid #ddd;background:#f1f1f1;border-radius:5px;padding:5px}#app .tool a{cursor:pointer;color:#000;position:relative}#app .tool a i{font-size:24px;pointer-events:none}#app .tool a #speed-label{pointer-events:none;position:absolute;top:-14px;left:0;transform:scale(.5)}#app .tool a#btn-start[data-playing] .icon-play:before{content:"\\E61E"}#app .tool a:hover{color:#333}#app .tool.tool-music{top:50px}#app #music-score{height:60%}#app #music-score #music-score-container{position:relative;width:100%;height:100%}#app #music-spectrum{height:30%}#app #music-spectrum #music-spectrum-container{position:relative;width:100%;height:100%}#app #music-audio{height:10%}#app #music-audio #music-audio-container{position:relative;width:100%;height:100%}',""])},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",i=e[3];if(!i)return n;if(t&&"function"==typeof btoa){var r=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(i),o=i.sources.map(function(e){return"/*# sourceURL="+i.sourceRoot+e+" */"});return[n].concat(o).concat([r]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var i={},r=0;r<this.length;r++){var o=this[r][0];"number"==typeof o&&(i[o]=!0)}for(r=0;r<e.length;r++){var a=e[r];"number"==typeof a[0]&&i[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){var i={},r=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),o=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),a=null,s=0,u=[],c=n(8);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(v(r.parts[a],t))}else{var s=[];for(a=0;a<r.parts.length;a++)s.push(v(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:s}}}}function l(e,t){for(var n=[],i={},r=0;r<e.length;r++){var o=e[r],a=t.base?o[0]+t.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};i[a]?i[a].parts.push(s):n.push(i[a]={id:a,parts:[s]})}return n}function f(e,t){var n=o(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=u[u.length-1];if("top"===e.insertAt)i?i.nextSibling?n.insertBefore(t,i.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=o(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,r)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function p(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),m(t,e.attrs),f(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function v(e,t){var n,i,r,o;if(t.transform&&e.css){if(!(o=t.transform(e.css)))return function(){};e.css=o}if(t.singleton){var u=s++;n=a||(a=p(t)),i=y.bind(null,n,u,!1),r=y.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),f(e,t),t}(t),i=function(e,t,n){var i=n.css,r=n.sourceMap,o=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||o)&&(i=c(i));r&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([i],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,n,t),r=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=p(t),i=function(e,t){var n=t.css,i=t.media;i&&e.setAttribute("media",i);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),r=function(){h(n)});return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else r()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=r()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=l(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(s=i[a.id]).refs--,r.push(s)}e&&d(l(e,t),t);for(o=0;o<r.length;o++){var s;if(0===(s=r[o]).refs){for(var u=0;u<s.parts.length;u++)s.parts[u]();delete i[s.id]}}}};var g=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function y(e,t,n,i){var r=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=g(t,r);else{var o=document.createTextNode(r),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,i=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var r,o=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?e:(r=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:i+o.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(1)),o=n(0);var a={brace:"AliceBlue",barline:"blue","bar-connector":"blue",ledger:"green",head:"green"},s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=t.container;this.width=n.clientWidth,this.height=n.clientHeight,this.container=n,this.zr=[],this.setMusic(1)}return i(e,[{key:"setMusic",value:function(e){var t=this;(0,o.pending)(this.container,!0),r.scoreImages(e).then(function(e){console.log("==score==",e);var n=document.createElement("div");n.className="swiper-wrapper",t.container.appendChild(n),t.swiper=new Swiper(t.container,{direction:"vertical"}),200===e.code&&(e.data.map(function(e,i){var r=t.createPage(e,i);n.appendChild(r)}),t.swiper.update(),(0,o.pending)(t.container,!1))})}},{key:"zoomed",value:function(e,t){var n=d3.event.transform,i=this.width*n.k,r=this.height*n.k,o=(this.width-i)/2,a=Math.min(Math.max(n.y,this.height-r),0);d3.event.transform.x=o,d3.event.transform.y=a,e.position=[o,a],e.scale=[n.k,n.k],e.dirty()}},{key:"createPage",value:function(e,t){var n=this,i=document.createElement("div");i.className="swiper-slide",i.style.cssText="\n      width: "+this.width+"px;\n      height: "+this.height+"px;\n    ",this.zr[t]=zrender.init(i);var r=new zrender.Group;this.zr[t].add(r);var o=this.width/(e.width/e.high*this.height)*1.1;d3.select(i).call(d3.zoom().scaleExtent([1,o]).on("zoom",function(){n.zoomed(r,e)})),r.add(new zrender.Image({style:{image:e.img,x:(this.width-e.width/e.high*this.height)/2,y:0,width:e.width/e.high*this.height,height:this.height}}));var a=this.createBarLine(e);return r.add(a),i}},{key:"createBarLine",value:function(e){var t=this.height/e.high,n=new zrender.Group;return n.position=[(this.width-e.width/e.high*this.height)/2,0],e.data_score.map(function(e){a[e.nodeName]&&n.add(new zrender.Rect({shape:{x:e.x*t,y:e.y*t,width:e.w*t,height:e.h*t},style:{fill:a[e.nodeName]}}))}),n}},{key:"loadScoreImage",value:function(e,t){r.loadScoreImage(e,t).then(function(e){console.log("[上传乐谱图片成功], res")})}},{key:"loadScoreData",value:function(e,t){r.loadScoreData(e,t).then(function(e){console.log("[上传乐谱成功], res")})}},{key:"saveScoreData",value:function(){r.saveScoreData(1,1,[]).then(function(e){console.log("[保存音频图谱相关数据成功]",e)})}}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],i=!0,r=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{!i&&s.return&&s.return()}finally{if(r)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();t.upload=function(e,t){var n=new FormData;return n.append("file",t),fetch(e,{method:"POST",mode:"cors",credentials:"include",headers:{"Content-Type":"multipart/form-data;boundary=---123"},body:n})},t.default=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"GET";"GET"===n&&(e+="?"+Object.entries(t).map(function(e){var t=i(e,2);return t[0]+"="+t[1]}).join("&"));var r={headers:{Accept:"application/json","Content-Type":"application/json"},method:n,credentials:"include",body:"POST"===n?JSON.stringify(t):void 0};return fetch(e,r).then(function(e){return e.json()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],i=!0,r=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{!i&&s.return&&s.return()}finally{if(r)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),r=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(1)),a=c(n(12)),s=n(0),u=c(n(2));function c(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.handleAdding=function(e){var t=document.createElement("div"),i=document.createElement("label");i.innerHTML="小节名: ",i.style.fontSize="12px",t.appendChild(i);var r=document.createElement("input");t.appendChild(r);var s=document.createElement("button");s.innerHTML="确定";var u=n.transform,c=(e.offsetX-u.x)/n.width/u.k;s.addEventListener("click",function(){var e=r.value.trim();e&&!n.summary[e]&&(n.summary[e]={start_time:n.end*c,perc:c},o.summaryUpdate(n.data.musid_id,n.data.id,n.summary).then(function(t){n.addLine(e,{perc:c}),d.close()}))}),t.appendChild(s);var d=(0,a.default)(t,{x:e.event.pageX,y:e.event.pageY})},this.handleRemove=function(){Object.entries(n.toRemove).map(function(e){var t=i(e,2),r=t[0];t[1];delete n.summary[r]}),o.summaryUpdate(n.data.musid_id,n.data.id,n.summary).then(function(e){Object.entries(n.toRemove).map(function(e){var t=i(e,2),r=(t[0],t[1]);n.lines.remove(r)}),n.toRemove={}})};var r=t.container;this.container=r,this.width=r.clientWidth,this.height=r.clientHeight,this.transform={k:1,x:0,y:0},this.toRemove={},d3.select(this.container).call(d3.zoom().scaleExtent([1,512]).on("zoom",function(){n.zoomed()})),this.setMusic(1),u.default.on("tick",function(e,t){n.mark&&(n.mark.position=[t*n.width,0],n.mark.dirty())})}return r(e,[{key:"zoomed",value:function(){var e=d3.event.transform,t=this.width*e.k,n=this.height*Math.min(e.k,1),i=Math.min(Math.max(e.x,this.width-t),0),r=Math.min(Math.max(e.y,this.height-n),0);d3.event.transform.x=i,d3.event.transform.y=r,this.transform=d3.event.transform,this.g.position=[i,r],this.g.scale=[e.k,Math.min(e.k,1)],this.lines.children().map(function(t){t.scale=[1/e.k,1]}),this.mark.scale=[1/e.k,1],this.g.dirty()}},{key:"setMusic",value:function(e){var t=this;(0,s.pending)(this.container,!0),o.mapDetail(e).then(function(e){console.log("==spectrum==",e);var n=document.createElement("div");n.style.cssText="width: "+t.width+"px; height: "+t.height+"px;",t.container.appendChild(n),t.zr=new zrender.init(n),t.g=new zrender.Group,t.zr.add(t.g),200===e.code&&(t.data=e.data,t.summary=e.data.summary_data_original,t.end=+t.summary.end.start_time,t.createBg(e.data),t.addLines(),t.addMark()),(0,s.pending)(t.container,!1)})}},{key:"createBg",value:function(e){this.g.add(new zrender.Image({style:{image:e.img,x:0,y:0,width:e.width/e.high*this.height,height:this.height}}))}},{key:"addMark",value:function(){this.mark||(this.mark=new zrender.Group,this.mark.add(new zrender.Line({shape:{x1:0,y1:0,x2:0,y2:this.height},style:{stroke:"#fff",shadowColor:"#fff",shadowBlur:5}})),this.g.add(this.mark))}},{key:"addLines",value:function(){var e=this;this.lines=new zrender.Group,this.g.add(this.lines),Object.entries(this.summary).map(function(t){var n=i(t,2),r=n[0],o=n[1];e.addLine(r,o)})}},{key:"addLine",value:function(e,t){var n=this,i=new zrender.Group;this.lines.add(i),i.position=[t.perc*this.width,0],i.add(new zrender.Text({style:{text:e,textFill:"white",transformText:!1}})),i.add(new zrender.Line({shape:{x1:0,y1:0,x2:0,y2:this.height},style:{stroke:"purple"}}).on("click",function(){n.adding||(console.log("[click line]"),n.toRemove[e]?(delete n.toRemove[e],this.attr({style:{lineWidth:1,stroke:"purple"}})):(n.toRemove[e]=i,this.attr({style:{lineWidth:2,stroke:"red"}})))}))}},{key:"loadMap",value:function(e,t){o.loadMap(e,t).then(function(e){console.log("[上传音频图谱成功], res")})}},{key:"loadSummary",value:function(e,t){o.loadSummary(e,t).then(function(e){console.log("[加载小节线], res")})}},{key:"updateSummary",value:function(){o.summaryUpdate(1,1,this.summary).then(function(e){console.log("[保存音频图谱相关数据成功]",e)})}},{key:"toggleAdding",value:function(){this.adding=!this.adding;var e=this.zr.dom.querySelector("canvas");this.adding?(e.style.cursor="crosshair",this.g.on("click",this.handleAdding)):(e.style.cursor="pointer",this.g.off("click",this.handleAdding))}}]),e}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=t.x,i=t.y,r=document.createElement("div");return r.className="popover",r.tabIndex=1,r.appendChild(e),r.addEventListener("blur",function(){console.log("==========")}),r.style.cssText="\n    padding: 5px;\n    border-radius: 3px;\n    background: #fff;\n    position: absolute;\n    z-index: 2000;\n    left: "+n+"px;\n    top: "+i+"px;\n  ",document.body.appendChild(r),r.focus(),{close:function(){document.body.removeChild(r)}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(1)),o=n(0),a=function(e){return e&&e.__esModule?e:{default:e}}(n(2));var s=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var i=t.container;this.container=i,this.speed=1,this.width=i.clientWidth,this.height=i.clientHeight;var r=document.createElement("div");r.style.width=this.width+"px",r.style.height=this.height+"px",this.container.appendChild(r),this.pendingContainer=document.createElement("div"),this.pendingContainer.style.cssText="\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      left: 0;\n      top: 0;\n      pointer-event: none;\n    ",this.container.appendChild(this.pendingContainer),this.wavesurfer=WaveSurfer.create({container:r,waveColor:"green",progressColor:"purple",height:this.height}),this.wavesurfer.on("ready",function(){console.log("[wavesurfer ready]"),n.duration=n.wavesurfer.getDuration(),(0,o.pending)(n.pendingContainer,!1)}),this.wavesurfer.on("audioprocess",function(e){a.default.emit("tick",e,e/n.duration)}),this.wavesurfer.on("seek",function(e){a.default.emit("tick",e*n.duration,e)}),this.loadMusic(1)}return i(e,[{key:"loadMusic",value:function(e){var t=this;(0,o.pending)(this.pendingContainer,!0),r.detail(e).then(function(e){200===e.code&&t.wavesurfer.load(e.data.music_file)})}}]),e}();t.default=s}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,